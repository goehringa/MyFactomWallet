{"version":3,"sources":["vote/shared/SectionHeader.js","header/CustomNodeForm.js","context/FactomCliContext.js","header/HelpModal.js","header/Header.js","withRootTheme.js","context/WalletController.js","context/SeedContext.js","context/SeedController.js","context/FactomCliController.js","context/NetworkController.js","context/VoteContext.js","vote/create/VOTE_CONSTANTS.js","context/VoteController.js","context/IdentityContext.js","context/IdentityController.js","Disclaimer.js","TestnetWarningBar.js","addWallet/ImportTypeForm.js","addWallet/ImportFctForm.js","addWallet/ImportEcForm.js","addWallet/NewSeedForm.js","walletManager/shared/BalanceFormatter.js","addWallet/GenerateAddressTable.js","addWallet/LedgerForm.js","addWallet/SeedForm.js","addWallet/ImportSeedForm.js","addWallet/AddWalletStepContent.js","addWallet/AddWalletStepper.js","addWallet/AddWalletModal.js","walletManager/Sidebar.js","component/logo/SVGLogo.js","walletManager/shared/AddressInfoHeader.js","walletManager/SendTransactionPreview.js","walletManager/SendFactoidForm.js","walletManager/ConvertTransactionPreview.js","walletManager/ConvertECForm.js","walletManager/ViewPrivateKeyForm.js","walletManager/AddressInfoForm.js","walletManager/TransactionList.js","walletManager/AddressInfoTab.js","walletManager/WalletTabContent.js","walletManager/WalletManager.js","addWallet/AddInitialWallet.js","vote/listing/VoteTable.js","vote/listing/VoteListing.js","vote/shared/ExplorerLink.js","component/form/FormTextField.js","vote/view/BinaryVoteForm.js","vote/view/ApprovalVoteForm.js","vote/view/SingleOptionVoteForm.js","vote/view/InstantRunoffVoteForm.js","vote/view/CommitVoteForm.js","vote/view/RevealVoteForm.js","vote/shared/EligibleVotersList.js","vote/shared/VoteSummary.js","vote/view/ParticipantsTab.js","vote/view/VoteResult.js","vote/view/VoteTabContent.js","vote/create/EligibleVotersForm.js","vote/create/SubmitVoteForm.js","vote/create/PreviewVote.js","ledgerIdentity/CreateLedgerIdForm.js","vote/create/FinalStep.js","vote/create/VoteConfiguration.js","component/form/FormSelectField.js","vote/create/CreateVoteForm.js","vote/create/CreateVoteStepper.js","ledgerIdentity/SetLedgerIdForm.js","ledgerIdentity/LedgerIdentityManager.js","AppRouter.js","App.js","registerServiceWorker.js","index.js","component/logo/ledgerLogo.svg","context/NetworkContext.js","context/WalletContext.js","headerLogo.png","context/LedgerController.js","component/logo/factomProtocolLogo.svg","context/LedgerContext.js"],"names":["SectionHeader","_ref","disableGutterBottom","text","color","textColor","react_default","a","createElement","Typography_default","gutterBottom","variant","style","CustomNodeForm","event","target","type","which","preventDefault","_Yup$object$shape","_this","this","classes","props","formik_esm","initialValues","host","port","onSubmit","values","actions","console","log","handleCustomNode","validationSchema","Yup","shape","Object","defineProperty","required","render","isSubmitting","errors","touched","onKeyPress","handleKeyPress","shared_SectionHeader","id","CustomNodeForm_FormTextField","error","name","label","msg","className","errorText","Button_default","disabled","React","Component","FormTextField","_ref2","field","TextField_default","assign","inputProps","spellCheck","maxLength","autoComplete","margin","fullWidth","multiline","withStyles","theme","fontSize","FactomCliContext","createContext","withFactomCli","BaseComponent","Consumer","factomCliController","AddWalletModal","state","open","handleOpen","setState","handleClose","menuText","onClick","Modal_default","aria-labelledby","onClose","Paper_default","modalContent","rel","href","position","boxShadow","shadows","top","left","transform","minHeight","padding","maxWidth","ButtonAppBar","voteAnchorEl","networkAnchorEl","openCustomNodeForm","handleOpenCustomNodeForm","handleCloseCustomNodeForm","handleVoteClick","currentTarget","handleVoteClose","handleNetworkClick","handleNetworkClose","handleTestnet","walletController","handleNetworkChange","handleMainnet","handleWallet","readyToManageWallet","isWalletEmpty","setReadyToManageWallet","_this$props","networkProps","networkController","blockHeight","_this$state","testnetActive","network","AppBar_default","root","Toolbar_default","toolbar","IconButton_default","menuButton","aria-label","Link","to","logo","src","alt","flex","testnetHeader","Fragment","aria-owns","aria-haspopup","ExpandMore_default","Menu_default","anchorEl","Boolean","MenuItem_default","component","replace","HelpModal","CloudDoneOutlined_default","titleAccess","aria-describedby","header_CustomNodeForm","enhancer","_flowRight","withNetwork","withWalletContext","flexGrow","marginBottom","width","marginTop","marginRight","borderStyle","borderWidth","subMenuText","spacing","unit","backgroundColor","palette","background","paper","createMuiTheme","withRootTheme","styles","CssBaseline_default","FACTOSHI_MULTIPLIER","LOCAL_STORAGE_KEY","LOCAL_STORAGE_PROPERTY_WHITELIST","WalletController","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","smartSetState","newState","afterSetState","arguments","length","undefined","_noop","Promise","resolve","_flow","saveStateToLocalStorage","filterArray","addressArray","filter","address","saveLocally","map","_pick","_this$state$addresses","objectSpread","addresses","mainnet","testnet","storageAddresses","fct","ec","localStorage","setItem","JSON","stringify","hydrateStateWithLocalStorage","asyncToGenerator","regenerator_default","mark","_callee","localStorageAddresses","prepareArray","wrap","_context","prev","next","parse","getItem","_isNil","addr_o","balance","transactions","prevState","setDefaultIndex","updateBalances","force","isStateHydrated","stop","value","_callee2","_context2","changeNetwork","connectToServer","_x","apply","deleteAddress","_ref3","_callee3","activeAddressIndex_o","addressList","_context3","toConsumableArray","splice","index","_x2","addAddressTransaction","transactionID","push","updateAddress","_ref4","_callee4","nickname","_context4","_x3","_x4","_x5","_isEmpty","getFactoidAddresses","getEntryCreditAddresses","selectAddress","verifyKey","privateKey","_ref5","getPublicAddress","valueOf","err","addAddress","address_o","addAddresses","getNextIndex","_ref6","_callee5","_context5","concat","_x6","_x7","getActiveAddress","getAddresses","updateWalletBalance","_ref7","_callee6","wallet","_context6","factomCli","getBalance","sent","abrupt","_x8","_callee7","_ref9","_ref9$force","_ref10","_ref11","factoidAddresses","ecAddresses","_args7","_context7","all","slicedToArray","getEntryCreditRate","_callee8","_context8","getFactoshiFee","_callee9","ecRate","exampleAddress","fee","_context9","Transaction","builder","input","Number","MAX_SAFE_INTEGER","output","build","computeRequiredFees","rcdType","getFactoidFee","_callee10","factoshiFee","_context10","newStandardAddress","importType","newSeedAddress","newLedgerAddress","WalletContext","Provider","children","SeedContext","withSeed","seedController","keyToFctAddress","key","seedToPrivateFctAddress","keyToECAddress","seedToPrivateEcAddress","SeedController","getSeedAddresses","mnemonic","startIndex","amount","result","bip32Account","factombip44","FactomBIP44","generateFactoidPrivateKey","generateEntryCreditPrivateKey","signWithSeed","toAddr","signedTX","createFactoidTransaction","createEntryCreditPurchaseTransaction","verifySeed","derivedAddress","isValidPublicFctAddress","isValidPublicEcAddress","getPrivateKey","getRandomMnemonic","randomMnemonic","FactomCliController","defaultConnectionParams","path","debugPath","protocol","rejectUnauthorized","retry","retries","factor","minTimeout","maxTimeout","updateBlockHeight","height","timestamp","getDirectoryBlockHead","blockTimestamp","getEstimatedBlockTimestamp","minutes","moment","utc","clone","add","getDefaultConnectionParams","connectionParams","apiHost","apiPort","defaultsDeep","newFactomCli","FactomCli","blockHeightTimerId","setInterval","clearInterval","NetworkController","factoidAbbreviation","factoidAbbreviationFull","ecAbbreviation","ecAbbreviationFull","explorerURL","voteRegistrationChainID","voteApiUrl","NetworkContext","VoteContext","withVote","voteController","BINARY_CONFIG","numOptions","SINGLE_OPTION_CONFIG","APPROVAL_CONFIG","INSTANT_RUNOFF_CONFIG","VOTE_TYPE_DATA","binary","singleOption","approval","instantRunoff","ALL_ELIGIBLE_VOTERS","PARTICIPANTS_ONLY","HASH_ALGO_VALUES","REGEX_CHAIN_ID","POLL_STATUSES","discussion","displayValue","commit","reveal","complete","PUBLIC_KEYS_RESOLVER","gql","_templateObject","VoteController","client","ApolloClient","uri","publicKeysResolver","identityChainId","data","query","variables","chain","_get","newFactomVoteManager","FactomVoteManager","privateKeysResolver","submitVote","voteData","ecPrivateAddress","factomVoteManager","createVote","commitVote","voteChainId","vote","voter","revealVote","voterId","getPhaseEndBlock","_ref8","commitStart","commitEnd","revealEnd","workingHeight","getPollStatus","getPollType","voteType","maxOptions","pollType_o","react_apollo_esm","IdentityContext","IDENTITY_VERSION","IdentityController","registerIdentity","idPubKeys","idNames","ecPrivateKey","content","entryBuilder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","identity-version","keys","Entry","Symbol","iterator","done","extId","t0","return","finish","Chain","ConfirmationDialogRaw","handleAgree","handleChange","nextProps","other","objectWithoutProperties","Dialog_default","disableBackdropClick","disableEscapeKeyDown","DialogTitle_default","align","Warning_default","DialogContent_default","DialogActions_default","ConfirmationDialog","_this2","Disclaimer_ConfirmationDialogRaw","appBar","bottom","paddingTop","marginLeft","warningIcon","toolbarSpace","ImportTypeForm","handleNext","FormControl_default","FormLabel_default","RadioGroup_default","onChange","e","updateImportType","getImportTypes","option","FormControlLabel_default","control","Radio_default","fctAddrPath","ImportFctForm","_this$props$walletCon","factoidAddress","fctAddress_o","get","trim","test","findIndex","ImportFctForm_FormTextField","handleBack","ImportEcForm","entryCreditAddress","ecAddress_o","ImportEcForm_FormTextField","helperText","NewSeedForm","step","nextStep","setMnemonic","oneOf","fontWeight","warningText","NewSeedForm_FormTextField","autoFocus","FormatFCTBalance","factoshiBalance","factoidBalance","parseInt","toLocaleString","maximumFractionDigits","FormatECBalance","entryCreditBalance","BalanceFormatter_FormatFCTBalance","BalanceFormatter_FormatECBalance","GenerateAddressTable","loading","addGeneratedAddress","arrayHelpers","newAddress","validateNickname","userAddressNicknames","userAddressList","indexOf","getNext","getNextFive","generatedAddressList","setFieldValue","userAddresses","title","Table_default","TableHead_default","TableRow_default","CustomCell","TableBody_default","checkboxPath","nicknamePath","duplicate","Tooltip_default","Checkbox_default","checked","labelPlacement","form","BalanceFormatter","find","validate","errorTextSmall","TableFooter_default","CircularProgress_default","thickness","head","paddingLeft","paddingRight","body","TableCell","overflowX","maxHeight","common","black","white","getTitle","LedgerForm","retryConnection","ledgerStatus","ledgerController","getLedgerAddresses","ledgerConnected","hasAddressSelected","formValues","startsWith","some","enableReinitialize","validAddresses","addWallet_GenerateAddressTable","withLedger","SeedForm","ImportSeedForm","validMnemonic","ImportSeedForm_FormTextField","placeholder","AddWalletStepContent","activeStep","addWallet_ImportTypeForm","addWallet_ImportFctForm","addWallet_ImportEcForm","addWallet_NewSeedForm","addWallet_ImportSeedForm","addWallet_LedgerForm","addWallet_SeedForm","getStandardSteps","getSeedAddressSteps","stepMap","importSeed","new","ledger","AddWalletStepper","initialState","getSteps","handleReset","handleCloseText","steps","sectionHeaderText","Stepper_default","stepper","Step_default","StepLabel_default","AddWalletStepper_TestnetFinalStep","AddWalletStepper_MainnetFinalStep","addWallet_AddWalletStepContent","MainnetFinalStep","TestnetFinalStep","testnetWarning","OpenInNew_default","minWidth","borderColor","display","center","button","addWallet_AddWalletStepper","Sidebar","addressContainer","listfactoidAddresses","expanded","nicknameStyle","ExpansionPanel_default","ExpansionPanelSummary_default","addressName","Grid_default","container","justify","item","xs","break","iconContainer","index_esm","sidebarIcon","ledgerLogo","io_index_esm","listecAddresses","noPadding","List_default","ListItem_default","walletListHeader","addressHeading","disableGutters","walletList","listAddrRoot","addWallet_AddWalletModal","wordWrap","overflow","paddingBottom","borderRadius","SVGLogo","textAlign","pointer","cursor","_props$walletControll","checkAddress","activeAddress_o","elevation","react_copy_to_clipboard_lib","SvgIcon_default","d","SVGLogo_SVGLogo","LedgerLogo","transferFactoidAmountText","transferFactoidUnitText","factoidAmountSmallText","detail","divider","opacity","border","factoidAmount","sendFactoidFee","totalFactoidAmount","totalFactoidAmountText","feeFactoidAmountText","recipientAddressPath","myFctWalletAnchorElPath","SendFactoidForm","seed","maxFactoids","signTransaction","maxAmount","getMaxFCT","sendFactoidAmount","recipientAddress","myFctWalletAnchorEl","transaction","seedTrans_o","fromAddr","_toAddr","_amount","_index","ledgerTrans_o","txId","Math","round","isLedgerConnected","resetForm","sendTransaction","typeError","positive","max","when","is","then","otherwise","notRequired","shared_AddressInfoHeader","FactoidAddressMenu","walletManager_SendTransactionPreview","transactionError","transactionErrorText","CheckCircleOutlined_default","nativeColor","successIcon","sendButton","convertECAmountText","ecUnitText","factoidCostSmallText","ecAmount","totalFactoidCostText","ConvertECForm","sendFactoshiFee","maxEntryCredits","getMaxEC","entryCreditAmount","ECAddressMenu","walletManager_ConvertTransactionPreview","ViewPrivateKeyForm","ViewPrivateKeyForm_FormTextField","errorClass","Visibility_default","enableSpellCheck","AddressInfoForm","window","setTimeout","AddressInfoForm_FormTextField","size","deleteButton","deleteConfirmationText","TransactionList","overflowWrap","walletManager_AddressInfoForm","walletManager_TransactionList","WalletTabContent","tabValue","activeAddress","Tabs_default","indicatorColor","centered","Tab_default","TabContainer","walletManager_AddressInfoTab","walletManager_SendFactoidForm","walletManager_ConvertECForm","walletManager_ViewPrivateKeyForm","tabContainer","WalletManager","walletManager_Sidebar","walletManager_WalletTabContent","AddInitialWallet","withRouter","RPP_OPTIONS","VoteTable","status","initiatorId","pollChainId","handleFilterChange","filterTable","tableRows","voteList","forEach","poll_o","voteID","adminID","commitPhase","revealPhase","row","admin","voteInitiator","proposal","phasesBlockHeights","tableWrapper","expandColumn","ExpandLess_default","toggleExpand","expandIcon","TableCell_default","titleColumn","columnHeader","statusColumn","defaultValue","option_o","dateColumn","pollChainIDColumn","shortPollChainIDColumn","adminIDColumn","shortAdminIDColumn","index_es","hover","TablePagination_default","Grid","onChangePage","page","handlePageChange","onChangeRowsPerPage","handleRowsPerPageChange","count","rowsPerPage","rowsPerPageOptions","textOverflow","footerPagination","GET_LISTING","VoteListing_templateObject","VoteListing","activeFilters","handleExpand","resetFilters","limit","offset","voteChain","VoteListing_PreLoadHeader","message","totalCount","direction","topFilters","FilterList_default","listing_VoteTable","allProposals","PreLoadHeader","ExplorerLink","handleHover","isHovered","bind","assertThisInitialized","_this$props$extend","extend","valueClass","short","alignItems","FactomProtocolLogo","onMouseEnter","onMouseLeave","openInNew","tooltip","accept","_ref$autoComplete","_ref$disabled","_ref$displayError","displayError","_ref$error","_ref$fullWidth","isNotFast","_ref$shrink","shrink","_ref$spellCheck","_ref$step","_ref$type","FieldType","Field","FastField","InputLabelProps","BinaryVoteForm","poll","parentIsSubmitting","parentArrayHelpers","parentReset","options","selectedOption","reinitialize","ApprovalVoteForm","parentSetFieldValue","parentVoteArray","allowAbstain","minOptions","abstainCheckbox","FormGroup_default","newVote","_remove","Divider_default","SingleOptionVoteForm","remove","itemsPath","selectedPath","parentVotePath","InstantRunoffVoteForm","items","selected","InstantRunoffVoteForm_DragAndDrop","irvSetFieldValue","reorder","list","endIndex","Array","from","_result$splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","DragAndDrop","id2List","droppable","droppable2","getList","onDragEnd","_result","_this$props2","titleStyle","react_beautiful_dnd_esm","provided","snapshot","ref","innerRef","isDraggingOver","draggableId","isDragDisabled","draggableProps","dragHandleProps","hrefPath","CommitVoteForm","AnswerForm","proposalEntries","_this$props$voteContr","signMessageRaw","voterList","entryHashURL","revealFileName","sanitize","NoFormFound","secret","randomBytes","toString","identityChainID","identityKey","processing","resetAnswerForm","revealData","signatureType","commit_args","ledgerIdentity_o","reveal_args","hmacAlgo","chainId","Error","getLedgerIdentityAddress","chainid","sign","matches","excludeEmptyString","_includes","app","isValidSecretIdentityKey","isValidPrivateEcAddress","submitCount","signTransactionTitle","pad","smallGridColumn","Create_default","form_FormTextField","shared_ExplorerLink","entryHash","fileDownload","Save_default","resetButton","revealJSONPath","fileUploadErrorPath","pollChainIdPath","RevealVoteForm","handleFile","file","reader","readAsText","onloadend","json","fileChainId","FileReader","workingFile","workingFileName","revealJSON","files","EligibleVotersList","eligibleVoters","errorMessage","listContainer","dense","Person_default","ListItemText_default","primary","secondary","weight","Clear_default","commitEndPath","revealEndPath","minSupportPath","weightedMinTurnoutPath","unweightedMinTurnoutPath","VoteSummary","calculateWriteTimeDisplay","writeHeight","eventTimestamp","format","supportsMinSupportCriteria","supportsWeightedMinTurnoutCriteria","scrollTo","minSupportOption","weightedMinSupportPath","unweightedMinSupportPath","pollTypeText","supportsMinSupportConfig","hasMinTurnoutCriteria","commitStartDate","commitEndDate","revealStartDate","revealEndDate","LabelImportant_default","defaultCursor","disableRipple","shared_EligibleVotersList","flexBasis","ParticipantsTab","expand","eligibleVotersChainId","status_o","voter_o","voterID","voterChain","chainIDColumn","Done_default","Close_default","ExpansionPanelDetails_default","GET_VOTE","VoteTabContent_templateObject","GET_RESULT","_templateObject2","GET_VOTERS","_templateObject3","VoteTabContent","handleTabChange","componentDidMount","queryParams","QS","location","search","ignoreQueryPrefix","requestedNetwork","VoteTabContent_PreLoadHeader","phaseEndBlock","countdownTimestamp","proposalEntries_o","dist_index_es","date","renderer","RenderCountdown","view_VoteResult","shared_VoteSummary","pollJSON","view_ParticipantsTab","view_CommitVoteForm","view_RevealVoteForm","days","hours","seconds","completed","EligibleVotersForm_templateObject","selectedListPath","workingIdentityChainIdPath","workingWeightPath","workingEligibleChainIdPath","loadErrorMessagePath","loadSuccessMessagePath","workingFileNamePath","workingFilePath","formatVoter","EligibleVotersForm","isValidVoter","_isFinite","split","newVoterList","invalidData","attributes","handleVoter","handleVoterChainId","voterData","apolloClient","voterIndex","findVoter","currentEligibleVoters","resetAddVoterFields","eligibleVotersForm","updateParticipants","formFields","workingWeight","currentValue","originalValue","moreThan","workingIdentityChainId","workingEligibleChainId","workingAddVoter_o","borders","padLoadVoters","verticalAlign","successText","stepperButtons","borderRightStyle","borderRightColor","borderRightWidth","borderLeftStyle","borderLeftColor","borderLeftWidth","EXAMPLE_IDENTITY","SubmitVoteForm","voteCreationCost","definition","registrationChainId","identity","computeVoteCreationCost","validateEcPrivateKey","updateCreatePollResult","commitStartBlock","currentBlockHeight","submitVoteForm","create_SubmitVoteForm","createPollResult","registration","VoteConfiguration","pollForm","externalRef","hash","algo","config","allowAbstention","computeResultsAgainst","winnerCriteria","acceptanceCriteria","voteTypeText","questionSource","workingText","workingHref","workingHashValue","workingHashAlgo","workingOption","checkedTurnout","enableMinSupportConfig","workingWeightMinTurnout","workingUnweightMinTurnout","workingWeightMinSupport","workingUnweightMinSupport","workingMinSupportOption","selectedList","loadingVoters","loadErrorMessage","loadSuccessMessage","updatePoll","InputLabel_default","htmlFor","Select_default","VOTE_TYPE_VALUES","COMPUTE_AGAINST_VALUES","ABSTENTION_VALUES","commitStartPath","minOptionsPath","maxOptionsPath","optionsPath","voteTypeTextPath","workingOptionPath","workingHrefPath","workingTextPath","checkedTurnoutPath","workingWeightMinTurnoutPath","workingMinSupportOptionPath","CreateVoteForm","validateWriteHeight","currentHeight","isNaN","validateWorkingOption","optionList","hasOption","validateComputeResultsAgainst","handleTime","calculateWriteHeight","handleBlock","calculateWriteTimeValue","removeOption","optionsLength","getMinimumOptions","optionsList","minOptionsList","ii","getMaximumOptions","maxOptionsList","toISOString","dateTime","currentBlock","currentDate","diffMins","diff","floor","validateOnChange","cv","min","requiredSupport","_this$parent","parent","url","_this$parent2","winnerCriteriaOption","_omit","minTurnout","weighted","unweighted","minSupport","setFieldTouched","setFieldError","form_FormSelectField","newValue","blockFields","raiseRadio","optionListItem","CreateVoteStepper","stepIndex","createVoteSnapshot","create_EligibleVotersForm","create_CreateVoteForm","create_PreviewVote","VoteConfiguration_VoteConfiguration","create_FinalStep","getStepContent","NUMBER_VALUES","i","CreateLedgerIdForm","validateIdentityName","hasItem","identityNames","array","identityController","workingName","number","reg_id_args","identityNameList","identityNameListItem","SetLedgerIdForm","storeChainId","LedgerIdentityManager","ledgerIdentity_CreateLedgerIdForm","ledgerIdentity_SetLedgerIdForm","AppRouter","HashRouter","Route","exact","walletManager_WalletManager","addWallet_AddInitialWallet","App","context_NetworkController","context_FactomCliController","context_WalletController","context_VoteController","Header","context_SeedController","context_IdentityController","LedgerController","src_AppRouter","src_TestnetWarningBar","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","unregister","module","exports","__webpack_require__","p","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","BIP_32_COIN_TYPES","_Users_alexgoehring_github_goehringa_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_alexgoehring_github_goehringa_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_alexgoehring_github_goehringa_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_Users_alexgoehring_github_goehringa_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_alexgoehring_github_goehringa_MyFactomWallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","coinType","transport","TransportU2F","create","Fct","getAddress","close","unsignedTX","t1","t2","t3","t4","t5","t6","marshalBinarySig","rcdSignature","Buffer","s","activeFctWallet","getAppConfiguration","_x9","react__WEBPACK_IMPORTED_MODULE_7___default","_LedgerContext__WEBPACK_IMPORTED_MODULE_9__","LedgerContext"],"mappings":"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","file":"static/js/main.4a02b0a6.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nfunction SectionHeader({ disableGutterBottom, text, color }) {\n\tconst textColor = {\n\t\tcolor: color ? color : null,\n\t};\n\n\treturn (\n\t\t<Typography\n\t\t\tgutterBottom={!disableGutterBottom}\n\t\t\tvariant=\"h6\"\n\t\t\tstyle={textColor}\n\t\t>\n\t\t\t{text}\n\t\t</Typography>\n\t);\n}\n\nexport default SectionHeader;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SectionHeader from '../vote/shared/SectionHeader.js';\n\nconst hostPath = 'host';\nconst portPath = 'port';\n\nclass CustomNodeForm extends React.Component {\n\thandleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ host: '', port: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tconsole.log('Submitted');\n\t\t\t\t\tthis.props.handleCustomNode(values[hostPath], values[portPath]);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[hostPath]: Yup.string().required('Required'),\n\t\t\t\t\t[portPath]: Yup.string().required('Required'),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\n\t\t\t\t\t\t<SectionHeader text=\"Custom Node Form\" id=\"modal-title\" />\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\terror={errors[hostPath] && touched[hostPath] ? true : false}\n\t\t\t\t\t\t\tname={hostPath}\n\t\t\t\t\t\t\tlabel=\"Host\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname={hostPath}\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\terror={errors[portPath] && touched[portPath] ? true : false}\n\t\t\t\t\t\t\tname={portPath}\n\t\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname={portPath}\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<Field name={props.name}>\n\t\t\t{({ field }) => (\n\t\t\t\t<TextField\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\tmaxLength: props.maxLength,\n\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tmultiline\n\t\t\t\t\terror={props.error}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Field>\n\t);\n};\n\nCustomNodeForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({ errorText: { color: 'red', fontSize: '12px' } });\nexport default withStyles(styles)(CustomNodeForm);\n","import React from 'react';\n\nconst FactomCliContext = React.createContext();\n\nconst withFactomCli = (BaseComponent) => (props) => (\n\t<FactomCliContext.Consumer>\n\t\t{(factomCliController) => (\n\t\t\t<BaseComponent {...props} factomCliController={factomCliController} />\n\t\t)}\n\t</FactomCliContext.Consumer>\n);\n\nexport { FactomCliContext, withFactomCli };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SectionHeader from '../vote/shared/SectionHeader.js';\n\nclass AddWalletModal extends React.Component {\n\tstate = {\n\t\topen: false,\n\t};\n\n\thandleOpen = () => {\n\t\tthis.setState({ open: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ open: false });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button className={classes.menuText} onClick={this.handleOpen}>\n\t\t\t\t\tHelp\n\t\t\t\t</Button>\n\t\t\t\t<Modal\n\t\t\t\t\taria-labelledby=\"modal-title\"\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t>\n\t\t\t\t\t<Paper className={classes.modalContent}>\n\t\t\t\t\t\t<SectionHeader text=\"Help\" id=\"modal-title\" />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tPlease go to the #myfactomwallet channel on The Factoid\n\t\t\t\t\t\t\tAuthority's{' '}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDiscord server\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t&nbsp;for support.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tLedger Nano X/S documentation can be found{' '}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={'http://help.myfactomwallet.com/'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\there\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tMyFactomWallet's Github repositories are{' '}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={'https://github.com/MyFactomWallet'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\there\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n}\nAddWalletModal.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tmodalContent: {\n\t\tposition: 'absolute',\n\t\tboxShadow: theme.shadows[5],\n\t\ttop: `50%`,\n\t\tleft: `50%`,\n\t\ttransform: `translate(-50%, -50%)`,\n\t\tminHeight: '138px',\n\t\tpadding: '30px',\n\t\tmaxWidth: '425px',\n\t},\n\tmenuText: {\n\t\tcolor: 'white',\n\t},\n});\n\nexport default withStyles(styles)(AddWalletModal);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport logo from '../headerLogo.png';\nimport { Link } from 'react-router-dom';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport CloudDone from '@material-ui/icons/CloudDoneOutlined';\nimport CustomNodeForm from './CustomNodeForm';\nimport Modal from '@material-ui/core/Modal';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withFactomCli } from '../context/FactomCliContext';\nimport HelpModal from './HelpModal';\n\n//import CloudOff from '@material-ui/icons/CloudOff';\n\nclass ButtonAppBar extends React.Component {\n\tstate = {\n\t\tvoteAnchorEl: null,\n\t\tnetworkAnchorEl: null,\n\t\topenCustomNodeForm: false,\n\t};\n\n\thandleOpenCustomNodeForm = () => {\n\t\tthis.setState({ openCustomNodeForm: true });\n\t};\n\n\thandleCloseCustomNodeForm = () => {\n\t\tthis.setState({ openCustomNodeForm: false });\n\t};\n\n\thandleVoteClick = (event) => {\n\t\tthis.setState({ voteAnchorEl: event.currentTarget });\n\t};\n\n\thandleVoteClose = () => {\n\t\tthis.setState({ voteAnchorEl: null });\n\t};\n\n\thandleNetworkClick = (event) => {\n\t\tthis.setState({ networkAnchorEl: event.currentTarget });\n\t};\n\n\thandleNetworkClose = () => {\n\t\tthis.setState({ networkAnchorEl: null });\n\t};\n\n\thandleTestnet = () => {\n\t\tthis.setState({\n\t\t\tnetworkAnchorEl: null,\n\t\t});\n\t\tthis.props.walletController.handleNetworkChange('testnet');\n\t};\n\n\thandleMainnet = () => {\n\t\tthis.setState({\n\t\t\tnetworkAnchorEl: null,\n\t\t});\n\t\tthis.props.walletController.handleNetworkChange('mainnet');\n\t};\n\n\thandleWallet = () => {\n\t\tif (\n\t\t\t!this.props.walletController.readyToManageWallet &&\n\t\t\t!this.props.walletController.isWalletEmpty()\n\t\t) {\n\t\t\tthis.props.walletController.setReadyToManageWallet(true);\n\t\t}\n\t};\n\n\thandleCustomNode = (host, port) => {\n\t\t/* this.setState({\n\t\t\tnetwork: host + ':' + port,\n\t\t}); */\n\t\tthis.handleCloseCustomNodeForm();\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tnetworkController: { networkProps },\n\t\t\tfactomCliController: { blockHeight },\n\t\t} = this.props;\n\t\tconst { voteAnchorEl, networkAnchorEl } = this.state;\n\n\t\tconst testnetActive = networkProps.network === 'testnet';\n\n\t\treturn (\n\t\t\t<AppBar position=\"static\" className={classes.root}>\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"Menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<img className={classes.logo} src={logo} alt=\"logo\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.flex}>\n\t\t\t\t\t\t<Link className={classes.menuText} to=\"/\">\n\t\t\t\t\t\t\tMyFactomWallet\n\t\t\t\t\t\t\t{testnetActive && (\n\t\t\t\t\t\t\t\t<span className={classes.testnetHeader}>\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;TESTNET\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button\n\t\t\t\t\t\thref=\"#/\"\n\t\t\t\t\t\tonClick={this.handleWallet}\n\t\t\t\t\t\tclassName={classes.menuText}\n\t\t\t\t\t>\n\t\t\t\t\t\tWallet\n\t\t\t\t\t</Button>\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\taria-owns={voteAnchorEl ? 'simple-vote-menu' : null}\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={this.handleVoteClick}\n\t\t\t\t\t\t\tclassName={classes.menuText}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tVote\n\t\t\t\t\t\t\t<ExpandMore />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"simple-vote-menu\"\n\t\t\t\t\t\t\tanchorEl={voteAnchorEl}\n\t\t\t\t\t\t\topen={Boolean(voteAnchorEl)}\n\t\t\t\t\t\t\tonClose={this.handleVoteClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={'/vote'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tView Polls\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={'/createVote'}\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\n\t\t\t\t\t\t\t\treplace={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate Poll\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\tto={'/ledgerId'}\n\t\t\t\t\t\t\t\tonClick={this.handleVoteClose}\n\t\t\t\t\t\t\t\treplace={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLedger Identity\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</React.Fragment>\n\n\t\t\t\t\t<HelpModal />\n\t\t\t\t\t<div className={classes.network}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\taria-owns={voteAnchorEl ? 'simple-vote-menu' : null}\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={this.handleNetworkClick}\n\t\t\t\t\t\t\tclassName={classes.menuText}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{networkProps.network}: {blockHeight}\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<CloudDone\n\t\t\t\t\t\t\t\ttitleAccess=\"Network Operational\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'green' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ExpandMore />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"simple-vote-menu\"\n\t\t\t\t\t\t\tanchorEl={networkAnchorEl}\n\t\t\t\t\t\t\topen={Boolean(networkAnchorEl)}\n\t\t\t\t\t\t\tonClose={this.handleNetworkClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem onClick={this.handleMainnet} disabled={!testnetActive}>\n\t\t\t\t\t\t\t\tMainnet&nbsp;&nbsp; <CloudDone style={{ color: 'green' }} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem onClick={this.handleTestnet} disabled={testnetActive}>\n\t\t\t\t\t\t\t\tTestnet&nbsp;&nbsp; <CloudDone style={{ color: 'green' }} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t{/* <MenuItem\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.handleNetworkClose();\n\t\t\t\t\t\t\t\t\tthis.handleOpenCustomNodeForm();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCustom Node\n\t\t\t\t\t\t\t</MenuItem> */}\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\taria-labelledby=\"simple-modal-title\"\n\t\t\t\t\t\t\taria-describedby=\"simple-modal-description\"\n\t\t\t\t\t\t\topen={this.state.openCustomNodeForm}\n\t\t\t\t\t\t\tonClose={this.handleCloseCustomNodeForm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={classes.modalContent}>\n\t\t\t\t\t\t\t\t<CustomNodeForm handleCustomNode={this.handleCustomNode} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t);\n\t}\n}\nButtonAppBar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tmarginBottom: '15px',\n\t},\n\ttoolbar: {\n\t\twidth: '90%',\n\t\tmargin: '0 auto',\n\t},\n\tflex: {\n\t\tflex: 1,\n\t},\n\tmenuButton: {\n\t\tmarginTop: 3,\n\t\tmarginRight: 10,\n\t},\n\tlogo: {\n\t\twidth: '39px',\n\t},\n\tmenuText: {\n\t\tcolor: 'white',\n\t},\n\tnetwork: {\n\t\tborderStyle: 'solid',\n\t\tborderWidth: '1px',\n\t\tcolor: 'green',\n\t},\n\tsubMenuText: {\n\t\tcolor: 'black',\n\t},\n\tmodalContent: {\n\t\tposition: 'absolute',\n\t\twidth: theme.spacing.unit * 50,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing.unit * 4,\n\t\ttop: `50%`,\n\t\tleft: `50%`,\n\t\ttransform: `translate(-50%, -50%)`,\n\t},\n\ttestnetHeader: { color: '#ffa000' },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithWalletContext,\n\twithStyles(styles)\n);\nexport default enhancer(ButtonAppBar);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n\tpalette: {},\n});\n\nfunction withRootTheme(Component) {\n\tfunction WithRoot(props) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</MuiThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n\nexport default withRootTheme;\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _flow from 'lodash/flow';\nimport _isEmpty from 'lodash/isEmpty';\nimport _noop from 'lodash/noop';\nimport _isNil from 'lodash/isNil';\nimport _pick from 'lodash/pick';\nimport { WalletContext } from './WalletContext';\nimport { withFactomCli } from './FactomCliContext';\nimport { withNetwork } from './NetworkContext';\nimport { Transaction, getPublicAddress } from 'factom/dist/factom';\n\n/**\n * Constants\n */\nconst FACTOSHI_MULTIPLIER = 0.00000001;\nconst LOCAL_STORAGE_KEY = 'storageAddresses';\nconst LOCAL_STORAGE_PROPERTY_WHITELIST = [\n\t'importType',\n\t'address',\n\t'nickname',\n\t'index',\n\t'saveLocally',\n];\n\nclass WalletController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\taddresses: {\n\t\t\t\tmainnet: {\n\t\t\t\t\tfct: [],\n\t\t\t\t\tec: [],\n\t\t\t\t},\n\t\t\t\ttestnet: {\n\t\t\t\t\tfct: [],\n\t\t\t\t\tec: [],\n\t\t\t\t},\n\t\t\t},\n\t\t\t//===================================================\n\t\t\tactiveAddressIndex_o: null,\n\t\t\tisStateHydrated: false,\n\t\t\treadyToManageWallet: false,\n\t\t\tsetReadyToManageWallet: this.setReadyToManageWallet,\n\t\t\tisWalletEmpty: this.isWalletEmpty,\n\t\t\thandleNetworkChange: this.handleNetworkChange,\n\t\t\tverifyKey: this.verifyKey,\n\t\t\tupdateAddress: this.updateAddress,\n\t\t\taddAddressTransaction: this.addAddressTransaction,\n\t\t\tdeleteAddress: this.deleteAddress,\n\t\t\tgetAddresses: this.getAddresses,\n\t\t\tgetFactoidAddresses: this.getFactoidAddresses,\n\t\t\tgetEntryCreditAddresses: this.getEntryCreditAddresses,\n\t\t\taddAddresses: this.addAddresses,\n\t\t\taddAddress: this.addAddress,\n\t\t\tselectAddress: this.selectAddress,\n\t\t\tgetActiveAddress: this.getActiveAddress,\n\t\t\tupdateWalletBalance: this.updateWalletBalance,\n\t\t\tupdateBalances: this.updateBalances,\n\t\t\tgetEntryCreditRate: this.getEntryCreditRate,\n\t\t\tgetFactoshiFee: this.getFactoshiFee,\n\t\t\tgetFactoidFee: this.getFactoidFee,\n\t\t\tnewStandardAddress: this.newStandardAddress,\n\t\t\tnewSeedAddress: this.newSeedAddress,\n\t\t\tnewLedgerAddress: this.newLedgerAddress,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\t//get from storage\n\t\tthis.hydrateStateWithLocalStorage();\n\t}\n\n\tsmartSetState = (newState, afterSetState = _noop) =>\n\t\tnew Promise((resolve) =>\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\n\t\t);\n\n\tsaveStateToLocalStorage = () => {\n\t\tconst filterArray = (addressArray) =>\n\t\t\taddressArray\n\t\t\t\t.filter((address) => address.saveLocally)\n\t\t\t\t.map((address) => _pick(address, LOCAL_STORAGE_PROPERTY_WHITELIST));\n\n\t\tconst { mainnet, testnet } = { ...this.state.addresses };\n\n\t\tconst storageAddresses = {\n\t\t\tmainnet: { fct: filterArray(mainnet.fct), ec: filterArray(mainnet.ec) },\n\t\t\ttestnet: { fct: filterArray(testnet.fct), ec: filterArray(testnet.ec) },\n\t\t};\n\n\t\tlocalStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storageAddresses));\n\t};\n\n\thydrateStateWithLocalStorage = async () => {\n\t\t// get local\n\t\tconst localStorageAddresses = JSON.parse(\n\t\t\tlocalStorage.getItem(LOCAL_STORAGE_KEY)\n\t\t);\n\n\t\tif (!_isNil(localStorageAddresses)) {\n\t\t\tconst prepareArray = (addressArray) =>\n\t\t\t\taddressArray.map((addr_o) => ({\n\t\t\t\t\t...addr_o,\n\t\t\t\t\tbalance: null,\n\t\t\t\t\ttransactions: [],\n\t\t\t\t}));\n\n\t\t\tconst { mainnet, testnet } = localStorageAddresses;\n\n\t\t\tconst storageAddresses = {\n\t\t\t\tmainnet: {\n\t\t\t\t\tfct: prepareArray(mainnet.fct),\n\t\t\t\t\tec: prepareArray(mainnet.ec),\n\t\t\t\t},\n\t\t\t\ttestnet: {\n\t\t\t\t\tfct: prepareArray(testnet.fct),\n\t\t\t\t\tec: prepareArray(testnet.ec),\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tawait this.smartSetState((prevState) => ({\n\t\t\t\taddresses: storageAddresses,\n\t\t\t}));\n\n\t\t\tawait this.setDefaultIndex();\n\t\t\tawait this.updateBalances({ force: true });\n\t\t}\n\t\tawait this.smartSetState({ readyToManageWallet: !this.isWalletEmpty() });\n\t\tawait this.smartSetState({ isStateHydrated: true });\n\t};\n\n\tsetReadyToManageWallet = (value) => {\n\t\tthis.smartSetState({\n\t\t\treadyToManageWallet: value,\n\t\t});\n\t};\n\n\thandleNetworkChange = async (network) => {\n\t\tawait this.smartSetState({ isStateHydrated: false });\n\t\tawait this.props.networkController.changeNetwork(network);\n\t\tawait this.props.factomCliController.connectToServer();\n\t\tthis.hydrateStateWithLocalStorage();\n\t};\n\n\tdeleteAddress = async (activeAddressIndex_o) => {\n\t\tconst type = activeAddressIndex_o.type;\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t// create copy of current addressList\n\t\tconst addressList = [...this.state.addresses[network][type]];\n\n\t\t//remove address\n\t\taddressList.splice(activeAddressIndex_o.index, 1);\n\n\t\t// overwrite addresses\n\t\tawait this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\n\t\tawait this.setDefaultIndex();\n\n\t\tthis.saveStateToLocalStorage();\n\t};\n\n\taddAddressTransaction = (activeAddressIndex_o, transactionID) => {\n\t\tconst type = activeAddressIndex_o.type;\n\t\tconst index = activeAddressIndex_o.index;\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t// get address transaction list to update\n\t\tconst addressList = [...this.state.addresses[network][type]];\n\t\tconst addr_o = addressList[index];\n\n\t\t// add transaction\n\t\taddr_o.transactions.push(transactionID);\n\n\t\t// replace address\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\n\n\t\t// overwrite addresses\n\t\treturn this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\tupdateAddress = async (activeAddressIndex_o, nickname, saveLocally) => {\n\t\tconst type = activeAddressIndex_o.type;\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t// create copy of current addressList\n\t\tconst addressList = [...this.state.addresses[network][type]];\n\n\t\t// create and update copy of current address\n\t\tconst addr_o = { ...addressList[activeAddressIndex_o.index] };\n\t\taddr_o.nickname = nickname;\n\t\taddr_o.saveLocally = saveLocally;\n\n\t\t// replace address\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\n\n\t\t// overwrite addresses\n\t\tawait this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\n\t\tthis.saveStateToLocalStorage();\n\t};\n\n\tisWalletEmpty = () => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\treturn (\n\t\t\t_isEmpty(this.state.addresses[network].fct) &&\n\t\t\t_isEmpty(this.state.addresses[network].ec)\n\t\t);\n\t};\n\n\tsetDefaultIndex = () => {\n\t\tif (!_isEmpty(this.getFactoidAddresses())) {\n\t\t\treturn this.selectAddress(0, 'fct');\n\t\t} else if (!_isEmpty(this.getEntryCreditAddresses())) {\n\t\t\treturn this.selectAddress(0, 'ec');\n\t\t} else {\n\t\t\treturn this.smartSetState({\n\t\t\t\tactiveAddressIndex_o: null,\n\t\t\t});\n\t\t}\n\t};\n\n\tverifyKey = (privateKey, { address }) => {\n\t\ttry {\n\t\t\t// for factom addresses\n\t\t\treturn getPublicAddress(privateKey).valueOf() === address.valueOf();\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\taddAddress = (address_o, type) => {\n\t\tthis.addAddresses([address_o], type);\n\n\t\tthis.selectAddress(this.getNextIndex(type), type);\n\t};\n\n\taddAddresses = async (addressList, type) => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\tawait this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...prevState.addresses[network][type], ...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t\tawait this.setDefaultIndex();\n\t\tawait this.updateBalances();\n\t};\n\n\tgetNextIndex = (type) => {\n\t\tlet index = 0;\n\t\tif (type === 'fct') {\n\t\t\tindex = this.getFactoidAddresses().length - 1;\n\t\t} else if (type === 'ec') {\n\t\t\tindex = this.getEntryCreditAddresses().length - 1;\n\t\t}\n\t\treturn index;\n\t};\n\n\tselectAddress = (index, type) => {\n\t\treturn this.smartSetState({\n\t\t\tactiveAddressIndex_o: { index, type },\n\t\t});\n\t};\n\n\tgetActiveAddress = () => {\n\t\tif (this.state.activeAddressIndex_o !== null) {\n\t\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t\treturn this.state.addresses[network][\n\t\t\t\tthis.state.activeAddressIndex_o.type\n\t\t\t][this.state.activeAddressIndex_o.index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgetFactoidAddresses = () => {\n\t\treturn this.getAddresses('fct');\n\t};\n\n\tgetEntryCreditAddresses = () => {\n\t\treturn this.getAddresses('ec');\n\t};\n\n\tgetAddresses = (type) => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\treturn this.state.addresses[network][type];\n\t};\n\n\tupdateWalletBalance = async (wallet) => {\n\t\tconst balance = await this.props.factomCliController.factomCli.getBalance(\n\t\t\twallet.address\n\t\t);\n\n\t\treturn { ...wallet, balance };\n\t};\n\n\tupdateBalances = async ({ force = false } = {}) => {\n\t\tif (this.state.isStateHydrated || force) {\n\t\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t\tconst [factoidAddresses, ecAddresses] = await Promise.all([\n\t\t\t\tPromise.all(\n\t\t\t\t\tthis.state.addresses[network].fct.map(this.updateWalletBalance)\n\t\t\t\t),\n\t\t\t\tPromise.all(\n\t\t\t\t\tthis.state.addresses[network].ec.map(this.updateWalletBalance)\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\treturn this.smartSetState((prevState) => ({\n\t\t\t\taddresses: {\n\t\t\t\t\t...prevState.addresses,\n\t\t\t\t\t[network]: {\n\t\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t\tec: ecAddresses,\n\t\t\t\t\t\tfct: factoidAddresses,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\t};\n\n\tgetEntryCreditRate = async () => {\n\t\treturn await this.props.factomCliController.factomCli.getEntryCreditRate();\n\t};\n\n\tgetFactoshiFee = async () => {\n\t\tconst ecRate = await this.getEntryCreditRate();\n\n\t\tconst exampleAddress =\n\t\t\t'FA3E6enA33y9f5K9q9nrWfcDNrVR4zAp4xpniizNjQbV4RAmPjat';\n\n\t\tconst fee = Transaction.builder()\n\t\t\t.input(exampleAddress, Number.MAX_SAFE_INTEGER)\n\t\t\t.output(exampleAddress, Number.MAX_SAFE_INTEGER)\n\t\t\t.build()\n\t\t\t.computeRequiredFees(ecRate, { rcdType: 1 });\n\n\t\treturn fee;\n\t};\n\n\tgetFactoidFee = async () => {\n\t\tconst factoshiFee = await this.getFactoshiFee();\n\n\t\t//fix floating point decimal\n\t\treturn factoshiFee * FACTOSHI_MULTIPLIER;\n\t};\n\n\tnewStandardAddress = (address, nickname) => ({\n\t\timportType: 'standard',\n\t\taddress,\n\t\tnickname,\n\t\tbalance: null,\n\t\ttransactions: [],\n\t\tsaveLocally: false,\n\t});\n\n\tnewSeedAddress = (address, nickname, index) => ({\n\t\timportType: 'seed',\n\t\taddress,\n\t\tnickname,\n\t\tbalance: null,\n\t\ttransactions: [],\n\t\tindex,\n\t\tsaveLocally: false,\n\t});\n\n\tnewLedgerAddress = (address, nickname, index) => ({\n\t\timportType: 'ledger',\n\t\taddress,\n\t\tnickname,\n\t\tbalance: null,\n\t\ttransactions: [],\n\t\tindex,\n\t\tsaveLocally: false,\n\t});\n\n\trender() {\n\t\tif (this.state.isStateHydrated) {\n\t\t\treturn (\n\t\t\t\t<WalletContext.Provider value={this.state}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</WalletContext.Provider>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nconst enhancer = _flowRight(withNetwork, withFactomCli);\n\nexport default enhancer(WalletController);\n","import React from 'react';\n\nconst SeedContext = React.createContext();\n\nconst withSeed = (BaseComponent) => (props) => (\n\t<SeedContext.Consumer>\n\t\t{(seedController) => (\n\t\t\t<BaseComponent {...props} seedController={seedController} />\n\t\t)}\n\t</SeedContext.Consumer>\n);\n\nexport { SeedContext, withSeed };\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { SeedContext } from './SeedContext';\nimport { withFactomCli } from './FactomCliContext';\nimport { withNetwork } from './NetworkContext';\nimport { withWalletContext } from './WalletContext';\nimport {\n\tisValidPublicEcAddress,\n\tisValidPublicFctAddress,\n\tseedToPrivateFctAddress,\n\tseedToPrivateEcAddress,\n\tgetPublicAddress,\n} from 'factom/dist/factom';\nimport factombip44 from 'factombip44/dist/factombip44';\n\n/**\n * Constants\n */\nconst keyToFctAddress = (key) => getPublicAddress(seedToPrivateFctAddress(key));\nconst keyToECAddress = (key) => getPublicAddress(seedToPrivateEcAddress(key));\n\nclass SeedController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgetSeedAddresses: this.getSeedAddresses,\n\t\t\tsignWithSeed: this.signWithSeed,\n\t\t\tverifySeed: this.verifySeed,\n\t\t\tgetRandomMnemonic: this.getRandomMnemonic,\n\t\t\tgetPrivateKey: this.getPrivateKey,\n\t\t};\n\t}\n\n\tgetSeedAddresses = async (mnemonic, startIndex, amount, type) => {\n\t\tlet result = [];\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\n\t\t\tlet key = null;\n\t\t\tlet address = null;\n\n\t\t\tif (type === 'fct') {\n\t\t\t\tkey = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\n\t\t\t\taddress = keyToFctAddress(key);\n\t\t\t} else if (type === 'ec') {\n\t\t\t\tkey = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\n\t\t\t\taddress = keyToECAddress(key);\n\t\t\t}\n\n\t\t\tresult.push({ address, index });\n\t\t}\n\n\t\tconst addressList = await Promise.all(\n\t\t\tresult.map(this.props.walletController.updateWalletBalance)\n\t\t);\n\n\t\treturn addressList;\n\t};\n\n\tsignWithSeed = async ({ mnemonic, index, toAddr, amount, type }) => {\n\t\tlet signedTX = {};\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\n\t\tconst privateKey = seedToPrivateFctAddress(\n\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\n\t\t);\n\n\t\tif (type === 'sendFCT') {\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createFactoidTransaction(\n\t\t\t\tprivateKey,\n\t\t\t\ttoAddr,\n\t\t\t\tamount\n\t\t\t);\n\t\t} else if (type === 'convertFCT') {\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createEntryCreditPurchaseTransaction(\n\t\t\t\tprivateKey,\n\t\t\t\ttoAddr,\n\t\t\t\tamount\n\t\t\t);\n\t\t}\n\n\t\treturn signedTX;\n\t};\n\n\tverifySeed = (mnemonic, { address, index }) => {\n\t\ttry {\n\t\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\t\t\tconst bip32Account = this.props.networkController.networkProps\n\t\t\t\t.bip32Account;\n\n\t\t\tlet derivedAddress = null;\n\t\t\tif (isValidPublicFctAddress(address)) {\n\t\t\t\tderivedAddress = keyToFctAddress(\n\t\t\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\n\t\t\t\t);\n\t\t\t} else if (isValidPublicEcAddress(address)) {\n\t\t\t\tderivedAddress = keyToECAddress(\n\t\t\t\t\twallet.generateEntryCreditPrivateKey(bip32Account, 0, index)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn derivedAddress.valueOf() === address.valueOf(); // memoize\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tgetRandomMnemonic() {\n\t\treturn factombip44.randomMnemonic();\n\t}\n\n\tgetPrivateKey = (mnemonic, { address, index }) => {\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\t\tlet privateKey = null;\n\t\tif (isValidPublicFctAddress(address)) {\n\t\t\tconst key = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\n\t\t\tprivateKey = seedToPrivateFctAddress(key);\n\t\t} else if (isValidPublicEcAddress(address)) {\n\t\t\tconst key = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\n\t\t\tprivateKey = seedToPrivateEcAddress(key);\n\t\t}\n\t\treturn privateKey;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<SeedContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</SeedContext.Provider>\n\t\t);\n\t}\n}\n\nconst enhancer = _flowRight(withWalletContext, withNetwork, withFactomCli);\n\nexport default enhancer(SeedController);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FactomCliContext } from './FactomCliContext';\nimport { FactomCli } from 'factom/dist/factom';\nimport { withNetwork } from './NetworkContext';\nimport defaultsDeep from 'lodash/fp/defaultsDeep';\nimport _flowRight from 'lodash/flowRight';\nimport _flow from 'lodash/flow';\nimport _noop from 'lodash/noop';\nimport * as moment from 'moment';\n\nclass FactomCliController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tconnectToServer: this.connectToServer,\n\t\t\tgetDefaultConnectionParams: this.getDefaultConnectionParams,\n\t\t\tgetEstimatedBlockTimestamp: this.getEstimatedBlockTimestamp,\n\t\t\tblockHeight: null,\n\t\t\tblockTimestamp: null,\n\t\t\tisStateHydrated: false,\n\t\t};\n\t}\n\n\tdefaultConnectionParams = {\n\t\tpath: '/v2',\n\t\tdebugPath: '/debug',\n\t\tprotocol: 'https',\n\t\trejectUnauthorized: true,\n\t\tretry: {\n\t\t\tretries: 4,\n\t\t\tfactor: 2,\n\t\t\tminTimeout: 500,\n\t\t\tmaxTimeout: 2000,\n\t\t},\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.connectToServer();\n\n\t\tthis.blockHeightTimerId = setInterval(this.updateBlockHeight, 60000);\n\n\t\tawait this.smartSetState({ isStateHydrated: true });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.blockHeightTimerId);\n\t}\n\n\tupdateBlockHeight = async () => {\n\t\tconst result = await this.state.factomCli.getDirectoryBlockHead();\n\n\t\tconst { height, timestamp } = result;\n\n\t\tif (height !== this.state.blockHeight) {\n\t\t\t// process new block\n\t\t\tthis.setState({\n\t\t\t\tblockHeight: height,\n\t\t\t\tblockTimestamp: timestamp,\n\t\t\t});\n\t\t}\n\t};\n\n\tgetEstimatedBlockTimestamp = (blockHeight) => {\n\t\tconst currentHeight = this.state.blockHeight;\n\n\t\tconst currentBlockStartDate = moment.unix(this.state.blockTimestamp).utc();\n\n\t\t// get number of blocks between heights\n\t\tconst blocks = blockHeight - currentHeight;\n\n\t\t// add time for blocks\n\t\tconst minutes = blocks * 10;\n\n\t\tconst estimatedDate = currentBlockStartDate\n\t\t\t.clone()\n\t\t\t.add(minutes * 60 * 1000, 'milliseconds');\n\n\t\t// return Unix Timestamp (milliseconds)\n\t\treturn estimatedDate.valueOf();\n\t};\n\n\tgetDefaultConnectionParams = () => {\n\t\tconst connectionParams = {\n\t\t\thost: this.props.networkController.networkProps.apiHost,\n\t\t\tport: this.props.networkController.networkProps.apiPort,\n\t\t};\n\n\t\treturn defaultsDeep(this.defaultConnectionParams, connectionParams);\n\t};\n\n\tnewFactomCli = (connectionParams) =>\n\t\tnew FactomCli(defaultsDeep(this.defaultConnectionParams, connectionParams));\n\n\tconnectToServer = async () => {\n\t\tconst connectionParams = {\n\t\t\thost: this.props.networkController.networkProps.apiHost,\n\t\t\tport: this.props.networkController.networkProps.apiPort,\n\t\t};\n\n\t\tawait this.smartSetState({\n\t\t\tfactomCli: this.newFactomCli(connectionParams),\n\t\t});\n\n\t\tawait this.updateBlockHeight();\n\t};\n\n\tsmartSetState = (newState, afterSetState = _noop) =>\n\t\tnew Promise((resolve) =>\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\n\t\t);\n\n\trender() {\n\t\tif (this.state.isStateHydrated) {\n\t\t\treturn (\n\t\t\t\t<FactomCliContext.Provider value={this.state}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</FactomCliContext.Provider>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nFactomCliController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nconst enhancer = _flowRight(withNetwork);\n\nexport default enhancer(FactomCliController);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NetworkContext } from './NetworkContext';\nimport _flow from 'lodash/flow';\nimport _noop from 'lodash/noop';\n\nclass NetworkController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnetworkProps: this.networkProps['mainnet'],\n\t\t\tchangeNetwork: this.changeNetwork,\n\t\t};\n\t}\n\n\tnetworkProps = {\n\t\tmainnet: {\n\t\t\tnetwork: 'mainnet',\n\t\t\tbip32Account: 0,\n\t\t\tfactoidAbbreviation: 'FCT',\n\t\t\tfactoidAbbreviationFull: 'Factoid',\n\t\t\tecAbbreviation: 'EC',\n\t\t\tecAbbreviationFull: 'Entry Credit',\n\t\t\tapiPort: 443,\n\t\t\tapiHost: 'api.factomd.net',\n\t\t\texplorerURL: 'https://explorer.factoid.org',\n\t\t\tvoteRegistrationChainID:\n\t\t\t\t'a968e880ee3a7002f25ade15ae36a77c15f4dbc9d8c11fdd5fe86ba6af73a475',\n\t\t\tvoteApiUrl: 'https://mainnetvote.factoid.org/graphql',\n\t\t},\n\t\ttestnet: {\n\t\t\tnetwork: 'testnet',\n\t\t\tbip32Account: 2147483647,\n\t\t\tfactoidAbbreviation: 'TTS',\n\t\t\tfactoidAbbreviationFull: 'Testoid',\n\t\t\tecAbbreviation: 'TC',\n\t\t\tecAbbreviationFull: 'Test Credit',\n\t\t\tapiPort: 8288,\n\t\t\tapiHost: 'api.myfactomwallet.com',\n\t\t\texplorerURL: 'https://testnet.factoid.org',\n\t\t\tvoteRegistrationChainID:\n\t\t\t\t'a968e880ee3a7002f25ade15ae36a77c15f4dbc9d8c11fdd5fe86ba6af73a475',\n\t\t\tvoteApiUrl: 'https://testnetvote.factoid.org/graphql',\n\t\t},\n\t};\n\n\tchangeNetwork = async (network) => {\n\t\tawait this.smartSetState({ networkProps: this.networkProps[network] });\n\t};\n\n\tsmartSetState = (newState, afterSetState = _noop) =>\n\t\tnew Promise((resolve) =>\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\n\t\t);\n\n\trender() {\n\t\treturn (\n\t\t\t<NetworkContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</NetworkContext.Provider>\n\t\t);\n\t}\n}\n\nNetworkController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nexport default NetworkController;\n","import React from 'react';\n\nconst VoteContext = React.createContext();\n\nconst withVote = (BaseComponent) => (props) => (\n\t<VoteContext.Consumer>\n\t\t{(voteController) => (\n\t\t\t<BaseComponent {...props} voteController={voteController} />\n\t\t)}\n\t</VoteContext.Consumer>\n);\n\nexport { VoteContext, withVote };\n","/*\n * Vote Type Values\n */\nexport const BINARY_CONFIG = { name: 'Binary Voting', type: 0, numOptions: 1 };\nexport const SINGLE_OPTION_CONFIG = {\n\tname: 'Single Option Voting',\n\ttype: 1,\n\tnumOptions: 1,\n};\nexport const APPROVAL_CONFIG = { name: 'Approval Voting', type: 1 };\nexport const INSTANT_RUNOFF_CONFIG = {\n\tname: 'Instant-runoff Voting',\n\ttype: 2,\n};\n\nexport const VOTE_TYPE_DATA = {\n\tbinary: BINARY_CONFIG,\n\tsingleOption: SINGLE_OPTION_CONFIG,\n\tapproval: APPROVAL_CONFIG,\n\tinstantRunoff: INSTANT_RUNOFF_CONFIG,\n};\n\nexport const ALL_ELIGIBLE_VOTERS = {\n\ttext: 'All Eligible Voters',\n\tvalue: 'ALL_ELIGIBLE_VOTERS',\n};\n\nexport const PARTICIPANTS_ONLY = {\n\ttext: 'Participants Only',\n\tvalue: 'PARTICIPANTS_ONLY',\n};\n\n/**\n * Supported Hashing Algorithms\n */\nexport const HASH_ALGO_VALUES = [\n\t{ value: 'sha1', text: 'sha1' },\n\t{ value: 'sha256', text: 'sha256' },\n\t{ value: 'sha512', text: 'sha512' },\n];\n\n/**\n * Supported Hashing Algorithms\n */\nexport const REGEX_CHAIN_ID = /^[a-f0-9]{64}$/;\n\nexport const COMMIT_HMAC_ALGO = 'sha512';\n\n/**\n * Poll Status\n */\nexport const POLL_STATUSES = {\n\tdiscussion: { value: 'discussion', displayValue: 'Discussion Phase' },\n\tcommit: { value: 'commit', displayValue: 'Commit Phase' },\n\treveal: { value: 'reveal', displayValue: 'Reveal Phase' },\n\tcomplete: { value: 'complete', displayValue: 'Complete' },\n};\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport { VoteContext } from './VoteContext';\nimport { withFactomCli } from './FactomCliContext';\nimport { withNetwork } from './NetworkContext';\nimport { FactomVoteManager } from 'factom-vote/dist/factom-vote';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { POLL_STATUSES } from '../vote/create/VOTE_CONSTANTS';\nimport { VOTE_TYPE_DATA } from '../vote/create/VOTE_CONSTANTS';\n\n/**\n * Queries\n */\nconst PUBLIC_KEYS_RESOLVER = gql`\n\tquery PubKeyResolver($chain: String!) {\n\t\tidentityKeysAtHeight(chain: $chain)\n\t}\n`;\n\nclass VoteController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfactomVoteManager: this.newFactomVoteManager(),\n\t\t\tsubmitVote: this.submitVote,\n\t\t\tgetPollStatus: this.getPollStatus,\n\t\t\tgetPhaseEndBlock: this.getPhaseEndBlock,\n\t\t\tgetPollType: this.getPollType,\n\t\t\tcommitVote: this.commitVote,\n\t\t\trevealVote: this.revealVote,\n\t\t};\n\t}\n\n\tclient = new ApolloClient({\n\t\turi: this.props.networkController.networkProps.voteApiUrl,\n\t});\n\n\tpublicKeysResolver = async (identityChainId, blockHeight) => {\n\t\tconst { data } = await this.client.query({\n\t\t\tquery: PUBLIC_KEYS_RESOLVER,\n\t\t\tvariables: {\n\t\t\t\tchain: identityChainId,\n\t\t\t},\n\t\t});\n\n\t\tif (!_isNil(_get(data, 'identityKeysAtHeight'))) {\n\t\t\treturn _get(data, 'identityKeysAtHeight');\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t};\n\n\tnewFactomVoteManager = () =>\n\t\tnew FactomVoteManager(\n\t\t\tthis.props.factomCliController.getDefaultConnectionParams(),\n\t\t\t{\n\t\t\t\tpublicKeysResolver: this.publicKeysResolver,\n\t\t\t\tprivateKeysResolver: null,\n\t\t\t}\n\t\t);\n\n\tsubmitVote = async (voteData, ecPrivateAddress) => {\n\t\tconst skipValidation = true;\n\n\t\tconst result = await this.state.factomVoteManager.createVote(\n\t\t\tvoteData,\n\t\t\tecPrivateAddress,\n\t\t\tskipValidation\n\t\t);\n\n\t\treturn result;\n\t};\n\n\tcommitVote = async ({ voteChainId, vote, voter, ecPrivateAddress }) => {\n\t\tconst skipValidation = false;\n\n\t\tconst result = await this.state.factomVoteManager.commitVote(\n\t\t\tvoteChainId,\n\t\t\tvote,\n\t\t\tvoter,\n\t\t\tecPrivateAddress,\n\t\t\tskipValidation\n\t\t);\n\n\t\treturn result;\n\t};\n\n\trevealVote = async ({ voteChainId, vote, voterId, ecPrivateAddress }) => {\n\t\tconst skipValidation = false;\n\n\t\tconst result = await this.state.factomVoteManager.revealVote(\n\t\t\tvoteChainId,\n\t\t\tvote,\n\t\t\tvoterId,\n\t\t\tecPrivateAddress,\n\t\t\tskipValidation\n\t\t);\n\n\t\treturn result;\n\t};\n\n\tgetPhaseEndBlock = ({ commitStart, commitEnd, revealEnd }) => {\n\t\tconst workingHeight = this.props.factomCliController.blockHeight + 1;\n\n\t\tif (workingHeight < commitStart) {\n\t\t\t// discussion phase\n\t\t\treturn commitStart - 1;\n\t\t} else if (workingHeight <= commitEnd) {\n\t\t\t// commit phase\n\t\t\treturn commitEnd;\n\t\t} else if (workingHeight <= revealEnd) {\n\t\t\t// reveal phase\n\t\t\treturn revealEnd;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgetPollStatus = ({ commitStart, commitEnd, revealEnd }) => {\n\t\tconst workingHeight = this.props.factomCliController.blockHeight + 1;\n\n\t\tif (workingHeight < commitStart) {\n\t\t\treturn POLL_STATUSES.discussion;\n\t\t} else if (workingHeight <= commitEnd) {\n\t\t\treturn POLL_STATUSES.commit;\n\t\t} else if (workingHeight <= revealEnd) {\n\t\t\treturn POLL_STATUSES.reveal;\n\t\t} else {\n\t\t\treturn POLL_STATUSES.complete;\n\t\t}\n\t};\n\n\tgetPollType = (voteType, maxOptions) => {\n\t\tlet pollType_o;\n\n\t\tif (voteType === 0) {\n\t\t\tpollType_o = VOTE_TYPE_DATA['binary'];\n\t\t} else if (voteType === 1) {\n\t\t\tif (maxOptions === 1) {\n\t\t\t\tpollType_o = VOTE_TYPE_DATA['singleOption'];\n\t\t\t} else {\n\t\t\t\tpollType_o = VOTE_TYPE_DATA['approval'];\n\t\t\t}\n\t\t} else if (voteType === 2) {\n\t\t\tpollType_o = VOTE_TYPE_DATA['instantRunoff'];\n\t\t}\n\n\t\treturn pollType_o;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<ApolloProvider client={this.client}>\n\t\t\t\t<VoteContext.Provider value={this.state}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</VoteContext.Provider>\n\t\t\t</ApolloProvider>\n\t\t);\n\t}\n}\n\nconst enhancer = _flowRight(withNetwork, withFactomCli);\n\nexport default enhancer(VoteController);\n","import React from 'react';\n\nconst IdentityContext = React.createContext();\n\nconst withIdentity = (BaseComponent) => (props) => (\n\t<IdentityContext.Consumer>\n\t\t{(identityController) => (\n\t\t\t<BaseComponent {...props} identityController={identityController} />\n\t\t)}\n\t</IdentityContext.Consumer>\n);\n\nexport { IdentityContext, withIdentity };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IdentityContext } from './IdentityContext';\nimport { withNetwork } from './NetworkContext';\nimport { withFactomCli } from './FactomCliContext';\nimport _flowRight from 'lodash/flowRight';\nimport { Chain, Entry } from 'factom/dist/factom';\n\nconst IDENTITY_VERSION = 1;\n\nclass IdentityController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tregisterIdentity: this.registerIdentity,\n\t\t};\n\t}\n\n\tregisterIdentity = async ({ idPubKeys, idNames, ecPrivateKey }) => {\n\t\tlet content = {\n\t\t\t'identity-version': IDENTITY_VERSION,\n\t\t\tkeys: idPubKeys,\n\t\t};\n\n\t\t// build chain entry\n\t\tconst entryBuilder = Entry.builder();\n\n\t\tfor (const name of idNames) {\n\t\t\tentryBuilder.extId(name, 'utf8');\n\t\t}\n\n\t\tconst entry = entryBuilder.content(JSON.stringify(content), 'utf8').build();\n\n\t\tconst chain = new Chain(entry);\n\n\t\t// submit chain entry\n\t\tconst result = await this.props.factomCliController.factomCli.add(\n\t\t\tchain,\n\t\t\tecPrivateKey\n\t\t);\n\n\t\treturn result;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<IdentityContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</IdentityContext.Provider>\n\t\t);\n\t}\n}\n\nIdentityController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nconst enhancer = _flowRight(withFactomCli, withNetwork);\n\nexport default enhancer(IdentityController);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Warning from '@material-ui/icons/Warning';\n\nclass ConfirmationDialogRaw extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tvalue: props.value,\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.value !== this.props.value) {\n\t\t\tthis.setState({ value: nextProps.value });\n\t\t}\n\t}\n\n\thandleAgree = () => {\n\t\tthis.props.onClose(this.state.value);\n\t};\n\n\thandleChange = (event, value) => {\n\t\tthis.setState({ value });\n\t};\n\n\trender() {\n\t\tconst { classes, value, ...other } = this.props;\n\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\tdisableBackdropClick\n\t\t\t\tdisableEscapeKeyDown\n\t\t\t\taria-labelledby=\"confirmation-dialog-title\"\n\t\t\t\t{...other}\n\t\t\t>\n\t\t\t\t<DialogTitle align=\"center\" style={{ backgroundColor: '#f50057' }}>\n\t\t\t\t\t<Warning fontSize=\"large\" />\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\n\t\t\t\t\t\tImportant\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tMyFactomWallet.com is a client-side interface wallet. We provide the\n\t\t\t\t\t\tuser with access to the Factom blockchain, but we do not store,\n\t\t\t\t\t\tcontrol or have access to ANY user wallet or blockchain information\n\t\t\t\t\t\tincluding keys or transaction data. Therefore,&nbsp;\n\t\t\t\t\t\t<b>we cannot reverse transactions or recover funds.</b>\n\t\t\t\t\t\t&nbsp; MyFactomWallet.com is not a bank or a custodian. Your assets\n\t\t\t\t\t\tand your security are entirely your own responsibility. By using\n\t\t\t\t\t\tMyFactomWallet.com and/or by clicking 'accept' at the bottom, you\n\t\t\t\t\t\tagree to the following notices:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\n\t\t\t\t\t\tNotices\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tThis project is under active development; there is always the\n\t\t\t\t\t\t\t\tpossibility something unexpected happens that causes your funds\n\t\t\t\t\t\t\t\tto be lost, including but not limited to third party domain\n\t\t\t\t\t\t\t\tattacks. <b>We are not responsible for any loss.</b>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tNever send funds from a mainnet address to a testnet address and\n\t\t\t\t\t\t\t\tvice versa. Sending Factoids to the testnet will likely result\n\t\t\t\t\t\t\t\tin a loss of factoids. You acknowledge that testnet Testoids and\n\t\t\t\t\t\t\t\tTest Credits have no value.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tWhen you create new Factoid or Entry Credit addresses on\n\t\t\t\t\t\t\t\tMyFactomWallet.com, a random 12-word cryptographic seed phrase\n\t\t\t\t\t\t\t\tis generated in the browser, and is used to generate new\n\t\t\t\t\t\t\t\taddresses and sign transactions.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tThe handling of your private keys or seed phrase is solely your\n\t\t\t\t\t\t\t\tresponsibility. It happens entirely on your computer, inside\n\t\t\t\t\t\t\t\tyour browser.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tWe never transmit, receive or store your private keys or seeds.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tWe do not charge a transaction fee (blockchain fees still\n\t\t\t\t\t\t\t\tapply).\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tWe are not a custodian and have no information about or control\n\t\t\t\t\t\t\t\tover your Factoids or Entry Credits.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tYou are simply using our interface to interact directly with the\n\t\t\t\t\t\t\t\tblockchain.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tIf you provide your public key (address) to someone, they can\n\t\t\t\t\t\t\t\ttransfer Factoids to you.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tIf you provide your private key or seed phrase to a person or\n\t\t\t\t\t\t\t\tentity, then that person or entity has full control of your\n\t\t\t\t\t\t\t\taccount, and may withdraw your funds.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tWe are not a custodian. Your funds are stored on the blockchain\n\t\t\t\t\t\t\t\tand protected by your private key and/or seed phrase. As\n\t\t\t\t\t\t\t\texplained above, your private key is solely your responsibility\n\t\t\t\t\t\t\t\tand MyFactomWallet.com does not store or have access to any of\n\t\t\t\t\t\t\t\tyour keys.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tOffered under MIT License Copyright © 2015-2018: THE SOFTWARE IS\n\t\t\t\t\t\t\t\tPROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\t\t\t\t\t\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t\t\t\t\t\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t\t\t\t\t\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t\t\t\t\t\t\t\tHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t\t\t\t\t\t\t\tWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t\t\t\t\t\t\t\tFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t\t\t\t\t\t\t\tOTHER DEALINGS IN THE SOFTWARE. The above copyright notice and\n\t\t\t\t\t\t\t\tthis permission notice shall be included in all copies or\n\t\t\t\t\t\t\t\tsubstantial portions of the Software.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\">\n\t\t\t\t\t\tImportant Tips\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tNever hand-type your public or private address.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tAlways send a small amount of Factoids first to ensure that the\n\t\t\t\t\t\t\t\ttransaction is processed correctly and the Factoids end up in\n\t\t\t\t\t\t\t\tthe correct address. After verifying this, you may send the full\n\t\t\t\t\t\t\t\tamount of Factoids.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tIf you generated a new Factoid or Entry Credit address in\n\t\t\t\t\t\t\t\tMyFactomWallet.com; save and back up the associated seed BEFORE\n\t\t\t\t\t\t\t\tyou send any funds to it.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tDo not post your private key or seed on any social media,\n\t\t\t\t\t\t\t\tchat-platforms, email/sms it, or store it in any cloud storage\n\t\t\t\t\t\t\t\tservice (Google Drive, Dropbox etc).\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tUse a hardware wallet for added protection (Ledger Nano X/S\n\t\t\t\t\t\t\t\tsupported at this time).\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tRegularly monitor the security of your computer operating system\n\t\t\t\t\t\t\t\tto ensure that it is not compromised by malicious software\n\t\t\t\t\t\t\t\twhereby unauthorized third parties may obtain your private key\n\t\t\t\t\t\t\t\tor seed.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tEnsure that you are not on a phishing site, but have landed on\n\t\t\t\t\t\t\t\tthe correct page (verify that you are on\n\t\t\t\t\t\t\t\thttps://www.myfactomwallet.com in the browser, and also check\n\t\t\t\t\t\t\t\tthat the “lock” symbol is displayed in the Chrome address bar).\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tThe user must understand that MyFactomWallet.com CANNOT:\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\tAccess your wallet or send your funds for you\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\tRecover or change your private key or seed\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\tReverse, cancel, or refund any transactions\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Typography>Freeze FCT or Entry Credit addresses</Typography>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.handleAgree} color=\"primary\">\n\t\t\t\t\t\tAccept\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n\nConfirmationDialogRaw.propTypes = {\n\tonClose: PropTypes.func,\n\tvalue: PropTypes.string,\n};\n\nconst styles = (theme) => ({});\n\nclass ConfirmationDialog extends React.Component {\n\tstate = {\n\t\topen: true,\n\t\tvalue: 'Done',\n\t};\n\n\thandleClose = (value) => {\n\t\tthis.setState({ value, open: false });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ConfirmationDialogRaw\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nConfirmationDialog.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _flowRight from 'lodash/flowRight';\nimport { withNetwork } from './context/NetworkContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TestnetWarningBar(props) {\n\tconst {\n\t\tclasses,\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tif (networkProps.network === 'testnet') {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.toolbarSpace} />\n\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\n\t\t\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t\t\tYou are connected to the Factom <b>Testnet</b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</React.Fragment>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nTestnetWarningBar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tminHeight: 78,\n\t\tpaddingTop: 9,\n\t\tbackgroundColor: '#ffa000',\n\t},\n\ttoolbar: {\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t},\n\twarningIcon: {\n\t\tfontSize: 52,\n\t},\n\ttoolbarSpace: {\n\t\theight: 85,\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(TestnetWarningBar);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withNetwork } from '../context/NetworkContext';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\n\nconst getImportTypes = (networkProps) => {\n\treturn [\n\t\t{\n\t\t\tvalue: 'fct',\n\t\t\tlabel: 'Import ' + networkProps.factoidAbbreviationFull + ' Address',\n\t\t},\n\t\t{\n\t\t\tvalue: 'ec',\n\t\t\tlabel: 'Import ' + networkProps.ecAbbreviationFull + ' Address',\n\t\t},\n\t\t{\n\t\t\tvalue: 'new',\n\t\t\tlabel: 'Generate new 12-word seed',\n\t\t},\n\t\t{\n\t\t\tvalue: 'importSeed',\n\t\t\tlabel: 'Import addresses from mnemonic seed phrase',\n\t\t},\n\t\t{\n\t\t\tvalue: 'ledger',\n\t\t\tlabel: 'Import addresses from Ledger Nano X/S',\n\t\t},\n\t];\n};\n\n/**\n * Constants\n */\nconst importTypePath = 'importType';\n\nclass ImportTypeForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\timportType,\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ [importTypePath]: importType }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[importTypePath]: Yup.string().required('Required'),\n\t\t\t\t})}\n\t\t\t\trender={({ values, handleChange, isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t_get(errors, importTypePath) && _get(touched, importTypePath)\n\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcomponent=\"fieldset\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormLabel component=\"legend\">\n\t\t\t\t\t\t\t\tHow would you like to add a new address?\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={importTypePath}\n\t\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>&nbsp;*</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormLabel>\n\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\taria-label=\"Import Type\"\n\t\t\t\t\t\t\t\tname={importTypePath}\n\t\t\t\t\t\t\t\tvalue={_get(values, importTypePath)}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tthis.props.updateImportType(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{getImportTypes(networkProps).map((option, index) => (\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\tlabel={option.label}\n\t\t\t\t\t\t\t\t\t\tdisabled={option.disabled}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button disabled={true}>Back</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nImportTypeForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red' },\n});\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(ImportTypeForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { isValidPublicFctAddress } from 'factom/dist/factom';\nimport get from 'lodash/get';\nimport findIndex from 'lodash/findIndex';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\n\n/**\n * Constants\n */\nconst FCT_ADDRESS_LENGTH = 52;\nconst NICKNAME_MAX_LENGTH = 25;\nconst fctAddrPath = 'factoidAddress';\nconst nicknamePath = 'nickname';\n\nclass ImportFctForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: { getFactoidAddresses, newStandardAddress, addAddress },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst factoidAddresses = getFactoidAddresses();\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ factoidAddress: '', nickname: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tconst fctAddress_o = newStandardAddress(\n\t\t\t\t\t\tget(values, fctAddrPath),\n\t\t\t\t\t\tget(values, nicknamePath).trim()\n\t\t\t\t\t);\n\n\t\t\t\t\taddAddress(fctAddress_o, 'fct');\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[fctAddrPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(fctAddrPath, 'Invalid Address', isValidPublicFctAddress)\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tfctAddrPath,\n\t\t\t\t\t\t\t'Enter unique address',\n\t\t\t\t\t\t\t(value) => findIndex(factoidAddresses, ['address', value]) === -1\n\t\t\t\t\t\t),\n\t\t\t\t\t[nicknamePath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tnicknamePath,\n\t\t\t\t\t\t\t'Enter unique nickname',\n\t\t\t\t\t\t\t(value) =>\n\t\t\t\t\t\t\t\tfindIndex(factoidAddresses, [nicknamePath, value]) === -1\n\t\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\terrors.factoidAddress && touched.factoidAddress ? true : false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={fctAddrPath}\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t'Public ' + networkProps.factoidAbbreviationFull + ' Address'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmaxLength={FCT_ADDRESS_LENGTH}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname={fctAddrPath}\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<Field name={props.name}>\n\t\t\t{({ field }) => (\n\t\t\t\t<TextField\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\tmaxLength: props.maxLength,\n\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\terror={props.error}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Field>\n\t);\n};\n\nImportFctForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(ImportFctForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { isValidPublicEcAddress } from 'factom/dist/factom';\nimport _get from 'lodash/get';\nimport findIndex from 'lodash/findIndex';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\n\n/**\n * Constants\n */\nconst EC_ADDRESS_LENGTH = 52;\nconst NICKNAME_MAX_LENGTH = 25;\nconst ecAddrNamePath = 'entryCreditAddress';\nconst nicknamePath = 'nickname';\n\nclass ImportEcForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: {\n\t\t\t\tgetEntryCreditAddresses,\n\t\t\t\tnewStandardAddress,\n\t\t\t\taddAddress,\n\t\t\t},\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst ecAddresses = getEntryCreditAddresses();\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ entryCreditAddress: '', nickname: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tconst ecAddress_o = newStandardAddress(\n\t\t\t\t\t\t_get(values, ecAddrNamePath),\n\t\t\t\t\t\t_get(values, nicknamePath).trim()\n\t\t\t\t\t);\n\n\t\t\t\t\taddAddress(ecAddress_o, 'ec');\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[ecAddrNamePath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(ecAddrNamePath, 'Invalid Address', isValidPublicEcAddress)\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tecAddrNamePath,\n\t\t\t\t\t\t\t'Enter unique address',\n\t\t\t\t\t\t\t(value) => findIndex(ecAddresses, ['address', value]) === -1\n\t\t\t\t\t\t),\n\t\t\t\t\t[nicknamePath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tnicknamePath,\n\t\t\t\t\t\t\t'Enter unique nickname',\n\t\t\t\t\t\t\t(value) => findIndex(ecAddresses, [nicknamePath, value]) === -1\n\t\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\terrors.entryCreditAddress && touched.entryCreditAddress\n\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={ecAddrNamePath}\n\t\t\t\t\t\t\tlabel={'Public ' + networkProps.ecAbbreviationFull + ' Address'}\n\t\t\t\t\t\t\thelperText=\"test\"\n\t\t\t\t\t\t\tmaxLength={EC_ADDRESS_LENGTH}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname={ecAddrNamePath}\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\trender={(msg) => <span className={classes.errorText}>{msg}</span>}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<Field name={props.name}>\n\t\t\t{({ field }) => (\n\t\t\t\t<TextField\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\tmaxLength: props.maxLength,\n\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\terror={props.error}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Field>\n\t);\n};\n\nImportEcForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(ImportEcForm);\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withSeed } from '../context/SeedContext';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n * Constants\n */\nconst mnemonicPath = 'mnemonic';\n\nclass NewSeedForm extends React.Component {\n\tstate = {\n\t\tstep: 1,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.setMnemonic(this.props.seedController.getRandomMnemonic());\n\t}\n\n\tnextStep = () => {\n\t\tthis.setState({ step: 2 });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[mnemonicPath]: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[mnemonicPath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.oneOf([this.props.mnemonic], 'Seed does not match'),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tstyle={{ width: '500px' }}\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.step === 1 && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\n\t\t\t\t\t\t\t\t\tclassName={classes.warningText}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tWrite down your seed carefully on a piece of paper. This seed\n\t\t\t\t\t\t\t\t\tprovides access to all the derived addresses. If you lose this\n\t\t\t\t\t\t\t\t\tseed, you will lose access to your addresses forever!\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\tSeed Phrase:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography>{this.props.mnemonic}</Typography>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.state.step === 2 && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname={mnemonicPath}\n\t\t\t\t\t\t\t\t\tlabel=\"Verify Seed Phrase\"\n\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={mnemonicPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{this.state.step === 1 && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={this.nextStep}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tVerify Seed\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.step === 2 && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<Field name={props.name}>\n\t\t\t{({ field }) => (\n\t\t\t\t<TextField\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\terror={props.error}\n\t\t\t\t\tautoFocus={props.autoFocus}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Field>\n\t);\n};\n\nNewSeedForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\twarningText: { color: 'red', fontSize: '15px' },\n\terrorText: { color: 'red' },\n});\n\nconst enhancer = _flowRight(withSeed, withStyles(styles));\n\nexport default enhancer(NewSeedForm);\n","import React from 'react';\nimport { withNetwork } from '../../context/NetworkContext';\nimport _flowRight from 'lodash/flowRight';\n/**\n * Constants\n */\nconst FACTOSHI_MULTIPLIER = 0.00000001;\n\nconst FormatBalance = (props) => {\n\tconst {\n\t\tbalance,\n\t\ttype,\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tif (type === 'fct') {\n\t\treturn <FormatFCTBalance balance={balance} networkProps={networkProps} />;\n\t} else if (type === 'ec') {\n\t\treturn <FormatECBalance balance={balance} networkProps={networkProps} />;\n\t}\n};\n\nconst FormatFCTBalance = (props) => {\n\tlet result = '';\n\tconst factoshiBalance = props.balance;\n\n\tconst factoidBalance = parseInt(factoshiBalance, 10) * FACTOSHI_MULTIPLIER;\n\n\tresult = (\n\t\t<span>\n\t\t\t{factoidBalance.toLocaleString(undefined, {\n\t\t\t\tmaximumFractionDigits: 8,\n\t\t\t})}\n\t\t\t&nbsp;&nbsp;{props.networkProps.factoidAbbreviation}\n\t\t</span>\n\t);\n\n\treturn result;\n};\n\nconst FormatECBalance = (props) => {\n\tlet result = '';\n\tconst entryCreditBalance = props.balance;\n\n\tresult = (\n\t\t<span>\n\t\t\t{parseInt(entryCreditBalance, 10)}\n\t\t\t&nbsp;&nbsp;{props.networkProps.ecAbbreviation}\n\t\t</span>\n\t);\n\n\treturn result;\n};\n\nconst enhancer = _flowRight(withNetwork);\nexport default enhancer(FormatBalance);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, ErrorMessage, FieldArray } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport FormatBalance from '../walletManager/shared/BalanceFormatter.js';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * Constants\n */\nconst addressesPath = 'addresses';\nconst NICKNAME_MAX_LENGTH = 25;\n\nclass GenerateAddressTable extends React.Component {\n\tstate = { loading: false };\n\n\taddGeneratedAddress = (nickname, address_o, index, arrayHelpers) => {\n\t\tif (nickname) {\n\t\t\tconst addr_o = this.props.newAddress(\n\t\t\t\taddress_o.address,\n\t\t\t\tnickname.trim(),\n\t\t\t\tindex\n\t\t\t);\n\t\t\tarrayHelpers.replace(index, addr_o);\n\t\t} else {\n\t\t\tarrayHelpers.replace(index, null);\n\t\t}\n\t};\n\n\tvalidateNickname = (value) => {\n\t\tconst { userAddressList } = this.props;\n\t\tconst userAddressNicknames = userAddressList.map(\n\t\t\t(addr_o) => addr_o.nickname\n\t\t);\n\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Required';\n\t\t} else if (userAddressNicknames.indexOf(value.trim()) !== -1) {\n\t\t\terror = 'Enter unique nickname';\n\t\t}\n\t\treturn error;\n\t};\n\n\tgetNext = async () => {\n\t\tthis.setState({ loading: true });\n\t\tawait this.props.getNextFive();\n\t\tthis.setState({ loading: false });\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tgeneratedAddressList,\n\t\t\tuserAddressList, // existing addresses\n\t\t\tvalues,\n\t\t\terrors,\n\t\t\ttouched,\n\t\t\tsetFieldValue,\n\t\t\thandleChange,\n\t\t} = this.props;\n\n\t\tconst userAddresses = userAddressList.map((addr_o) => addr_o.address);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Typography variant=\"h6\">{this.props.title}</Typography>\n\t\t\t\t<ErrorMessage\n\t\t\t\t\tname={addressesPath}\n\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t<span className={classes.errorText}>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{msg}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Paper className={classes.root}>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<CustomCell />\n\t\t\t\t\t\t\t\t<CustomCell>Address</CustomCell>\n\t\t\t\t\t\t\t\t<CustomCell>Balance</CustomCell>\n\t\t\t\t\t\t\t\t<CustomCell>Nickname</CustomCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{!_isEmpty(generatedAddressList) &&\n\t\t\t\t\t\t\t\tgeneratedAddressList.map((address_o, index) => {\n\t\t\t\t\t\t\t\t\tconst checkboxPath = 'checkbox_' + index;\n\t\t\t\t\t\t\t\t\tconst nicknamePath = 'nickname_' + index;\n\t\t\t\t\t\t\t\t\tconst duplicate =\n\t\t\t\t\t\t\t\t\t\tuserAddresses.indexOf(address_o.address) === -1\n\t\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t\t: true;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\t\t\tname={addressesPath}\n\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Address already added\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.replace(index, null);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(nicknamePath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>{address_o.address}</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormatBalance\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance={address_o.balance}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={this.props.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserAddressList.find((addr_o) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn addr_o.address === address_o.address;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}).nickname\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, checkboxPath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateNickname}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.addGeneratedAddress(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress_o,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched[nicknamePath]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: NICKNAME_MAX_LENGTH,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorTextSmall}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{msg}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t<TableFooter />\n\t\t\t\t\t</Table>\n\t\t\t\t</Paper>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={this.getNext}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={this.state.loading}\n\t\t\t\t>\n\t\t\t\t\tLoad Five More\n\t\t\t\t\t{(this.state.loading || _isEmpty(generatedAddressList)) && (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nconst CustomCell = withStyles((theme) => ({\n\thead: {\n\t\tcolor: 'black',\n\t\tfontSize: '13px',\n\t\tpaddingLeft: 5,\n\t\tpaddingRight: 5,\n\t},\n\tbody: {\n\t\tpaddingLeft: 5,\n\t\tpaddingRight: 5,\n\t},\n}))(TableCell);\n\nconst styles = (theme) => ({\n\troot: {\n\t\twidth: '800px',\n\t\tmarginTop: 12,\n\t\toverflowX: 'auto',\n\t\tmaxHeight: 405,\n\t},\n\thead: {\n\t\tbackgroundColor: theme.palette.common.black,\n\t\tcolor: theme.palette.common.white,\n\t},\n\terrorText: {\n\t\tcolor: 'red',\n\t\tfontSize: '20px',\n\t},\n\terrorTextSmall: {\n\t\tcolor: 'red',\n\t\tfontSize: '12px',\n\t},\n});\n\nexport default withStyles(styles)(GenerateAddressTable);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport { withWalletContext } from '../context/WalletContext';\nimport Typography from '@material-ui/core/Typography';\nimport { withLedger } from '../context/LedgerContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport GenerateAddressTable from './GenerateAddressTable';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * Constants\n */\nconst addressesPath = 'addresses';\n\nconst getTitle = (networkProps) => {\n\treturn {\n\t\tfct:\n\t\t\t'Ledger Nano X/S ' + networkProps.factoidAbbreviationFull + ' Addresses',\n\t\tec: 'Ledger Nano X/S ' + networkProps.ecAbbreviationFull + ' Addresses',\n\t};\n};\n\nclass LedgerForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgeneratedAddressList: [],\n\t\t\tledgerConnected: false,\n\t\t\tledgerStatus: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getNextFive();\n\t}\n\n\tretryConnection = () => {\n\t\tthis.setState({\n\t\t\tledgerStatus: null,\n\t\t});\n\t\tthis.getNextFive();\n\t};\n\n\tgetNextFive = async () => {\n\t\ttry {\n\t\t\tconst addressList = await this.props.ledgerController.getLedgerAddresses(\n\t\t\t\tthis.state.generatedAddressList.length,\n\t\t\t\t5,\n\t\t\t\tthis.props.type\n\t\t\t);\n\n\t\t\tconst generatedAddressList = await Promise.all(\n\t\t\t\taddressList.map(this.props.walletController.updateWalletBalance)\n\t\t\t);\n\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tgeneratedAddressList: [\n\t\t\t\t\t...prevState.generatedAddressList,\n\t\t\t\t\t...generatedAddressList,\n\t\t\t\t],\n\t\t\t\tledgerConnected: true,\n\t\t\t}));\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.setState({\n\t\t\t\tledgerStatus: 'Ledger Nano X/S not found. Troubleshooting tips:',\n\t\t\t\tledgerConnected: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thasAddressSelected = (formValues) =>\n\t\tObject.keys(formValues)\n\t\t\t.filter((key) => key.startsWith('checkbox'))\n\t\t\t.some((key) => formValues[key]);\n\n\trender() {\n\t\tconst {\n\t\t\ttype,\n\t\t\twalletController: { getAddresses, addAddresses, newLedgerAddress },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tlet userAddressList = getAddresses(type);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\taddresses: [],\n\t\t\t\t\tledgerConnected: this.state.ledgerConnected,\n\t\t\t\t\tledgerStatus: this.state.ledgerStatus,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tlet validAddresses = [];\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\n\t\t\t\t\t\tif (!_isNil(value)) {\n\t\t\t\t\t\t\tvalidAddresses.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add addresses\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t/* \t[addressesPath]: Yup.array()\n\t\t\t\t\t\t.compact()\n\t\t\t\t\t\t.required('* You must add an Address'), */\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t{values.ledgerConnected ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<GenerateAddressTable\n\t\t\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\n\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\n\t\t\t\t\t\t\t\t\tuserAddressList={userAddressList}\n\t\t\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\n\t\t\t\t\t\t\t\t\tnewAddress={newLedgerAddress}\n\t\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{!_isNil(values.ledgerStatus) ? (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography>{values.ledgerStatus}</Typography>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tLedger devices are currently not working on Windows 10\n\t\t\t\t\t\t\t\t\t\t\t\t\tdue to an issue out of our control.\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using a Ledger Nano X/S device?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs the Factom app launched on your device?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs your device running the latest version?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you closed the Ledger Live Manager?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.google.com/chrome/'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Are you running any adblockers?</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you tried restarting your device?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSupport is available in the #ledger-nano-s channel on\n\t\t\t\t\t\t\t\t\t\t\t\t\tour&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDiscord server\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.retryConnection}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRetry\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t<b>Connecting to Ledger Nano X/S</b>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t<b>Note:</b>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tThe Ledger Nano X/S hardware wallet can be ordered\n\t\t\t\t\t\t\t\t\t\t\t\tfrom&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.ledger.com/?r=1b0be6fa98ba'}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tLedger's website\n\t\t\t\t\t\t\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t(affiliate link).\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tTo function properly, the Factom application needs to be\n\t\t\t\t\t\t\t\t\t\t\t\tlaunched on the Ledger Nano X/S. You can install the\n\t\t\t\t\t\t\t\t\t\t\t\tapplication from the Ledger Live Manager.\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting || !this.state.ledgerConnected}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nLedgerForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithLedger,\n\twithWalletContext,\n\twithStyles(styles)\n);\n\nexport default enhancer(LedgerForm);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withSeed } from '../context/SeedContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport GenerateAddressTable from './GenerateAddressTable';\n\n/**\n * Constants\n */\nconst addressesPath = 'addresses';\n\nconst getTitle = (networkProps) => {\n\treturn {\n\t\tfct: networkProps.factoidAbbreviationFull + ' Addresses',\n\t\tec: networkProps.ecAbbreviationFull + ' Addresses',\n\t};\n};\n\nclass SeedForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgeneratedAddressList: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getNextFive();\n\t}\n\n\tgetNextFive = async () => {\n\t\tconst generatedAddressList = await this.props.seedController.getSeedAddresses(\n\t\t\tthis.props.mnemonic,\n\t\t\tthis.state.generatedAddressList.length,\n\t\t\t5,\n\t\t\tthis.props.type\n\t\t);\n\n\t\tthis.setState((prevState) => ({\n\t\t\tgeneratedAddressList: [\n\t\t\t\t...prevState.generatedAddressList,\n\t\t\t\t...generatedAddressList,\n\t\t\t],\n\t\t}));\n\t};\n\n\thasAddressSelected = (formValues) =>\n\t\tObject.keys(formValues)\n\t\t\t.filter((key) => key.startsWith('checkbox'))\n\t\t\t.some((key) => formValues[key]);\n\n\trender() {\n\t\tconst {\n\t\t\ttype,\n\t\t\twalletController: { getAddresses, addAddresses, newSeedAddress },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tlet userAddressList = getAddresses(type);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[addressesPath]: [],\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tlet validAddresses = [];\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\n\t\t\t\t\t\tif (!_isNil(value)) {\n\t\t\t\t\t\t\tvalidAddresses.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// add addresses\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<GenerateAddressTable\n\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\n\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\n\t\t\t\t\t\t\tuserAddressList={userAddressList}\n\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\n\t\t\t\t\t\t\tnewAddress={newSeedAddress}\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.props.handleBack && (\n\t\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nSeedForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithSeed,\n\twithWalletContext,\n\twithStyles(styles)\n);\n\nexport default enhancer(SeedForm);\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport factombip44 from 'factombip44/dist/factombip44';\n\n/**\n * Constants\n */\nconst mnemonicPath = 'mnemonic';\n\nclass ImportSeedForm extends React.Component {\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[mnemonicPath]: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tthis.props.setMnemonic(_get(values, mnemonicPath).trim());\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[mnemonicPath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tmnemonicPath,\n\t\t\t\t\t\t\t'Invalid Seed Phrase',\n\t\t\t\t\t\t\tfactombip44.validMnemonic\n\t\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tstyle={{ width: '500px' }}\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\n\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={mnemonicPath}\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\tplaceholder={'Enter Seed Phrase'}\n\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\tname={mnemonicPath}\n\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<Field name={props.name}>\n\t\t\t{({ field }) => (\n\t\t\t\t<TextField\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\terror={props.error}\n\t\t\t\t\tautoFocus={props.autoFocus}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Field>\n\t);\n};\n\nImportSeedForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\twarningText: { color: 'red', fontSize: '15px' },\n\terrorText: { color: 'red' },\n});\n\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\n\nexport default enhancer(ImportSeedForm);\n","import React from 'react';\nimport ImportTypeForm from './ImportTypeForm';\nimport ImportFctForm from './ImportFctForm';\nimport ImportEcForm from './ImportEcForm';\nimport NewSeedForm from './NewSeedForm';\nimport LedgerForm from './LedgerForm';\nimport SeedForm from './SeedForm';\nimport ImportSeedForm from './ImportSeedForm';\n\nclass AddWalletStepContent extends React.Component {\n\tstate = { mnemonic: null };\n\n\tsetMnemonic = (mnemonic) => {\n\t\tthis.setState({ mnemonic });\n\t};\n\n\trender() {\n\t\tswitch (this.props.activeStep) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<ImportTypeForm\n\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\timportType={this.props.importType}\n\t\t\t\t\t\tupdateImportType={this.props.updateImportType}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 1:\n\t\t\t\tif (this.props.importType === 'fct') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ImportFctForm\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} else if (this.props.importType === 'ec') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ImportEcForm\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} else if (this.props.importType === 'new') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<NewSeedForm\n\t\t\t\t\t\t\tsetMnemonic={this.setMnemonic}\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} else if (this.props.importType === 'importSeed') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ImportSeedForm\n\t\t\t\t\t\t\tsetMnemonic={this.setMnemonic}\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} else if (this.props.importType === 'ledger') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<LedgerForm\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t\ttype=\"fct\"\n\t\t\t\t\t\t\tkey=\"fctLedgerForm\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif (\n\t\t\t\t\tthis.props.importType === 'new' ||\n\t\t\t\t\tthis.props.importType === 'importSeed'\n\t\t\t\t) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<SeedForm\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\ttype=\"fct\"\n\t\t\t\t\t\t\tkey=\"fctSeedForm\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} /* else if (this.props.importType === 'ledger') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<LedgerForm\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t\ttype=\"ec\"\n\t\t\t\t\t\t\tkey=\"ecLedgerForm\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} */\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif (\n\t\t\t\t\tthis.props.importType === 'new' ||\n\t\t\t\t\tthis.props.importType === 'importSeed'\n\t\t\t\t) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<SeedForm\n\t\t\t\t\t\t\tmnemonic={this.state.mnemonic}\n\t\t\t\t\t\t\thandleNext={this.props.handleNext}\n\t\t\t\t\t\t\thandleBack={this.props.handleBack}\n\t\t\t\t\t\t\ttype=\"ec\"\n\t\t\t\t\t\t\tkey=\"ecSeedForm\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn 'Unknown step';\n\t\t}\n\t}\n}\nexport default AddWalletStepContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withNetwork } from '../context/NetworkContext';\nimport _flowRight from 'lodash/flowRight';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddWalletStepContent from './AddWalletStepContent';\nimport SectionHeader from '../vote/shared/SectionHeader.js';\nimport Paper from '@material-ui/core/Paper';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withWalletContext } from '../context/WalletContext';\n\nconst getStandardSteps = () => {\n\treturn ['Import Method', 'Address details'];\n};\n\nconst getLedgerAddressSteps = (networkProps) => {\n\treturn [\n\t\t'Import Method',\n\t\tnetworkProps.factoidAbbreviationFull,\n\t\t//\tnetworkProps.ecAbbreviationFull,\n\t];\n};\n//this.props.networkController.networkProps.factoidAbbreviation\nconst getSeedAddressSteps = (networkProps) => {\n\treturn [\n\t\t'Import Method',\n\t\t'Seed Value',\n\t\tnetworkProps.factoidAbbreviationFull,\n\t\tnetworkProps.ecAbbreviationFull,\n\t];\n};\n\nconst stepMap = {\n\timportSeed: getSeedAddressSteps,\n\tnew: getSeedAddressSteps,\n\tledger: getLedgerAddressSteps,\n\tfct: getStandardSteps,\n\tec: getStandardSteps,\n};\n\nclass AddWalletStepper extends React.Component {\n\tinitialState = {\n\t\tactiveStep: 0,\n\t\timportType: 'fct',\n\t\tgetSteps: getStandardSteps,\n\t};\n\n\tstate = this.initialState;\n\n\tupdateImportType = (importType) => {\n\t\tthis.setState({\n\t\t\timportType: importType,\n\t\t\tgetSteps: stepMap[importType],\n\t\t});\n\t};\n\n\thandleNext = () => {\n\t\tthis.setState((state) => ({\n\t\t\tactiveStep: state.activeStep + 1,\n\t\t}));\n\t};\n\n\thandleBack = () => {\n\t\tthis.setState((state) => ({\n\t\t\tactiveStep: state.activeStep - 1,\n\t\t}));\n\t};\n\n\thandleReset = () => {\n\t\tthis.setState(this.initialState);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\thandleCloseText,\n\t\t\tnetworkController: { networkProps },\n\t\t\twalletController: { isWalletEmpty },\n\t\t} = this.props;\n\n\t\tconst { activeStep } = this.state;\n\n\t\tconst steps = this.state.getSteps(networkProps);\n\t\tconst sectionHeaderText =\n\t\t\tnetworkProps.network === 'testnet'\n\t\t\t\t? 'Add Testnet Address'\n\t\t\t\t: 'Add Address';\n\n\t\treturn (\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<SectionHeader text={sectionHeaderText} id=\"modal-title\" />\n\t\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\n\t\t\t\t\t{steps.map((label, index) => {\n\t\t\t\t\t\tconst props = {};\n\t\t\t\t\t\tconst labelProps = {};\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Step key={label} {...props}>\n\t\t\t\t\t\t\t\t<StepLabel {...labelProps}>{label}</StepLabel>\n\t\t\t\t\t\t\t</Step>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Stepper>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{activeStep === steps.length ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{networkProps.network === 'testnet' ? (\n\t\t\t\t\t\t\t\t<TestnetFinalStep\n\t\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<MainnetFinalStep\n\t\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{!isWalletEmpty() ? (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.handleReset}>Add Another</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleClose}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{handleCloseText}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={this.handleReset}>\n\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<AddWalletStepContent\n\t\t\t\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\t\t\t\tupdateImportType={this.updateImportType}\n\t\t\t\t\t\t\t\thandleNext={this.handleNext}\n\t\t\t\t\t\t\t\thandleBack={this.handleBack}\n\t\t\t\t\t\t\t\timportType={this.state.importType}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</React.Fragment>\n\t\t\t</Paper>\n\t\t);\n\t}\n}\nAddWalletStepper.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst MainnetFinalStep = ({ classes, isWalletEmpty }) => {\n\tif (isWalletEmpty) {\n\t\treturn (\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\tNo Addresses have been added.\n\t\t\t</Typography>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\tYou have finished adding an address.\n\t\t\t</Typography>\n\t\t);\n\t}\n};\n\nconst TestnetFinalStep = ({ classes, isWalletEmpty }) => {\n\tif (isWalletEmpty) {\n\t\treturn (\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\tNo Addresses have been added.\n\t\t\t</Typography>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\t\tYou have finished adding a Testnet address.\n\t\t\t\t</Typography>\n\t\t\t\t<Paper className={classes.testnetWarning}>\n\t\t\t\t\t<Typography className={classes.warningText}>\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\n\t\t\t\t\t\t&nbsp;&nbsp;Use these addresses for Testnet ONLY. Do not send real\n\t\t\t\t\t\tFactoids to these addresses, or you run the risk of losing them.\n\t\t\t\t\t\tPlease read all notices.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tYou can use the{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\thref={'https://faucet.factoid.org/'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFactom Testnet Faucet{' '}\n\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tto receive Testoids.\n\t\t\t\t\t</Typography>\n\t\t\t\t</Paper>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n};\n\nconst styles = (theme) => ({\n\tstepper: {\n\t\tbackgroundColor: '#eeeeee',\n\t},\n\tpaper: {\n\t\tminWidth: 565,\n\t\tpadding: theme.spacing.unit * 4,\n\t\tminHeight: 300,\n\t},\n\ttestnetWarning: {\n\t\tborderColor: '#ffa000',\n\t\tborderStyle: 'solid',\n\t\tpadding: 5,\n\t\twidth: 415,\n\t},\n\twarningIcon: {\n\t\tcolor: '#ffa000',\n\t\tdisplay: 'inline',\n\t\tposition: 'relative',\n\t\ttop: '6px',\n\t},\n\twarningText: {\n\t\tdisplay: 'inline',\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(AddWalletStepper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport AddWalletStepper from './AddWalletStepper';\n\nclass AddWalletModal extends React.Component {\n\tstate = {\n\t\topen: false,\n\t};\n\n\thandleOpen = () => {\n\t\tthis.setState({ open: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ open: false });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.center}>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={this.handleOpen}\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\tAdd Address\n\t\t\t\t</Button>\n\t\t\t\t<Modal\n\t\t\t\t\taria-labelledby=\"modal-title\"\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.modalContent}>\n\t\t\t\t\t\t<AddWalletStepper\n\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t\thandleCloseText=\"Exit\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n}\nAddWalletModal.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tmodalContent: {\n\t\tposition: 'absolute',\n\t\tboxShadow: theme.shadows[5],\n\t\ttop: `50%`,\n\t\tleft: `50%`,\n\t\ttransform: `translate(-50%, -50%)`,\n\t\tminWidth: '490px',\n\t},\n\tbutton: {\n\t\twidth: '275px;',\n\t\theight: '50px',\n\t\tmarginBottom: '15px',\n\t},\n\tcenter: {\n\t\tmargin: '0 auto',\n\t},\n});\n\nexport default withStyles(styles)(AddWalletModal);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddWalletModal from '../addWallet/AddWalletModal.js';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormatBalance from './shared/BalanceFormatter.js';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport _isEmpty from 'lodash/isEmpty';\nimport ledgerLogo from '../component/logo/ledgerLogo.svg';\nimport { GiAcorn } from 'react-icons/gi';\nimport { IoIosKey } from 'react-icons/io';\n\nclass Sidebar extends Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: {\n\t\t\t\tgetEntryCreditAddresses,\n\t\t\t\tgetFactoidAddresses,\n\t\t\t\tactiveAddressIndex_o,\n\t\t\t\tselectAddress,\n\t\t\t\tupdateBalances,\n\t\t\t},\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst ecAddresses = getEntryCreditAddresses();\n\t\tconst factoidAddresses = getFactoidAddresses();\n\n\t\tconst addressContainer = { paddingRight: '0px' };\n\n\t\tconst listfactoidAddresses = factoidAddresses.map(function(wallet, index) {\n\t\t\tconst expanded =\n\t\t\t\tactiveAddressIndex_o.index === index &&\n\t\t\t\tactiveAddressIndex_o.type === 'fct';\n\t\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\n\n\t\t\treturn (\n\t\t\t\t<ExpansionPanel\n\t\t\t\t\tkey={index}\n\t\t\t\t\texpanded={expanded}\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tawait selectAddress(index, 'fct');\n\t\t\t\t\t\tupdateBalances();\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={expanded ? classes.expanded : ''}\n\t\t\t\t>\n\t\t\t\t\t<ExpansionPanelSummary className={classes.addressName}>\n\t\t\t\t\t\t<Grid container justify=\"space-between\" style={addressContainer}>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<Typography className={classes.break} style={nicknameStyle}>\n\t\t\t\t\t\t\t\t\t{wallet.nickname}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{!_isNil(wallet.balance) && (\n\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.break}>\n\t\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"fct\" />\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Grid item xs={1} className={classes.iconContainer}>\n\t\t\t\t\t\t\t\t{wallet.importType === 'seed' && (\n\t\t\t\t\t\t\t\t\t<GiAcorn className={classes.sidebarIcon} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{wallet.importType === 'ledger' && (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName={classes.ledgerLogo}\n\t\t\t\t\t\t\t\t\t\tsrc={ledgerLogo}\n\t\t\t\t\t\t\t\t\t\talt=\"ledger icon\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{wallet.importType === 'standard' && (\n\t\t\t\t\t\t\t\t\t<IoIosKey className={classes.sidebarIcon} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t</ExpansionPanel>\n\t\t\t);\n\t\t});\n\n\t\tconst listecAddresses = ecAddresses.map(function(wallet, index) {\n\t\t\tconst expanded =\n\t\t\t\tactiveAddressIndex_o.index === index &&\n\t\t\t\tactiveAddressIndex_o.type === 'ec';\n\n\t\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\n\n\t\t\treturn (\n\t\t\t\t<ExpansionPanel\n\t\t\t\t\tkey={index}\n\t\t\t\t\texpanded={expanded}\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tawait selectAddress(index, 'ec');\n\t\t\t\t\t\tupdateBalances();\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={expanded ? classes.expanded : ''}\n\t\t\t\t>\n\t\t\t\t\t<ExpansionPanelSummary className={classes.addressName}>\n\t\t\t\t\t\t<Grid container justify=\"space-between\" style={addressContainer}>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<Typography className={classes.break} style={nicknameStyle}>\n\t\t\t\t\t\t\t\t\t{wallet.nickname}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{!_isNil(wallet.balance) && (\n\t\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.break}>\n\t\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"ec\" />\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Grid item xs={1} className={classes.iconContainer}>\n\t\t\t\t\t\t\t\t{wallet.importType === 'seed' && (\n\t\t\t\t\t\t\t\t\t<GiAcorn className={classes.sidebarIcon} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{wallet.importType === 'standard' && (\n\t\t\t\t\t\t\t\t\t<IoIosKey className={classes.sidebarIcon} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t</ExpansionPanel>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{!_isEmpty(factoidAddresses) && (\n\t\t\t\t\t<Paper className={classes.noPadding}>\n\t\t\t\t\t\t<List className={classes.addressList}>\n\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{networkProps.factoidAbbreviationFull + ' Addresses'}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\n\t\t\t\t\t\t\t\t<div className={classes.listAddrRoot}>\n\t\t\t\t\t\t\t\t\t{listfactoidAddresses}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Paper>\n\t\t\t\t)}\n\t\t\t\t{!_isEmpty(ecAddresses) && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{!_isEmpty(factoidAddresses) && <br />}\n\t\t\t\t\t\t<Paper className={classes.noPadding}>\n\t\t\t\t\t\t\t<List className={classes.addressList}>\n\t\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{networkProps.ecAbbreviationFull + ' Addresses'}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\n\t\t\t\t\t\t\t\t\t<div className={classes.listAddrRoot}>{listecAddresses}</div>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t<br />\n\t\t\t\t<div className={classes.flex}>\n\t\t\t\t\t<br />\n\t\t\t\t\t<AddWalletModal />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nSidebar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tnoPadding: {\n\t\tpadding: '0px',\n\t},\n\tbreak: {\n\t\twordWrap: 'break-word',\n\t},\n\texpanded: {\n\t\tbackgroundColor: 'aliceblue',\n\t},\n\ticonContainer: {\n\t\tpaddingTop: '2px',\n\t},\n\tledgerLogo: {\n\t\theight: 15,\n\t},\n\tsidebarIcon: {\n\t\theight: 16,\n\t},\n\tlistAddrRoot: {\n\t\twidth: '100%',\n\t\tposition: 'relative',\n\t\toverflow: 'auto',\n\t\tmaxHeight: 270,\n\t},\n\taddressName: {\n\t\tpadding: '0 0 0 24px',\n\t},\n\taddressHeading: {\n\t\tfontWeight: 500,\n\t},\n\tflex: {\n\t\tdisplay: 'flex',\n\t},\n\twalletList: {\n\t\tpadding: '6px',\n\t},\n\twalletListHeader: {\n\t\tpaddingTop: '5px',\n\t\tpaddingBottom: '5px',\n\t},\n\taddressList: {\n\t\tpaddingBottom: '0px',\n\t\tbackgroundColor: '#ddd',\n\t\tborderRadius: '4px',\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(Sidebar);\n","import React from 'react';\n\nexport const SVGLogo = ({ alt, className, onClick, src }) => {\n\treturn <img alt={alt} className={className} onClick={onClick} src={src} />;\n};\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FormatBalance from './BalanceFormatter.js';\nimport { withWalletContext } from '../../context/WalletContext';\nimport { withLedger } from '../../context/LedgerContext';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\nimport { SVGLogo } from '../../component/logo/SVGLogo';\n\nconst AddressInfoHeader = (props) => {\n\tconst {\n\t\tclasses,\n\t\twalletController: { getActiveAddress, activeAddressIndex_o },\n\t\tledgerController: { checkAddress },\n\t} = props;\n\n\tconst activeAddress_o = getActiveAddress();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Paper elevation={2} className={classes.paper}>\n\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t<i>Nickname:</i>\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t{activeAddress_o.nickname}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t<i>Address:</i>\n\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t{activeAddress_o.address}\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<CopyToClipboard text={activeAddress_o.address}>\n\t\t\t\t\t\t\t\t<Tooltip title=\"Copy\" className={classes.pointer}>\n\t\t\t\t\t\t\t\t\t<SvgIcon fontSize=\"inherit\" color=\"primary\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\n\t\t\t\t\t\t\t\t\t</SvgIcon>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano X/S\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{activeAddress_o.importType === 'seed' && (\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Seed Phrase\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{activeAddress_o.importType === 'standard' && (\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t<i>Import Type:</i>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Public Address\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!_isNil(activeAddress_o.balance) && (\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t<i>Balance:</i>\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t<FormatBalance\n\t\t\t\t\t\t\t\t\tbalance={activeAddress_o.balance}\n\t\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\ttitle=\"Verify Ledger Nano X/S Address\"\n\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SVGLogo\n\t\t\t\t\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\n\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tawait checkAddress(\n\t\t\t\t\t\t\t\t\t\t\tactiveAddress_o,\n\t\t\t\t\t\t\t\t\t\t\tactiveAddressIndex_o.type\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\nconst styles = (theme) => ({\n\troot: { textAlign: 'left' },\n\tpaper: { backgroundColor: 'aliceblue', padding: '16px', marginBottom: '3px' },\n\tpointer: {\n\t\tcursor: 'pointer',\n\t},\n\tlogo: { height: 20 },\n});\n\nconst enhancer = _flowRight(withWalletContext, withLedger, withStyles(styles));\n\nexport default enhancer(AddressInfoHeader);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst SendTransactionPreview = (props) => {\n\tconst { factoidAmount, classes, networkProps, sendFactoidFee } = props;\n\n\t// total send amount\n\tconst totalFactoidAmount = factoidAmount + sendFactoidFee;\n\n\t// format output\n\tconst transferFactoidAmountText = factoidAmount.toLocaleString(undefined, {\n\t\tmaximumFractionDigits: 8,\n\t});\n\n\tconst totalFactoidAmountText =\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\n\t\t\tmaximumFractionDigits: 8,\n\t\t}) +\n\t\t' ' +\n\t\tnetworkProps.factoidAbbreviation;\n\n\tconst feeFactoidAmountText =\n\t\tsendFactoidFee.toLocaleString(undefined, {\n\t\t\tmaximumFractionDigits: 8,\n\t\t}) +\n\t\t' ' +\n\t\tnetworkProps.factoidAbbreviation;\n\n\treturn (\n\t\t<Paper className={classes.root} elevation={2}>\n\t\t\t<div>Transaction Preview</div>\n\t\t\t<br />\n\t\t\t<span className={classes.transferFactoidAmountText}>\n\t\t\t\t{transferFactoidAmountText}\n\t\t\t</span>\n\t\t\t<span className={classes.transferFactoidUnitText}>\n\t\t\t\t{' ' + networkProps.factoidAbbreviation}\n\t\t\t</span>\n\t\t\t<hr className={classes.divider} />\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Total Amount:</div>\n\t\t\t\t<div className={classes.factoidAmountSmallText}>\n\t\t\t\t\t{totalFactoidAmountText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Network Fee:</div>\n\t\t\t\t<div className={classes.factoidAmountSmallText}>\n\t\t\t\t\t{feeFactoidAmountText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Paper>\n\t);\n};\nSendTransactionPreview.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\nconst styles = {\n\troot: {\n\t\twidth: '75%',\n\t\tmargin: '0 auto',\n\t\tpaddingTop: '26px',\n\t\tmarginTop: '39px',\n\t\theight: '194px',\n\t\tborderRadius: '10px',\n\t\tbackgroundColor: '#eef1f4',\n\t\ttextAlign: 'center',\n\t},\n\ttransferFactoidAmountText: {\n\t\tfontSize: '50px',\n\t\tcolor: '#007eff',\n\t},\n\ttransferFactoidUnitText: {\n\t\twidth: '55px',\n\t\theight: '24px',\n\t\tfontSize: '20px',\n\t\tcolor: '#007eff',\n\t},\n\tfactoidAmountSmallText: {\n\t\tcolor: '#001830',\n\t\tpaddingTop: '7px',\n\t},\n\tdetail: {\n\t\tdisplay: 'inline-block',\n\t\tpaddingLeft: '65px',\n\t\tpaddingRight: '65px',\n\t},\n\tdivider: {\n\t\twidth: '50%',\n\t\topacity: 0.15,\n\t\tborder: 'solid 1px #103152',\n\t},\n};\n\nconst enhancer = _flowRight(withStyles(styles));\n\nexport default enhancer(SendTransactionPreview);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport _get from 'lodash/get';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withFactomCli } from '../context/FactomCliContext';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withSeed } from '../context/SeedContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withLedger } from '../context/LedgerContext';\nimport { isValidPublicFctAddress } from 'factom/dist/factom';\nimport SendTransactionPreview from './SendTransactionPreview';\n\n/**\n * Constants\n */\nconst sendFactoidAmountPath = 'sendFactoidAmount';\nconst recipientAddressPath = 'recipientAddress';\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\nconst privateKeyPath = 'privateKey';\nconst seedPath = 'seed';\nconst walletImportTypePath = 'walletImportType';\n\nconst FACTOSHI_MULTIPLIER = 0.00000001;\nconst FACTOID_MULTIPLIER = 100000000;\nconst FCT_ADDRESS_LENGTH = 52;\n\nclass SendFactoidForm extends Component {\n\tstate = { sendFactoidFee: null };\n\n\tasync componentDidMount() {\n\t\tconst sendFactoidFee = await this.props.walletController.getFactoidFee();\n\t\tthis.setState({ sendFactoidFee });\n\t}\n\n\tgetMaxFCT(balance, fee) {\n\t\tconst maxFactoids = balance * FACTOSHI_MULTIPLIER - fee;\n\t\tif (maxFactoids < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn maxFactoids;\n\t}\n\n\tverifyKey = (privateKey) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\n\t};\n\n\tverifySeed = (seed) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tfactomCliController: { factomCli },\n\t\t\twalletController: {\n\t\t\t\tgetFactoidAddresses,\n\t\t\t\tgetActiveAddress,\n\t\t\t\tupdateBalances,\n\t\t\t\tactiveAddressIndex_o,\n\t\t\t\taddAddressTransaction,\n\t\t\t},\n\t\t\tledgerController: { signTransaction },\n\t\t\tnetworkController: { networkProps },\n\t\t\tseedController: { signWithSeed },\n\t\t} = this.props;\n\n\t\tconst factoidAddresses = getFactoidAddresses();\n\t\tconst activeAddress_o = getActiveAddress();\n\n\t\tconst maxAmount = this.getMaxFCT(\n\t\t\tactiveAddress_o.balance,\n\t\t\tthis.state.sendFactoidFee\n\t\t);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tsendFactoidAmount: '',\n\t\t\t\t\trecipientAddress: '',\n\t\t\t\t\tmyFctWalletAnchorEl: null,\n\t\t\t\t\t[privateKeyPath]: '',\n\t\t\t\t\t[seedPath]: '',\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\n\t\t\t\t\ttransactionID: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tsendFactoidAmount,\n\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\tseed,\n\t\t\t\t\t} = values;\n\t\t\t\t\tlet transaction = {};\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (importType === 'standard') {\n\t\t\t\t\t\t\ttransaction = await factomCli.createFactoidTransaction(\n\t\t\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\t\t\tMath.round(FACTOID_MULTIPLIER * sendFactoidAmount)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (importType === 'seed') {\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\t\t\tconst amount = Math.round(sendFactoidAmount * FACTOID_MULTIPLIER);\n\t\t\t\t\t\t\tconst type = 'sendFCT';\n\n\t\t\t\t\t\t\tconst seedTrans_o = {\n\t\t\t\t\t\t\t\tmnemonic,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\n\t\t\t\t\t\t} else if (importType === 'ledger') {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'ledgerStatus',\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\n\n\t\t\t\t\t\t\tif (ledgerConnected) {\n\t\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t\t'ledgerStatus',\n\t\t\t\t\t\t\t\t\t'Waiting 30s for Confirmation'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tactions.resetForm();\n\t\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\t\t\tconst amount = Math.round(sendFactoidAmount * FACTOID_MULTIPLIER);\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\n\t\t\t\t\t\t\t\tfromAddr,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signTransaction(ledgerTrans_o);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\n\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\n\t\t\t\t\t\tupdateBalances();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tactions.resetForm();\n\n\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t'An error occured. Please try again.'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\trecipientAddressPath,\n\t\t\t\t\t\t\t'Invalid Address',\n\t\t\t\t\t\t\tisValidPublicFctAddress\n\t\t\t\t\t\t),\n\t\t\t\t\t[sendFactoidAmountPath]: Yup.number()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.typeError('Must be a number')\n\t\t\t\t\t\t.positive('Must be greater than 0')\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'standard',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'seed',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleReset,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddressInfoHeader />\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.factoidAbbreviation + ' address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.factoidAbbreviationFull + ' Address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\tmaxLength: FCT_ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<FactoidAddressMenu\n\t\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\tfactoidAddresses={factoidAddresses}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\taria-owns={\n\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\n\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSend to one of my addresses\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Field name={sendFactoidAmountPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[sendFactoidAmountPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[sendFactoidAmountPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tlet regex = /^[\\d.]+$/;\n\t\t\t\t\t\t\t\t\t\tif (e.target.value === '' || regex.test(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.factoidAbbreviation + ')'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={sendFactoidAmountPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(sendFactoidAmountPath, maxAmount);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUse Max\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: FCT_ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={seedPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{values.sendFactoidAmount ? (\n\t\t\t\t\t\t\t<SendTransactionPreview\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\n\t\t\t\t\t\t\t\tfactoidAmount={values.sendFactoidAmount}\n\t\t\t\t\t\t\t\tsendFactoidFee={this.state.sendFactoidFee}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t{values.transactionError}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tThis transaction will be visible{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.transactionID\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\there{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\tin 10-15 minutes, after being included in the next\n\t\t\t\t\t\t\t\t\t\t\t\tFactom block currently being processed by the\n\t\t\t\t\t\t\t\t\t\t\t\tblockchain. Funds are available for use immediately.\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{'Send ' + networkProps.factoidAbbreviationFull + 's'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction FactoidAddressMenu(props) {\n\tconst { values, setFieldValue, factoidAddresses } = props;\n\n\tconst addressList = factoidAddresses.map((address_o, index) => (\n\t\t<MenuItem\n\t\t\tkey={index}\n\t\t\tonClick={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\n\t\t\t}}\n\t\t>\n\t\t\t{address_o.nickname}\n\t\t</MenuItem>\n\t));\n\treturn (\n\t\t<Menu\n\t\t\tid=\"simple-menu\"\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\n\t\t\tonClose={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t}}\n\t\t>\n\t\t\t{addressList}\n\t\t</Menu>\n\t);\n}\n\nSendFactoidForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = {\n\tsendButton: {\n\t\twidth: '50%',\n\t},\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\n\tpointer: {\n\t\tcursor: 'pointer',\n\t},\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\n\t\tpaddingTop: 3,\n\t\tpaddingBottom: 8,\n\t},\n\tsuccessIcon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t},\n};\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithLedger,\n\twithSeed,\n\twithWalletContext,\n\twithFactomCli,\n\twithStyles(styles)\n);\n\nexport default enhancer(SendFactoidForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst ConvertTransactionPreview = (props) => {\n\tconst {\n\t\tecAmount,\n\t\tfactoidAmount,\n\t\tclasses,\n\t\tnetworkProps,\n\t\tsendFactoidFee,\n\t} = props;\n\n\t// total send amount\n\tconst totalFactoidAmount = factoidAmount + sendFactoidFee;\n\n\t// format output\n\tconst convertECAmountText = ecAmount.toLocaleString(undefined, {\n\t\tmaximumFractionDigits: 8,\n\t});\n\n\tconst totalFactoidCostText =\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\n\t\t\tmaximumFractionDigits: 8,\n\t\t}) +\n\t\t' ' +\n\t\tnetworkProps.factoidAbbreviation;\n\n\tconst feeFactoidAmountText =\n\t\tsendFactoidFee.toLocaleString(undefined, {\n\t\t\tmaximumFractionDigits: 8,\n\t\t}) +\n\t\t' ' +\n\t\tnetworkProps.factoidAbbreviation;\n\n\treturn (\n\t\t<Paper className={classes.root} elevation={2}>\n\t\t\t<div>Transaction Preview</div>\n\t\t\t<br />\n\t\t\t<span className={classes.convertECAmountText}>{convertECAmountText}</span>\n\t\t\t<span className={classes.ecUnitText}>\n\t\t\t\t{' ' + networkProps.ecAbbreviation}\n\t\t\t</span>\n\t\t\t<hr className={classes.divider} />\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Total Cost:</div>\n\t\t\t\t<div className={classes.factoidCostSmallText}>\n\t\t\t\t\t{totalFactoidCostText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Network Fee:</div>\n\t\t\t\t<div className={classes.factoidCostSmallText}>\n\t\t\t\t\t{feeFactoidAmountText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Paper>\n\t);\n};\nConvertTransactionPreview.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\nconst styles = {\n\troot: {\n\t\twidth: '75%',\n\t\tmargin: '0 auto',\n\t\tpaddingTop: '26px',\n\t\tmarginTop: '39px',\n\t\theight: '194px',\n\t\tborderRadius: '10px',\n\t\tbackgroundColor: '#eef1f4',\n\t\ttextAlign: 'center',\n\t},\n\tconvertECAmountText: {\n\t\tfontSize: '50px',\n\t\tcolor: '#007eff',\n\t},\n\tecUnitText: {\n\t\twidth: '55px',\n\t\theight: '24px',\n\t\tfontSize: '20px',\n\t\tcolor: '#007eff',\n\t},\n\tfactoidCostSmallText: {\n\t\tcolor: '#001830',\n\t\tpaddingTop: '7px',\n\t},\n\tdetail: {\n\t\tdisplay: 'inline-block',\n\t\tpaddingLeft: '65px',\n\t\tpaddingRight: '65px',\n\t},\n\tdivider: {\n\t\twidth: '50%',\n\t\topacity: 0.15,\n\t\tborder: 'solid 1px #103152',\n\t},\n};\n\nconst enhancer = _flowRight(withStyles(styles));\n\nexport default enhancer(ConvertTransactionPreview);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withFactomCli } from '../context/FactomCliContext';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport { withLedger } from '../context/LedgerContext';\nimport { withSeed } from '../context/SeedContext';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { isValidPublicEcAddress } from 'factom/dist/factom';\nimport ConvertTransactionPreview from './ConvertTransactionPreview';\nimport Paper from '@material-ui/core/Paper';\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\n\n/**\n * Constants\n */\nconst entryCreditAmountPath = 'entryCreditAmount';\nconst recipientAddressPath = 'recipientAddress';\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\nconst privateKeyPath = 'privateKey';\nconst walletImportTypePath = 'walletImportType';\nconst seedPath = 'seed';\n\nconst FACTOSHI_MULTIPLIER = 0.00000001;\nconst EC_ADDRESS_LENGTH = 52;\n\nclass ConvertECForm extends Component {\n\tstate = { sendFactoshiFee: null, ecRate: null };\n\n\tasync componentDidMount() {\n\t\tconst sendFactoshiFee = await this.props.walletController.getFactoshiFee();\n\t\tconst ecRate = await this.props.walletController.getEntryCreditRate();\n\t\tthis.setState({ sendFactoshiFee, ecRate });\n\t}\n\n\tgetMaxEC(balance, fee) {\n\t\tconst maxFactoshis = balance - fee;\n\t\tlet maxEntryCredits = maxFactoshis / this.state.ecRate;\n\t\tif (maxEntryCredits < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn maxEntryCredits;\n\t}\n\n\tverifyKey = (privateKey) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\n\t};\n\n\tverifySeed = (seed) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: {\n\t\t\t\tupdateBalances,\n\t\t\t\tgetEntryCreditAddresses,\n\t\t\t\tgetActiveAddress,\n\t\t\t\tactiveAddressIndex_o,\n\t\t\t\taddAddressTransaction,\n\t\t\t},\n\t\t\tledgerController: { signTransaction },\n\t\t\tfactomCliController: { factomCli },\n\t\t\tnetworkController: { networkProps },\n\t\t\tseedController: { signWithSeed },\n\t\t} = this.props;\n\n\t\tconst activeAddress_o = getActiveAddress();\n\t\tconst ecAddresses = getEntryCreditAddresses();\n\n\t\tconst maxAmount = this.getMaxEC(\n\t\t\tactiveAddress_o.balance,\n\t\t\tthis.state.sendFactoshiFee\n\t\t);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tentryCreditAmount: '',\n\t\t\t\t\trecipientAddress: '',\n\t\t\t\t\t[myFctWalletAnchorElPath]: null,\n\t\t\t\t\tprivateKey: '',\n\t\t\t\t\t[seedPath]: '',\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\n\t\t\t\t\ttransactionID: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tentryCreditAmount,\n\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\tseed,\n\t\t\t\t\t} = values;\n\t\t\t\t\tlet transaction = {};\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (importType === 'standard') {\n\t\t\t\t\t\t\ttransaction = await factomCli.createEntryCreditPurchaseTransaction(\n\t\t\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\t\t\tentryCreditAmount\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (importType === 'seed') {\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\t\t\tconst amount = entryCreditAmount;\n\t\t\t\t\t\t\tconst type = 'convertFCT';\n\n\t\t\t\t\t\t\tconst seedTrans_o = {\n\t\t\t\t\t\t\t\tmnemonic,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\n\t\t\t\t\t\t} else if (importType === 'ledger') {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'ledgerStatus',\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\n\n\t\t\t\t\t\t\tif (ledgerConnected) {\n\t\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t\t'ledgerStatus',\n\t\t\t\t\t\t\t\t\t'Waiting 30s for Confirmation'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tactions.resetForm();\n\t\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\t\t\tconst amount = Math.round(this.state.ecRate * entryCreditAmount);\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\n\t\t\t\t\t\t\t\tfromAddr,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signTransaction(ledgerTrans_o);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\n\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\n\t\t\t\t\t\tupdateBalances();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tactions.resetForm();\n\n\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t'An error occured. Please try again.'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\trecipientAddressPath,\n\t\t\t\t\t\t\t'Invalid Address',\n\t\t\t\t\t\t\tisValidPublicEcAddress\n\t\t\t\t\t\t),\n\t\t\t\t\t[entryCreditAmountPath]: Yup.number()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.typeError('Must be a number')\n\t\t\t\t\t\t.positive('Must be greater than 0')\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'standard',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'seed',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleReset,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddressInfoHeader />\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.ecAbbreviation + ' address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.ecAbbreviationFull + ' address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\tmaxLength: EC_ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{!_isEmpty(ecAddresses) && (\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ECAddressMenu\n\t\t\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\tecAddresses={ecAddresses}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\t\taria-owns={\n\t\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSend to one of my addresses\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Field name={entryCreditAmountPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[entryCreditAmountPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[entryCreditAmountPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tlet regex = /^[\\d.]+$/;\n\t\t\t\t\t\t\t\t\t\tif (e.target.value === '' || regex.test(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.ecAbbreviation + ')'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={entryCreditAmountPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: EC_ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={seedPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{_get(values, entryCreditAmountPath) ? (\n\t\t\t\t\t\t\t<ConvertTransactionPreview\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\n\t\t\t\t\t\t\t\tecAmount={_get(values, entryCreditAmountPath)}\n\t\t\t\t\t\t\t\tfactoidAmount={\n\t\t\t\t\t\t\t\t\tthis.state.ecRate *\n\t\t\t\t\t\t\t\t\t_get(values, entryCreditAmountPath) *\n\t\t\t\t\t\t\t\t\tFACTOSHI_MULTIPLIER\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsendFactoidFee={\n\t\t\t\t\t\t\t\t\tthis.state.sendFactoshiFee * FACTOSHI_MULTIPLIER\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t{values.transactionError}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tThis transaction will be visible{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.transactionID\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\there{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\tin 10-15 minutes, after being included in the next\n\t\t\t\t\t\t\t\t\t\t\t\tFactom block currently being processed by the\n\t\t\t\t\t\t\t\t\t\t\t\tblockchain. Funds are available for use immediately.\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{'Convert ' +\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\n\t\t\t\t\t\t\t\t\t' to ' +\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction ECAddressMenu(props) {\n\tconst { values, setFieldValue, ecAddresses } = props;\n\n\tconst addressList = ecAddresses.map((address_o, index) => (\n\t\t<MenuItem\n\t\t\tkey={index}\n\t\t\tonClick={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\n\t\t\t}}\n\t\t>\n\t\t\t{address_o.nickname}\n\t\t</MenuItem>\n\t));\n\treturn (\n\t\t<Menu\n\t\t\tid=\"simple-menu\"\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\n\t\t\tonClose={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t}}\n\t\t>\n\t\t\t{addressList}\n\t\t</Menu>\n\t);\n}\n\nConvertECForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = {\n\tsendButton: {\n\t\twidth: '50%',\n\t},\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\n\tpointer: {\n\t\tcursor: 'pointer',\n\t},\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\n\t\tpaddingTop: 3,\n\t\tpaddingBottom: 8,\n\t},\n\tsuccessIcon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t},\n};\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithLedger,\n\twithSeed,\n\twithWalletContext,\n\twithFactomCli,\n\twithStyles(styles)\n);\n\nexport default enhancer(ConvertECForm);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withSeed } from '../context/SeedContext';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Visibility from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n/**\n * Constants\n */\nconst privateKeyPath = 'privateKey';\nconst showPasswordPath = 'showPassword;';\nconst seedPath = 'seed';\n\nclass ViewPrivateKeyForm extends Component {\n\tverifySeed = (seed) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: { getActiveAddress },\n\t\t\tseedController: { getPrivateKey },\n\t\t} = this.props;\n\n\t\tconst activeAddress_o = getActiveAddress();\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[privateKeyPath]: '',\n\t\t\t\t\t[seedPath]: '',\n\t\t\t\t\t[showPasswordPath]: false,\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tconst { seed } = values;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst mnemonic = seed.trim();\n\t\t\t\t\t\tconst privateKey = getPrivateKey(mnemonic, activeAddress_o);\n\t\t\t\t\t\tactions.setFieldValue(privateKeyPath, privateKey);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[seedPath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched, values, setFieldValue }) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddressInfoHeader />\n\t\t\t\t\t\t{_isEmpty(_get(values, privateKeyPath)) && (\n\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\tname={seedPath}\n\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\terror={_get(errors, seedPath) && _get(touched, seedPath)}\n\t\t\t\t\t\t\t\terrorClass={classes.errorText}\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{!_isEmpty(_get(values, privateKeyPath)) && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" style={{ fontSize: 15 }}>\n\t\t\t\t\t\t\t\t\tPrivate Key:&nbsp;\n\t\t\t\t\t\t\t\t\t{_get(values, privateKeyPath) && (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, showPasswordPath) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, privateKeyPath)\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Display Private Key\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(showPasswordPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 35 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t<React.Fragment />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Field name={props.name}>\n\t\t\t\t{({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tstyle={{ width: props.width }}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\ttype={props.type}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tspellCheck: props.enableSpellCheck,\n\t\t\t\t\t\t\tmaxLength: props.maxLength,\n\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={props.error}\n\t\t\t\t\t\tlabel={props.label}\n\t\t\t\t\t\tfullWidth={props.fullWidth}\n\t\t\t\t\t\tmultiline={props.multiline}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Field>\n\t\t\t<ErrorMessage\n\t\t\t\tname={props.name}\n\t\t\t\trender={(msg) => <div className={props.errorClass}>{msg}</div>}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n\nViewPrivateKeyForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = {\n\tsendButton: {\n\t\twidth: '50%',\n\t},\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\n};\n\nconst enhancer = _flowRight(withSeed, withWalletContext, withStyles(styles));\n\nexport default enhancer(ViewPrivateKeyForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withWalletContext } from '../context/WalletContext';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * Constants\n */\nconst NICKNAME_MAX_LENGTH = 25;\nconst nicknamePath = 'nickname';\nconst saveLocallyPath = 'saveLocally';\nconst deleteAnchorElPath = 'deleteAnchorEl';\n\nclass AddressInfoForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: {\n\t\t\t\tgetActiveAddress,\n\t\t\t\tgetFactoidAddresses,\n\t\t\t\tgetEntryCreditAddresses,\n\t\t\t\tactiveAddressIndex_o,\n\t\t\t\tupdateAddress,\n\t\t\t\tdeleteAddress,\n\t\t\t},\n\t\t} = this.props;\n\n\t\tconst activeAddress_o = getActiveAddress();\n\n\t\tlet userAddressList = [];\n\t\tif (activeAddressIndex_o.type === 'fct') {\n\t\t\tuserAddressList = getFactoidAddresses();\n\t\t} else if (activeAddressIndex_o.type === 'ec') {\n\t\t\tuserAddressList = getEntryCreditAddresses();\n\t\t}\n\n\t\tconst userAddressNicknames = userAddressList\n\t\t\t.filter((addr_o) => addr_o.address !== activeAddress_o.address)\n\t\t\t.map((addr_o) => addr_o.nickname);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[saveLocallyPath]: activeAddress_o.saveLocally,\n\t\t\t\t\t[nicknamePath]: activeAddress_o.nickname,\n\t\t\t\t\t[deleteAnchorElPath]: null,\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\t\tupdateAddress(\n\t\t\t\t\t\t\tactiveAddressIndex_o,\n\t\t\t\t\t\t\t_get(values, nicknamePath).trim(),\n\t\t\t\t\t\t\t_get(values, saveLocallyPath)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tactions.resetForm();\n\t\t\t\t\t}, 500);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[nicknamePath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tnicknamePath,\n\t\t\t\t\t\t\t'Enter unique nickname',\n\t\t\t\t\t\t\t(value) => userAddressNicknames.indexOf(value) === -1\n\t\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Typography variant=\"h6\">Edit Address</Typography>\n\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>{msg}</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\n\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Save to local browser storage\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit{' '}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress size={20} />\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\taria-owns={values[deleteAnchorElPath] ? 'simple-menu' : null}\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tclassName={classes.deleteButton}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, event.currentTarget);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\t\t\t\tanchorEl={values[deleteAnchorElPath]}\n\t\t\t\t\t\t\t\t\topen={Boolean(values[deleteAnchorElPath])}\n\t\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tdeleteAddress(activeAddressIndex_o);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.deleteConfirmationText}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tConfirm Delete\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst FormTextField = (props) => {\n\treturn (\n\t\t<Field name={props.name}>\n\t\t\t{({ field }) => (\n\t\t\t\t<TextField\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\tmaxLength: props.maxLength,\n\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tlabel={props.label + ' ' + (props.error ? '*' : '')}\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\terror={props.error}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Field>\n\t);\n};\n\nAddressInfoForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n\tdeleteButton: { marginLeft: 15 },\n\tdeleteConfirmationText: { color: 'red' },\n});\n\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\n\nexport default enhancer(AddressInfoForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass TransactionList extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: { getActiveAddress },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst activeAddress_o = getActiveAddress();\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{!_isEmpty(activeAddress_o.transactions) && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Typography variant=\"h6\">Recent Transactions</Typography>\n\t\t\t\t\t\t{activeAddress_o.transactions.map(function(transaction, index) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\tclassName={classes.transaction}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<b>Tx ID:</b> {transaction}{' '}\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\t\t\t\t\t\t'/transaction?txid=' +\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nTransactionList.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\ttransaction: { overflowWrap: 'break-word' },\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(TransactionList);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport AddressInfoForm from './AddressInfoForm';\nimport TransactionList from './TransactionList';\n\nconst AddressInfoTab = (props) => {\n\treturn (\n\t\t<div className={props.classes.root}>\n\t\t\t<AddressInfoHeader />\n\t\t\t<br />\n\t\t\t<Grid container spacing={8}>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<AddressInfoForm />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TransactionList />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nAddressInfoTab.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\troot: { textAlign: 'left' },\n});\n\nexport default withStyles(styles)(AddressInfoTab);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _flowRight from 'lodash/flowRight';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport SendFactoidForm from './SendFactoidForm';\nimport ConvertECForm from './ConvertECForm';\nimport ViewPrivateKeyForm from './ViewPrivateKeyForm';\nimport AddressInfoTab from './AddressInfoTab';\nimport { withNetwork } from '../context/NetworkContext';\n\nclass WalletTabContent extends React.Component {\n\tstate = {\n\t\ttabValue: 0,\n\t};\n\n\thandleChange = (event, tabValue) => {\n\t\tthis.setState({ tabValue });\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\ttype,\n\t\t\tactiveAddress,\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tlet tabValue = this.state.tabValue;\n\n\t\t// handle invalid FCT tab value\n\t\tif (\n\t\t\ttype === 'fct' &&\n\t\t\ttabValue >= 3 &&\n\t\t\tactiveAddress.importType !== 'seed'\n\t\t) {\n\t\t\t//only seeds have tab 3\n\t\t\ttabValue = 0;\n\t\t}\n\n\t\t// handle invalid EC tab value\n\t\tif (\n\t\t\ttype === 'ec' &&\n\t\t\t(tabValue > 1 || (tabValue === 1 && activeAddress.importType !== 'seed'))\n\t\t) {\n\t\t\ttabValue = 0;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t{type === 'fct' && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={tabValue}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Address Info\" />\n\t\t\t\t\t\t\t<Tab label={'Send ' + networkProps.factoidAbbreviationFull} />\n\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t'Convert ' +\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\n\t\t\t\t\t\t\t\t\t' to ' +\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\n\t\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t{tabValue === 0 && (\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t\t<AddressInfoTab />\n\t\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{tabValue === 1 && (\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t\t<SendFactoidForm />\n\t\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{tabValue === 2 && (\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t\t<ConvertECForm />\n\t\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{tabValue === 3 && (\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t\t<ViewPrivateKeyForm />\n\t\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{type === 'ec' && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={tabValue}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Address Info\" />\n\t\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\n\t\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t{tabValue === 0 && (\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t\t<AddressInfoTab />\n\t\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{tabValue === 1 && (\n\t\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t\t<ViewPrivateKeyForm />\n\t\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nWalletTabContent.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nfunction TabContainer(props) {\n\treturn (\n\t\t<Typography component=\"div\" className={props.classes.tabContainer}>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\nTabContainer.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nconst styles = {\n\troot: { textAlign: 'center' },\n\ttabContainer: {\n\t\tpaddingLeft: 55,\n\t\tpaddingRight: 55,\n\t\tpaddingTop: 18,\n\t\tpaddingBottom: 10,\n\t},\n};\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(WalletTabContent);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport Sidebar from './Sidebar.js';\nimport WalletTabContent from './WalletTabContent.js';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\n\nclass WalletManager extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.walletController.updateBalances();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\twalletController: { getActiveAddress, activeAddressIndex_o },\n\t\t} = this.props;\n\n\t\tconst activeAddress = getActiveAddress();\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{!_isNil(activeAddress) && (\n\t\t\t\t\t<Grid container spacing={24} item xs={12}>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t<WalletTabContent\n\t\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\n\t\t\t\t\t\t\t\t\tactiveAddress={activeAddress}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nWalletManager.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\nexport default enhancer(WalletManager);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withRouter } from 'react-router-dom';\nimport AddWalletStepper from './AddWalletStepper';\n\nclass AddInitialWallet extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.setReadyToManageWallet(false);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst handleCloseText =\n\t\t\tnetworkProps.network === 'testnet'\n\t\t\t\t? 'Manage Testnet Wallet'\n\t\t\t\t: 'Manage Wallet';\n\n\t\treturn (\n\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t<AddWalletStepper\n\t\t\t\t\thandleClose={() => this.props.setReadyToManageWallet(true)}\n\t\t\t\t\thandleCloseText={handleCloseText}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\nAddInitialWallet.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(\n\twithRouter,\n\twithNetwork,\n\twithWalletContext,\n\twithStyles(styles)\n);\nexport default enhancer(AddInitialWallet);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport _flowRight from 'lodash/flowRight';\nimport _isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport { POLL_STATUSES } from '../create/VOTE_CONSTANTS';\nimport { withVote } from '../../context/VoteContext';\nimport { withNetwork } from '../../context/NetworkContext';\n\n/**\n * Constants\n */\nconst RPP_OPTIONS = [5, 10, 25, 50];\n\nlet id = 0;\nconst createRow = (\n\tvoteID,\n\tadminID,\n\ttitle,\n\tstatus,\n\tcommitPhase,\n\trevealPhase\n) => {\n\tid += 1;\n\treturn { id, voteID, adminID, title, status, commitPhase, revealPhase };\n};\n\nclass VoteTable extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tdata,\n\t\t\ttitle,\n\t\t\tstatus,\n\t\t\tinitiatorId,\n\t\t\tpollChainId,\n\t\t\thandleFilterChange,\n\t\t\tfilterTable,\n\t\t\tvoteController: { getPollStatus },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\t\tconst expanded = this.props.expanded;\n\n\t\tlet tableRows = [];\n\n\t\tdata.voteList.forEach((poll_o) => {\n\t\t\tconst row = createRow(\n\t\t\t\tpoll_o.voteChainId,\n\t\t\t\tpoll_o.admin.voteInitiator,\n\t\t\t\tpoll_o.proposal.title,\n\t\t\t\tgetPollStatus(poll_o.vote.phasesBlockHeights).displayValue,\n\t\t\t\t<span>\n\t\t\t\t\t{poll_o.vote.phasesBlockHeights.commitStart +\n\t\t\t\t\t\t' - ' +\n\t\t\t\t\t\tpoll_o.vote.phasesBlockHeights.commitEnd}\n\t\t\t\t</span>,\n\t\t\t\t<span>\n\t\t\t\t\t{poll_o.vote.phasesBlockHeights.commitEnd +\n\t\t\t\t\t\t1 +\n\t\t\t\t\t\t' - ' +\n\t\t\t\t\t\tpoll_o.vote.phasesBlockHeights.revealEnd}\n\t\t\t\t</span>\n\t\t\t);\n\t\t\ttableRows.push(row);\n\t\t});\n\n\t\treturn (\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} className={classes.tableWrapper}>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<th className={classes.expandColumn}>\n\t\t\t\t\t\t\t\t\t{expanded ? (\n\t\t\t\t\t\t\t\t\t\t<ExpandLess\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Collapse Table\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.toggleExpand}\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Collapse Table\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<ExpandMore\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Expand Table\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.toggleExpand}\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Expand Table\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.expandIcon}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tclassName={`${classes.titleColumn} ${classes.columnHeader}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t\t\t{expanded && (\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tclassName={`${classes.statusColumn} ${classes.columnHeader}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tStatus\n\t\t\t\t\t\t\t\t\t{expanded && (\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"status\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait handleFilterChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tfilterTable();\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<option defaultValue value=\"\" />\n\t\t\t\t\t\t\t\t\t\t\t\t{Object.values(POLL_STATUSES).map((option_o, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={option_o.value}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option_o.displayValue}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tclassName={`${classes.dateColumn} ${classes.columnHeader}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCommit Phase\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tclassName={`${classes.dateColumn} ${classes.columnHeader}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReveal Phase\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t{expanded ? (\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.pollChainIDColumn} ${\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPoll Chain ID\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"pollChainId\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={pollChainId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.shortPollChainIDColumn} ${\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPoll Chain ID\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{expanded ? (\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.adminIDColumn} ${\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPoll Initiator ID\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"initiatorId\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={initiatorId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFilterChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tclassName={`${classes.shortAdminIDColumn} ${\n\t\t\t\t\t\t\t\t\t\t\tclasses.columnHeader\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPoll Initiator ID\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{_isEmpty(tableRows) && (\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography>No Matching Results</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{tableRows.map((row) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={row.id} hover={true}>\n\t\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.titleColumn}>\n\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\t\t\t\t\t'/viewVote?network=' +\n\t\t\t\t\t\t\t\t\t\t\t\t\tnetworkProps.network +\n\t\t\t\t\t\t\t\t\t\t\t\t\t'&id=' +\n\t\t\t\t\t\t\t\t\t\t\t\t\trow.voteID\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{row.title}\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.statusColumn}>\n\t\t\t\t\t\t\t\t\t\t\t{row.status}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.dateColumn}>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: '104px' }}>{row.commitPhase}</div>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.dateColumn}>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ width: '104px' }}>{row.revealPhase}</div>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t{expanded ? (\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.pollChainIDColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t{row.voteID}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.shortPollChainIDColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t{row.voteID}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{expanded ? (\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.adminIDColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t{row.adminID}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.shortAdminIDColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t{row.adminID}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t<TablePagination\n\t\t\t\t\t\tcomponent={Grid}\n\t\t\t\t\t\tonChangePage={(event, page) => {\n\t\t\t\t\t\t\tthis.props.handlePageChange(page);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChangeRowsPerPage={(e) => {\n\t\t\t\t\t\t\tthis.props.handleRowsPerPageChange(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\t\trowsPerPage={this.props.rowsPerPage}\n\t\t\t\t\t\trowsPerPageOptions={RPP_OPTIONS}\n\t\t\t\t\t\tpage={this.props.page}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nVoteTable.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\ttableWrapper: {\n\t\toverflowX: 'auto',\n\t},\n\ttitleColumn: {\n\t\tminWidth: '252',\n\t\tpaddingRight: '1px',\n\t},\n\tadminIDColumn: {\n\t\tpaddingRight: '0px',\n\t},\n\tshortAdminIDColumn: {\n\t\tmaxWidth: '207px',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t\tpaddingRight: '0px',\n\t},\n\tshortPollChainIDColumn: {\n\t\tmaxWidth: '207px',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t\tpaddingRight: '0px',\n\t},\n\tpollChainIDColumn: {\n\t\tpaddingRight: '0px',\n\t},\n\tstatusColumn: {\n\t\tmaxWidth: '165px',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t},\n\tdateColumn: {\n\t\tmaxWidth: '129px',\n\t\tpaddingRight: '1px',\n\t},\n\texpandIcon: {\n\t\tmargin: '-5px',\n\t},\n\texpandColumn: {\n\t\tmaxWidth: '3px',\n\t},\n\tfooterPagination: {\n\t\tmaxWidth: '345px',\n\t},\n\tcolumnHeader: {\n\t\tfontSize: '13px',\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withVote, withStyles(styles));\nexport default enhancer(VoteTable);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport _get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport VoteTable from './VoteTable';\nimport Paper from '@material-ui/core/Paper';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Grid from '@material-ui/core/Grid';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst GET_LISTING = gql`\n\tquery Listing(\n\t\t$limit: Int\n\t\t$offset: Int\n\t\t$title: String\n\t\t$status: String\n\t\t$voteInitiator: String\n\t\t$voteChain: String\n\t\t$voter: String\n\t) {\n\t\tallProposals(\n\t\t\tsort: \"blockHeight\"\n\t\t\tsortOrder: \"DESC\"\n\t\t\tregistered: true\n\t\t\tlimit: $limit\n\t\t\toffset: $offset\n\t\t\ttitle: $title\n\t\t\tstatus: $status\n\t\t\tvoteInitiator: $voteInitiator\n\t\t\tvoteChain: $voteChain\n\t\t\tvoter: $voter\n\t\t) {\n\t\t\tlistInfo\n\t\t\tvoteList {\n\t\t\t\tadmin {\n\t\t\t\t\tvoteInitiator\n\t\t\t\t}\n\t\t\t\tproposal {\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t\tvote {\n\t\t\t\t\tphasesBlockHeights {\n\t\t\t\t\t\tcommitStart\n\t\t\t\t\t\tcommitEnd\n\t\t\t\t\t\trevealEnd\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvoteChainId\n\t\t\t}\n\t\t}\n\t}\n`;\n\nclass VoteListing extends Component {\n\tstate = {\n\t\texpanded: false,\n\t\trowsPerPage: 5,\n\t\tpage: 0,\n\t\tactiveFilters: {\n\t\t\ttitle: '',\n\t\t\tstatus: '',\n\t\t\tinitiatorId: '',\n\t\t\tpollChainId: '',\n\t\t\tvoterId: '',\n\t\t},\n\t\ttitle: '',\n\t\tstatus: '',\n\t\tinitiatorId: '',\n\t\tpollChainId: '',\n\t\tvoterId: '',\n\t};\n\n\thandleFilterChange = (event) => {\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tconst value = name === 'title' ? target.value : target.value.trim();\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\tfilterTable = () => {\n\t\tthis.handleExpand();\n\n\t\tthis.setState({\n\t\t\tactiveFilters: {\n\t\t\t\ttitle: this.state.title,\n\t\t\t\tstatus: this.state.status,\n\t\t\t\tinitiatorId: this.state.initiatorId,\n\t\t\t\tpollChainId: this.state.pollChainId,\n\t\t\t\tvoterId: this.state.voterId,\n\t\t\t},\n\t\t\tpage: 0,\n\t\t});\n\t};\n\n\tresetFilters = () => {\n\t\tthis.setState({\n\t\t\tactiveFilters: {\n\t\t\t\ttitle: '',\n\t\t\t\tstatus: '',\n\t\t\t\tinitiatorId: '',\n\t\t\t\tpollChainId: '',\n\t\t\t\tvoterId: '',\n\t\t\t},\n\t\t});\n\t};\n\n\ttoggleExpand = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\texpanded: !prevState.expanded,\n\t\t\t};\n\t\t});\n\t};\n\n\thandleKeyPress = (event) => {\n\t\tif (event.which === 13 /* Enter */) {\n\t\t\tthis.filterTable();\n\t\t}\n\t};\n\n\thandleExpand = () => {\n\t\tthis.setState({\n\t\t\texpanded: true,\n\t\t});\n\t};\n\n\thandlePageChange = (page) => {\n\t\tthis.setState({\n\t\t\tpage,\n\t\t});\n\t};\n\n\thandleRowsPerPageChange = (rowsPerPage) => {\n\t\tthis.setState({\n\t\t\trowsPerPage,\n\t\t\tpage: 0,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<form onKeyPress={this.handleKeyPress} className={classes.body}>\n\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t<Query\n\t\t\t\t\t\tquery={GET_LISTING}\n\t\t\t\t\t\tvariables={{\n\t\t\t\t\t\t\tlimit: this.state.rowsPerPage,\n\t\t\t\t\t\t\toffset: this.state.rowsPerPage * this.state.page,\n\t\t\t\t\t\t\ttitle: this.state.activeFilters.title,\n\t\t\t\t\t\t\tstatus: this.state.activeFilters.status,\n\t\t\t\t\t\t\tvoteInitiator: this.state.activeFilters.initiatorId,\n\t\t\t\t\t\t\tvoteChain: this.state.activeFilters.pollChainId,\n\t\t\t\t\t\t\tvoter: this.state.activeFilters.voterId,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\t\t\tif (loading) return <PreLoadHeader message=\"Loading...\" />;\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<PreLoadHeader\n\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\n\t\t\t\t\t\t\t\t\t\tmessage={'Error: ' + error.message}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst totalCount = _get(data, 'allProposals.listInfo.totalCount');\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t\t<Grid container item xs={3} className={classes.topFilters}>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.filterTable}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<FilterList /> Advanced Search\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t{this.state.expanded && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ paddingTop: '10px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoter ID:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"voterId\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.voterId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleFilterChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\tWelcome to Factom On-Chain Voting\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={3} />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<VoteTable\n\t\t\t\t\t\t\t\t\t\tdata={data.allProposals}\n\t\t\t\t\t\t\t\t\t\texpanded={this.state.expanded}\n\t\t\t\t\t\t\t\t\t\ttoggleExpand={this.toggleExpand}\n\t\t\t\t\t\t\t\t\t\trowsPerPage={this.state.rowsPerPage}\n\t\t\t\t\t\t\t\t\t\thandleRowsPerPageChange={this.handleRowsPerPageChange}\n\t\t\t\t\t\t\t\t\t\tcount={totalCount}\n\t\t\t\t\t\t\t\t\t\tpage={this.state.page}\n\t\t\t\t\t\t\t\t\t\thandlePageChange={this.handlePageChange}\n\t\t\t\t\t\t\t\t\t\thandleFilterChange={this.handleFilterChange}\n\t\t\t\t\t\t\t\t\t\tfilterTable={this.filterTable}\n\t\t\t\t\t\t\t\t\t\ttitle={this.state.title}\n\t\t\t\t\t\t\t\t\t\tstatus={this.state.status}\n\t\t\t\t\t\t\t\t\t\tinitiatorId={this.state.initiatorId}\n\t\t\t\t\t\t\t\t\t\tpollChainId={this.state.pollChainId}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Query>\n\t\t\t\t</Paper>\n\t\t\t\t<br />\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst PreLoadHeader = (props) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item xs={3} />\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\tWelcome to Factom On-Chain Voting\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3} />\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography className={props.className}>{props.message}</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nVoteListing.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tbody: {\n\t\ttextAlign: 'center',\n\t\tmargin: '0 auto',\n\t\tmarginTop: '20px',\n\t},\n\tform: {\n\t\ttextAlign: 'left',\n\t},\n\tpaper: {\n\t\tpadding: '15px',\n\t},\n\ttopFilters: {},\n\terrorText: { color: 'red' },\n});\n\nexport default withStyles(styles)(VoteListing);\n\n/*\nconst GET_VOTERS = gql`\n\tquery Voters($chain: String!) {\n\t\teligibleVoters(chain: $chain) {\n\t\t\tvoters\n\t\t}\n\t}\n`;\n\nconst ExchangeRates = ({\n\tchain = '84444341e0e60a496f75c98c57357805ec86e9f8e232348f1e60704e83bca2b0',\n}) => (\n\t<Query query={GET_VOTERS} variables={{ chain }}>\n\t\t{({ loading, error, data }) => {\n\t\t\tif (loading) return <p>Loading...</p>;\n\t\t\tif (error) return <p>Error :(</p>;\n\n\t\t\tconst voterList = data.eligibleVoters.voters.map((voter_o, index) => (\n\t\t\t\t<li key={index}>\n\t\t\t\t\tVoter ID: {voter_o.voterId}\n\t\t\t\t\t<br />\n\t\t\t\t\tVoter Weight: {voter_o.weight}\n\t\t\t\t</li>\n\t\t\t));\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\thi<ul>{voterList}</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}}\n\t</Query>\n);\n*/\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { SVGLogo } from '../../component/logo/SVGLogo';\nimport FactomProtocolLogo from '../../component/logo/factomProtocolLogo.svg';\nimport Grid from '@material-ui/core/Grid';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\n\nclass ExplorerLink extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisHovered: false,\n\t\t};\n\t\tthis.handleHover = this.handleHover.bind(this);\n\t}\n\n\thandleHover = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tisHovered: !prevState.isHovered,\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst { classes, label, value, href, extend = false } = this.props;\n\n\t\tconst valueClass =\n\t\t\tthis.state.isHovered || extend\n\t\t\t\t? classes.value\n\t\t\t\t: classes.value + ' ' + classes.short;\n\n\t\treturn (\n\t\t\t<Grid container alignItems=\"center\" className={classes.root}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<SVGLogo\n\t\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\t\tsrc={FactomProtocolLogo}\n\t\t\t\t\t\talt=\"Factom Protocol Logo\"\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography className={classes.label}>\n\t\t\t\t\t\t&nbsp;{label}:&nbsp;\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tonMouseEnter={this.handleHover}\n\t\t\t\t\t\tonMouseLeave={this.handleHover}\n\t\t\t\t\t\tclassName={valueClass}\n\t\t\t\t\t>\n\t\t\t\t\t\t{value}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n\t\t\t\t\t\t<OpenInNew color=\"primary\" className={classes.openInNew} />\n\t\t\t\t\t</a>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst styles = (theme) => ({\n\topenInNew: { fontSize: 15 },\n\troot: { color: 'black' },\n\tvalue: {\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t},\n\tshort: {\n\t\tmaxWidth: '200px',\n\t},\n\tlabel: { fontWeight: 500 },\n\tlogo: { height: 20 },\n\ttooltip: {\n\t\tmaxWidth: 'none',\n\t\tfontSize: 12,\n\t},\n});\n\nexport default withStyles(styles)(ExplorerLink);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Field, FastField, ErrorMessage } from 'formik';\n\nconst FormTextField = ({\n\taccept,\n\tautoComplete = false,\n\tclasses,\n\tdisabled = false,\n\tdisplayError = true,\n\terror = false,\n\tfullWidth = false,\n\tisNotFast,\n\tlabel,\n\tmaxLength,\n\tmultiline,\n\tname,\n\tonChange,\n\tonKeyPress,\n\tshrink = false,\n\tspellCheck = false,\n\tstep = false,\n\ttype = 'text',\n\tvalidate,\n\twidth,\n}) => {\n\tconst FieldType = isNotFast ? Field : FastField;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FieldType name={name} {...(validate ? { validate } : {})}>\n\t\t\t\t{({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t{...(onChange ? { onChange } : {})}\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tdisabled,\n\t\t\t\t\t\t\tfullWidth,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tmultiline,\n\t\t\t\t\t\t\tonKeyPress,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tautoComplete: autoComplete ? 'on' : 'off',\n\t\t\t\t\t\t\tmaxLength,\n\t\t\t\t\t\t\tspellCheck,\n\t\t\t\t\t\t\t...(accept ? { accept } : {}),\n\t\t\t\t\t\t\t...(step ? { step } : {}),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{ width }}\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t...(shrink ? { shrink } : {}),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</FieldType>\n\t\t\t{displayError && (\n\t\t\t\t<ErrorMessage\n\t\t\t\t\tname={name}\n\t\t\t\t\trender={(msg) => <div className={classes.errorText}>{msg}</div>}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '13px' },\n});\n\nexport default withStyles(styles)(FormTextField);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { BINARY_CONFIG } from '../create/VOTE_CONSTANTS';\n\n/**\n * Constants\n */\nconst selectedOptionPath = 'selectedOption';\n\nconst optionsPath = 'pollJSON.vote.config.options';\n\nclass BinaryVoteForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tpoll,\n\t\t\tparentIsSubmitting,\n\t\t\tparentArrayHelpers,\n\t\t\tparentReset,\n\t\t} = this.props;\n\n\t\tconst options = _get(poll, optionsPath);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tselectedOption: '',\n\t\t\t\t\treinitialize: parentReset,\n\t\t\t\t}}\n\t\t\t\trender={({ values, handleChange }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography>Type: {BINARY_CONFIG.name}</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\taria-label=\"Option\"\n\t\t\t\t\t\t\t\t\t\tname={selectedOptionPath}\n\t\t\t\t\t\t\t\t\t\tvalue={_get(values, selectedOptionPath)}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.replace(0, e.target.value);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio disabled={parentIsSubmitting} />}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nBinaryVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withStyles(styles));\nexport default enhancer(BinaryVoteForm);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _remove from 'lodash/remove';\nimport _flowRight from 'lodash/flowRight';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport { APPROVAL_CONFIG } from '../create/VOTE_CONSTANTS';\n\n/**\n * Constants\n */\nconst abstainCheckboxPath = 'abstainCheckbox';\n\nconst parentVotePath = 'vote';\n\nconst optionsPath = 'pollJSON.vote.config.options';\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\n\nclass ApprovalVoteForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tpoll,\n\t\t\tparentIsSubmitting,\n\t\t\tparentArrayHelpers,\n\t\t\tparentReset,\n\t\t\tparentSetFieldValue,\n\t\t\tparentVoteArray,\n\t\t} = this.props;\n\n\t\tconst options = _get(poll, optionsPath);\n\t\tconst allowAbstain = _get(poll, abstentionPath);\n\t\tconst minOptions = _get(poll, minOptionsPath);\n\t\tconst maxOptions = _get(poll, maxOptionsPath);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\treinitialize: parentReset,\n\t\t\t\t\tabstainCheckbox: false,\n\t\t\t\t}}\n\t\t\t\trender={({ values, handleChange, setFieldValue }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography>Type: {APPROVAL_CONFIG.name}</Typography>\n\t\t\t\t\t\t\t\t<Typography>Minimum Options Allowed: {minOptions}</Typography>\n\t\t\t\t\t\t\t\t<Typography>Maximum Options Allowed: {maxOptions}</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={option + '_checkbox'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, option + '_checkbox') === true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentIsSubmitting ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, abstainCheckboxPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.push(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newVote = _remove(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentVoteArray,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(value) => value !== e.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(parentVotePath, newVote);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{allowAbstain && (\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstainCheckboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={_get(values, abstainCheckboxPath)}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={parentIsSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions.forEach((option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(option + '_checkbox', false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(parentVotePath, []);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tabstainCheckboxPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Abstain\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nApprovalVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withStyles(styles));\nexport default enhancer(ApprovalVoteForm);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport { SINGLE_OPTION_CONFIG } from '../create/VOTE_CONSTANTS';\n\n/**\n * Constants\n */\nconst selectedOptionPath = 'selectedOption';\nconst abstainCheckboxPath = 'abstainCheckbox';\n\nconst optionsPath = 'pollJSON.vote.config.options';\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\n\nclass SingleOptionVoteForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tpoll,\n\t\t\tparentIsSubmitting,\n\t\t\tparentArrayHelpers,\n\t\t\tparentReset,\n\t\t\tparentSetFieldValue,\n\t\t} = this.props;\n\n\t\tconst options = _get(poll, optionsPath);\n\t\tconst allowAbstain = _get(poll, abstentionPath);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tselectedOption: '',\n\t\t\t\t\treinitialize: parentReset,\n\t\t\t\t\tabstainCheckbox: false,\n\t\t\t\t}}\n\t\t\t\trender={({ values, handleChange, setFieldValue }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography>Type: {SINGLE_OPTION_CONFIG.name}</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\taria-label=\"Option\"\n\t\t\t\t\t\t\t\t\t\tname={selectedOptionPath}\n\t\t\t\t\t\t\t\t\t\tvalue={_get(values, selectedOptionPath)}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.replace(0, e.target.value);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentIsSubmitting ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, abstainCheckboxPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={option}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{allowAbstain && (\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstainCheckboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={_get(values, abstainCheckboxPath)}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={parentIsSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(selectedOptionPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers.remove(0);\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tabstainCheckboxPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Abstain\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nSingleOptionVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withStyles(styles));\nexport default enhancer(SingleOptionVoteForm);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport { INSTANT_RUNOFF_CONFIG } from '../create/VOTE_CONSTANTS';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Paper from '@material-ui/core/Paper';\n\n/**\n * Constants\n */\nconst abstainCheckboxPath = 'abstainCheckbox';\nconst itemsPath = 'items';\nconst selectedPath = 'selected';\n\nconst parentVotePath = 'vote';\n\nconst optionsPath = 'pollJSON.vote.config.options';\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\n\nclass InstantRunoffVoteForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tpoll,\n\t\t\tparentIsSubmitting,\n\t\t\tparentReset,\n\t\t\tparentSetFieldValue,\n\t\t} = this.props;\n\n\t\tconst options = _get(poll, optionsPath);\n\t\tconst allowAbstain = _get(poll, abstentionPath);\n\t\tconst minOptions = _get(poll, minOptionsPath);\n\t\tconst maxOptions = _get(poll, maxOptionsPath);\n\n\t\tconst items = options.map((option) => ({\n\t\t\tid: option,\n\t\t\tcontent: option,\n\t\t}));\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\treinitialize: parentReset,\n\t\t\t\t\tabstainCheckbox: false,\n\t\t\t\t\titems: items,\n\t\t\t\t\tselected: [],\n\t\t\t\t}}\n\t\t\t\trender={({ values, handleChange, setFieldValue }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography>Type: {INSTANT_RUNOFF_CONFIG.name}</Typography>\n\t\t\t\t\t\t\t\t<Typography>Minimum Options Allowed: {minOptions}</Typography>\n\t\t\t\t\t\t\t\t<Typography>Maximum Options Allowed: {maxOptions}</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<DragAndDrop\n\t\t\t\t\t\t\t\t\tformValues={values}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t_get(values, abstainCheckboxPath) || parentIsSubmitting\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tirvSetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\tparentSetFieldValue={parentSetFieldValue}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{allowAbstain && (\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstainCheckboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={_get(values, abstainCheckboxPath)}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={parentIsSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tabstainCheckboxPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.checked) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//reset drag and drop\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(itemsPath, items);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(selectedPath, []);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//clear vote\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue(parentVotePath, []);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Abstain\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nInstantRunoffVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n\n\treturn result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = Array.from(destination);\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\tdestClone.splice(droppableDestination.index, 0, removed);\n\n\tconst result = {};\n\tresult[droppableSource.droppableId] = sourceClone;\n\tresult[droppableDestination.droppableId] = destClone;\n\n\treturn result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n\t// some basic styles to make the items look a bit nicer\n\tuserSelect: 'none',\n\tpadding: 16,\n\tmargin: `0 0 8px 0`,\n\toverflowWrap: 'break-word',\n\n\t// change background colour if dragging\n\tbackground: isDragging ? 'mediumpurple' : 'lightgrey',\n\n\t// styles we need to apply on draggables\n\t...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver) => ({\n\t//background: isDraggingOver ? 'lightblue' : 'white',\n\twidth: 250,\n\tminHeight: 50,\n\tpaddingBottom: 10,\n});\n\nclass DragAndDrop extends React.Component {\n\t/**\n\t * A semi-generic way to handle multiple lists. Matches\n\t * the IDs of the droppable container to the names of the\n\t * source arrays stored in the state.\n\t */\n\tid2List = {\n\t\tdroppable: 'items',\n\t\tdroppable2: 'selected',\n\t};\n\n\tgetList = (id) => _get(this.props.formValues, this.id2List[id]);\n\n\tonDragEnd = async (result) => {\n\t\tconst { source, destination } = result;\n\n\t\t// dropped outside the list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (source.droppableId === destination.droppableId) {\n\t\t\tconst items = reorder(\n\t\t\t\tthis.getList(source.droppableId),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tawait this.props.irvSetFieldValue(\n\t\t\t\tthis.id2List[source.droppableId],\n\t\t\t\titems\n\t\t\t);\n\t\t} else {\n\t\t\tconst result = move(\n\t\t\t\tthis.getList(source.droppableId),\n\t\t\t\tthis.getList(destination.droppableId),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tthis.props.irvSetFieldValue(itemsPath, result.droppable);\n\t\t\tawait this.props.irvSetFieldValue(selectedPath, result.droppable2);\n\t\t}\n\n\t\t// update commit form value\n\t\tthis.props.parentSetFieldValue(\n\t\t\tparentVotePath,\n\t\t\t_get(this.props.formValues, selectedPath).map((value) => value.content)\n\t\t);\n\t};\n\n\trender() {\n\t\tconst { formValues, disabled } = this.props;\n\n\t\tconst items = _get(formValues, itemsPath);\n\t\tconst selected = _get(formValues, selectedPath);\n\n\t\tconst titleStyle = disabled ? { color: 'grey' } : { fontWeight: 500 };\n\n\t\treturn (\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\n\t\t\t\t<Grid container spacing={24}>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Paper style={{ padding: 10 }}>\n\t\t\t\t\t\t\t<Typography gutterBottom style={titleStyle}>\n\t\t\t\t\t\t\t\tAvailable Options\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Droppable droppableId=\"droppable\">\n\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshot.isDraggingOver)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<Draggable\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tdraggableId={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\t\tisDragDisabled={disabled}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.content}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Paper style={{ padding: 10 }}>\n\t\t\t\t\t\t\t<Typography gutterBottom style={titleStyle}>\n\t\t\t\t\t\t\t\tSelected Options\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Droppable droppableId=\"droppable2\">\n\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\tstyle={getListStyle(snapshot.isDraggingOver)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{selected.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<Draggable\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tdraggableId={item.id}\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\t\tisDragDisabled={disabled}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1 + ': ' + item.content}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<br />\n\t\t\t</DragDropContext>\n\t\t);\n\t}\n}\n\nconst enhancer = _flowRight(withStyles(styles));\nexport default enhancer(InstantRunoffVoteForm);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _includes from 'lodash/includes';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, FieldArray } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withVote } from '../../context/VoteContext';\nimport { withNetwork } from '../../context/NetworkContext';\nimport { withFactomCli } from '../../context/FactomCliContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withLedger } from '../../context/LedgerContext';\nimport SectionHeader from '../shared/SectionHeader';\nimport ExplorerLink from '../shared/ExplorerLink';\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\nimport {\n\tREGEX_CHAIN_ID,\n\tBINARY_CONFIG,\n\tCOMMIT_HMAC_ALGO,\n\tSINGLE_OPTION_CONFIG,\n\tAPPROVAL_CONFIG,\n\tINSTANT_RUNOFF_CONFIG,\n} from '../create/VOTE_CONSTANTS';\nimport { app } from 'factom-identity-lib';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormTextField from '../../component/form/FormTextField';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Save from '@material-ui/icons/Save';\nimport BinaryVoteForm from './BinaryVoteForm';\nimport { randomBytes } from 'crypto-browserify';\nimport Paper from '@material-ui/core/Paper';\nimport ApprovalVoteForm from './ApprovalVoteForm';\nimport SingleOptionVoteForm from './SingleOptionVoteForm';\nimport InstantRunoffVoteForm from './InstantRunoffVoteForm';\nimport fileDownload from 'js-file-download';\nimport sanitize from 'sanitize-filename';\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\nimport Create from '@material-ui/icons/Create';\nimport { SVGLogo } from '../../component/logo/SVGLogo';\n\n/**\n * Constants\n */\nconst MANUAL_SIG = 'manual';\nconst LEDGER_SIG = 'ledger';\n\nconst identityChainIDPath = 'identityChainID';\nconst identityKeyPath = 'identityKey';\nconst ecPrivateKeyPath = 'ecPrivateKey';\nconst transactionErrorPath = 'transactionError';\nconst processingPath = 'processing';\nconst votePath = 'vote';\nconst secretPath = 'secret';\nconst resultPath = 'result';\nconst resetAnswerFormPath = 'resetAnswerForm';\nconst abstainCheckboxPath = 'abstainCheckbox';\nconst revealDataPath = 'revealData';\nconst signatureTypePath = 'signatureType';\nconst ledgerStatusPath = 'ledgerStatus';\n\nconst titlePath = 'pollJSON.proposal.title';\nconst pollChainIdPath = 'pollJSON.voteChainId';\nconst voteTypePath = 'pollJSON.vote.type';\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\nconst textPath = 'pollJSON.proposal.text';\nconst hrefPath = 'pollJSON.proposal.externalRef.href';\nconst hashValuePath = 'pollJSON.proposal.externalRef.hash.value';\nconst hashAlgoPath = 'pollJSON.proposal.externalRef.hash.algo';\n\nclass CommitVoteForm extends React.Component {\n\thandleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tpoll,\n\t\t\tproposalEntries,\n\t\t\tvoteController: { commitVote, getPollType },\n\t\t\tnetworkController: { networkProps },\n\t\t\tledgerController: { signMessageRaw },\n\t\t\tfactomCliController: { blockHeight },\n\t\t} = this.props;\n\n\t\tconst voterList = proposalEntries.map((value) => value.voterId);\n\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\n\n\t\tconst revealFileName = sanitize('Reveal_' + _get(poll, titlePath) + '.txt');\n\n\t\tconst pollType_o = getPollType(\n\t\t\t_get(poll, voteTypePath),\n\t\t\t_get(poll, maxOptionsPath)\n\t\t);\n\n\t\tlet AnswerForm;\n\t\tif (pollType_o.name === BINARY_CONFIG.name) {\n\t\t\tAnswerForm = BinaryVoteForm;\n\t\t} else if (pollType_o.name === SINGLE_OPTION_CONFIG.name) {\n\t\t\tAnswerForm = SingleOptionVoteForm;\n\t\t} else if (pollType_o.name === APPROVAL_CONFIG.name) {\n\t\t\tAnswerForm = ApprovalVoteForm;\n\t\t} else if (pollType_o.name === INSTANT_RUNOFF_CONFIG.name) {\n\t\t\tAnswerForm = InstantRunoffVoteForm;\n\t\t} else {\n\t\t\tAnswerForm = NoFormFound;\n\t\t}\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tvote: [],\n\t\t\t\t\tsecret: randomBytes(16).toString('hex'),\n\t\t\t\t\tidentityChainID: '',\n\t\t\t\t\tidentityKey: '',\n\t\t\t\t\tecPrivateKey: '',\n\t\t\t\t\tprocessing: false,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\tresult: null,\n\t\t\t\t\tresetAnswerForm: false,\n\t\t\t\t\tabstainCheckbox: false,\n\t\t\t\t\trevealData: '',\n\t\t\t\t\tsignatureType: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\n\t\t\t\t\tactions.setFieldValue(processingPath, true);\n\n\t\t\t\t\tconst signatureType = _get(values, signatureTypePath);\n\t\t\t\t\tlet identityChainId;\n\n\t\t\t\t\tconst commit_args = {\n\t\t\t\t\t\tvoteChainId: _get(poll, pollChainIdPath),\n\t\t\t\t\t\tvote: {\n\t\t\t\t\t\t\tvote: _get(values, votePath),\n\t\t\t\t\t\t\tsecret: _get(values, secretPath),\n\t\t\t\t\t\t\thmacAlgo: COMMIT_HMAC_ALGO,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tecPrivateAddress: _get(values, ecPrivateKeyPath),\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// set voter identity\n\t\t\t\t\t\tif (signatureType === MANUAL_SIG) {\n\t\t\t\t\t\t\tidentityChainId = _get(values, identityChainIDPath);\n\n\t\t\t\t\t\t\tcommit_args.voter = {\n\t\t\t\t\t\t\t\tchainId: identityChainId,\n\t\t\t\t\t\t\t\tkey: _get(values, identityKeyPath),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (signatureType === LEDGER_SIG) {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\tledgerStatusPath,\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\n\n\t\t\t\t\t\t\tif (ledgerConnected) {\n\t\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t\tledgerStatusPath,\n\t\t\t\t\t\t\t\t\t'Waiting for user to confirm signature on Ledger Nano S device.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst ledgerIdentity_o = await this.props.ledgerController.getLedgerIdentityAddress(\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tidentityChainId = ledgerIdentity_o.chainid;\n\n\t\t\t\t\t\t\tcommit_args.voter = {\n\t\t\t\t\t\t\t\tchainId: ledgerIdentity_o.chainid,\n\t\t\t\t\t\t\t\tkey: ledgerIdentity_o.address,\n\t\t\t\t\t\t\t\tsign: signMessageRaw,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//commit vote\n\t\t\t\t\t\tconst result = await commitVote(commit_args);\n\n\t\t\t\t\t\tactions.setFieldValue(resultPath, result);\n\t\t\t\t\t\tactions.setFieldValue(processingPath, false);\n\t\t\t\t\t\tactions.setFieldValue(ledgerStatusPath, '');\n\n\t\t\t\t\t\t// setup reveal file data\n\t\t\t\t\t\tconst reveal_args = {\n\t\t\t\t\t\t\tvoteChainId: _get(poll, pollChainIdPath),\n\t\t\t\t\t\t\tvote: {\n\t\t\t\t\t\t\t\tvote: _get(values, votePath),\n\t\t\t\t\t\t\t\tsecret: _get(values, secretPath),\n\t\t\t\t\t\t\t\thmacAlgo: COMMIT_HMAC_ALGO,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvoterId: identityChainId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tactions.setFieldValue(revealDataPath, JSON.stringify(reveal_args));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\tawait actions.setFieldValue(resetAnswerFormPath, true);\n\t\t\t\t\t\tawait actions.resetForm();\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[abstainCheckboxPath]: Yup.boolean(),\n\t\t\t\t\t[votePath]: Yup.array().when(abstainCheckboxPath, {\n\t\t\t\t\t\tis: false,\n\t\t\t\t\t\tthen: Yup.array().required('Required'),\n\t\t\t\t\t\totherwise: Yup.array().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[signatureTypePath]: Yup.string(),\n\t\t\t\t\t[identityChainIDPath]: Yup.string().when(signatureTypePath, {\n\t\t\t\t\t\tis: MANUAL_SIG,\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.matches(REGEX_CHAIN_ID, {\n\t\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\n\t\t\t\t\t\t\t\texcludeEmptyString: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.test(identityChainIDPath, 'Not an eligible voter', (value) =>\n\t\t\t\t\t\t\t\t_includes(voterList, value)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[identityKeyPath]: Yup.string().when(signatureTypePath, {\n\t\t\t\t\t\tis: MANUAL_SIG,\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\t\tidentityKeyPath,\n\t\t\t\t\t\t\t\t'Invalid Identity Key',\n\t\t\t\t\t\t\t\tapp.isValidSecretIdentityKey\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[ecPrivateKeyPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(ecPrivateKeyPath, 'Invalid Key', isValidPrivateEcAddress),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\tsubmitCount,\n\t\t\t\t\ttouched,\n\t\t\t\t\tresetForm,\n\t\t\t\t}) => {\n\t\t\t\t\tlet signTransactionTitle = 'Sign Transaction';\n\t\t\t\t\tif (_get(values, signatureTypePath) === LEDGER_SIG) {\n\t\t\t\t\t\tsignTransactionTitle += ' with Ledger Nano S';\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\n\t\t\t\t\t\t\t<Grid container className={classes.pad}>\n\t\t\t\t\t\t\t\t<Grid item container xs={12}>\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Question\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item container xs={12}>\n\t\t\t\t\t\t\t\t\t{_get(poll, textPath) && (\n\t\t\t\t\t\t\t\t\t\t<Typography>{_get(poll, textPath)}</Typography>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{_get(poll, hrefPath) && (\n\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>URL Link:</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={_get(poll, hrefPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, hrefPath)}&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 15,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\t\tHash Algorithm:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{_get(poll, hashAlgoPath)}</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={2} className={classes.smallGridColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>Hash Value:&nbsp;</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{_get(poll, hashValuePath)}</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{_get(errors, votePath) && submitCount > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"Answer *\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t\tRequired\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Answer\" />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\tname={votePath}\n\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\n\t\t\t\t\t\t\t\t\t\t\t<AnswerForm\n\t\t\t\t\t\t\t\t\t\t\t\tpoll={poll}\n\t\t\t\t\t\t\t\t\t\t\t\tparentArrayHelpers={arrayHelpers}\n\t\t\t\t\t\t\t\t\t\t\t\tparentIsSubmitting={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tparentReset={_get(values, resetAnswerFormPath)}\n\t\t\t\t\t\t\t\t\t\t\t\tparentSetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\t\t\tparentVoteArray={_get(values, votePath)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{_get(errors, signatureTypePath) && submitCount > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\n\t\t\t\t\t\t\t\t\t\t\ttext={signTransactionTitle + ' *'}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\n\t\t\t\t\t\t\t\t\t\t\ttext={signTransactionTitle}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{_isNil(_get(values, signatureTypePath)) && (\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, MANUAL_SIG);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Create\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 17 }}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleAccess={'Manual Entry'}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;Manual Entry\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, LEDGER_SIG);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<SVGLogo\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ledgerLogo}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano S\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === MANUAL_SIG && (\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item container>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityChainIDPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Voter Identity Chain ID *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityChainIDPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityChainIDPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityKeyPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Voter Identity Private Key *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityKeyPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityKeyPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{_get(values, resultPath) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Success!\" color=\"green\" />\n\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\tYour vote is pending confirmation. The entry will be\n\t\t\t\t\t\t\t\t\t\t\t\tvisible in 10-15 minutes, after being included in block\n\t\t\t\t\t\t\t\t\t\t\t\t{' ' + (blockHeight + 1)}, currently being processed by\n\t\t\t\t\t\t\t\t\t\t\t\tthe Factom blockchain.\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<ExplorerLink\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Commit\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, resultPath).entryHash}\n\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + _get(values, resultPath).entryHash}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfileDownload(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, revealDataPath),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trevealFileName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Save />\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp; Download Reveal File\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === LEDGER_SIG\n\t\t\t\t\t\t\t\t\t\t\t? 'Sign and Submit'\n\t\t\t\t\t\t\t\t\t\t\t: 'Submit'}\n\t\t\t\t\t\t\t\t\t\t{_get(values, processingPath) && (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, ledgerStatusPath) && (\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.ledgerStatus}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, ledgerStatusPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, resultPath) && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.resetButton}\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tawait setFieldValue(resetAnswerFormPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\tawait resetForm();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst NoFormFound = (props) => (\n\t<div>\n\t\t<Typography style={{ color: 'red' }}>Invalid Vote Configuration</Typography>\n\t</div>\n);\n\nCommitVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: '15px',\n\t},\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\t\tpadding: 10,\n\t},\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\n\terrorText: { color: 'red', fontSize: '13px' },\n\tledgerStatus: { display: 'inline-block', paddingLeft: '10px' },\n\tresetButton: { marginLeft: 2 },\n\tledgerLogo: { height: 16 },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithVote,\n\twithLedger,\n\twithStyles(styles)\n);\nexport default enhancer(CommitVoteForm);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../shared/SectionHeader';\nimport FormTextField from '../../component/form/FormTextField';\nimport { withVote } from '../../context/VoteContext';\nimport { withNetwork } from '../../context/NetworkContext';\nimport { withFactomCli } from '../../context/FactomCliContext';\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ExplorerLink from '../shared/ExplorerLink';\nimport Paper from '@material-ui/core/Paper';\n\n/**\n * Constants\n */\nconst workingFilePath = 'workingFile';\nconst workingFileNamePath = 'workingFileName';\nconst ecPrivateKeyPath = 'ecPrivateKey';\nconst transactionErrorPath = 'transactionError';\nconst revealJSONPath = 'revealJSON';\nconst processingPath = 'processing';\nconst resultPath = 'result';\nconst fileUploadErrorPath = 'fileUploadError';\n\nconst pollChainIdPath = 'voteChainId';\n\nclass RevealVoteForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.reader = new FileReader();\n\t}\n\n\thandleFile = async (file) => {\n\t\tawait this.reader.readAsText(file);\n\n\t\tthis.reader.onloadend = async (e) => {\n\t\t\tconst content = this.reader.result;\n\t\t\tconst json = JSON.parse(content);\n\n\t\t\tconst fileChainId = _get(json, pollChainIdPath);\n\n\t\t\tconst pollChainId = _get(this.props.poll, pollChainIdPath);\n\n\t\t\tif (fileChainId === pollChainId) {\n\t\t\t\t//correct reveal\n\t\t\t\tthis.setFieldValue(revealJSONPath, json);\n\t\t\t\tthis.setFieldValue(fileUploadErrorPath, null);\n\t\t\t} else {\n\t\t\t\t//invalid reveal\n\t\t\t\tawait this.resetForm();\n\t\t\t\tthis.setFieldValue(fileUploadErrorPath, 'Invalid Poll Chain ID');\n\t\t\t}\n\t\t};\n\t};\n\n\thandleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tnetworkController: { networkProps },\n\t\t\tfactomCliController: { blockHeight },\n\t\t} = this.props;\n\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tecPrivateKey: '',\n\t\t\t\t\tworkingFile: '',\n\t\t\t\t\tworkingFileName: '',\n\t\t\t\t\tprocessing: false,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\trevealJSON: null,\n\t\t\t\t\tresult: null,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\n\t\t\t\t\tactions.setFieldValue(processingPath, true);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//reveal vote\n\t\t\t\t\t\tconst reveal = _get(values, revealJSONPath);\n\t\t\t\t\t\treveal.ecPrivateAddress = _get(values, ecPrivateKeyPath);\n\n\t\t\t\t\t\tconst result = await this.props.voteController.revealVote(reveal);\n\t\t\t\t\t\tconsole.log(result);\n\n\t\t\t\t\t\tactions.setFieldValue(resultPath, result);\n\t\t\t\t\t\tactions.setFieldValue(processingPath, false);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\tawait actions.resetForm();\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[ecPrivateKeyPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(ecPrivateKeyPath, 'Invalid Key', isValidPrivateEcAddress),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tresetForm,\n\t\t\t\t}) => {\n\t\t\t\t\tthis.setFieldValue = setFieldValue;\n\t\t\t\t\tthis.resetForm = resetForm;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\n\t\t\t\t\t\t\t<Grid container className={classes.pad}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Reveal Vote\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\tname={workingFileNamePath}\n\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\taccept=\".txt\"\n\t\t\t\t\t\t\t\t\t\tonChange={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingFilePath, e.target.files[0]);\n\n\t\t\t\t\t\t\t\t\t\t\tthis.handleFile(e.target.files[0]);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{!_isNil(_get(values, fileUploadErrorPath)) && (\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, fileUploadErrorPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={3} />\n\t\t\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\n\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\n\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={3} />\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{_get(values, resultPath) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Success!\" color=\"green\" />\n\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\tYour vote is pending confirmation. The entry will be\n\t\t\t\t\t\t\t\t\t\t\t\tvisible in 10-15 minutes, after being included in block\n\t\t\t\t\t\t\t\t\t\t\t\t{' ' + (blockHeight + 1)}, currently being processed by\n\t\t\t\t\t\t\t\t\t\t\t\tthe Factom blockchain.\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<ExplorerLink\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Reveal\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, resultPath).entryHash}\n\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + _get(values, resultPath).entryHash}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\tisSubmitting || !_get(values, workingFileNamePath)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tReveal Vote\n\t\t\t\t\t\t\t\t\t\t{_get(values, processingPath) && (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, resultPath) && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.resetButton}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nRevealVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: '15px',\n\t},\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\n\tresetButton: { marginLeft: 2 },\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\t\tpadding: 10,\n\t},\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithVote,\n\twithStyles(styles)\n);\nexport default enhancer(RevealVoteForm);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Clear from '@material-ui/icons/Clear';\nimport Person from '@material-ui/icons/Person';\nimport Paper from '@material-ui/core/Paper';\n\nclass EligibleVotersList extends React.Component {\n\trender() {\n\t\tconst { classes, eligibleVoters, arrayHelpers, errorMessage } = this.props;\n\n\t\treturn (\n\t\t\t<Paper elevation={2} className={classes.listContainer}>\n\t\t\t\t<Typography variant=\"subtitle1\">Eligible Voter List</Typography>\n\t\t\t\t{errorMessage}\n\t\t\t\t<List className={classes.list} dense>\n\t\t\t\t\t{eligibleVoters.length > 0 ? (\n\t\t\t\t\t\teligibleVoters.map((voter, index) => (\n\t\t\t\t\t\t\t<ListItem key={index} disableGutters divider>\n\t\t\t\t\t\t\t\t<Person />\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={'Voter ID: ' + voter.voterId}\n\t\t\t\t\t\t\t\t\tsecondary={voter.weight && 'Weight: ' + voter.weight}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{arrayHelpers && (\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.remove(index);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Clear />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ListItem disableGutters divider>\n\t\t\t\t\t\t\t<ListItemText primary={'No Voters have been added'} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t)}\n\t\t\t\t</List>\n\t\t\t</Paper>\n\t\t);\n\t}\n}\n\nEligibleVotersList.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tlist: {\n\t\toverflow: 'auto',\n\t\tmaxHeight: 350,\n\t},\n\tlistContainer: {\n\t\tmarginTop: '10px',\n\t\tpadding: '15px',\n\t},\n});\n\nexport default withStyles(styles)(EligibleVotersList);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport LabelImportant from '@material-ui/icons/LabelImportant';\nimport SectionHeader from '../shared/SectionHeader';\nimport { withNetwork } from '../../context/NetworkContext';\nimport { withFactomCli } from '../../context/FactomCliContext';\nimport { withVote } from '../../context/VoteContext';\nimport EligibleVotersList from '../shared/EligibleVotersList';\nimport ExplorerLink from './ExplorerLink';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport * as moment from 'moment';\n\nimport {\n\tBINARY_CONFIG,\n\tAPPROVAL_CONFIG,\n\tINSTANT_RUNOFF_CONFIG,\n\tALL_ELIGIBLE_VOTERS,\n\tPARTICIPANTS_ONLY,\n} from '../create/VOTE_CONSTANTS';\n\n/**\n * Constants\n */\n\n//duplicates\nconst titlePath = 'pollJSON.proposal.title';\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\nconst commitEndPath = 'pollJSON.vote.phasesBlockHeights.commitEnd';\nconst revealEndPath = 'pollJSON.vote.phasesBlockHeights.revealEnd';\nconst hrefPath = 'pollJSON.proposal.externalRef.href';\nconst hashValuePath = 'pollJSON.proposal.externalRef.hash.value';\nconst hashAlgoPath = 'pollJSON.proposal.externalRef.hash.algo';\nconst textPath = 'pollJSON.proposal.text';\nconst optionsPath = 'pollJSON.vote.config.options';\nconst voteTypePath = 'pollJSON.vote.type';\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\nconst computeResultsAgainstPath = 'pollJSON.vote.config.computeResultsAgainst';\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\nconst minSupportPath = 'pollJSON.vote.config.winnerCriteria.minSupport';\nconst minTurnoutPath = 'pollJSON.vote.config.acceptanceCriteria.minTurnout';\n\nconst weightedMinTurnoutPath =\n\t'pollJSON.vote.config.acceptanceCriteria.minTurnout.weighted';\nconst unweightedMinTurnoutPath =\n\t'pollJSON.vote.config.acceptanceCriteria.minTurnout.unweighted';\nconst pollChainIdPath = 'pollJSON.voteChainId';\n\n//unique so far\nconst pollInitiatorIdPath = 'pollJSON.admin.voteInitiator';\n\nclass VoteSummary extends React.Component {\n\tasync componentDidMount() {\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\tcalculateWriteTimeDisplay = (writeHeight) => {\n\t\tconst eventTimestamp = this.props.factomCliController.getEstimatedBlockTimestamp(\n\t\t\twriteHeight\n\t\t);\n\n\t\tconst eventDate = moment(eventTimestamp).utc();\n\n\t\tconst displayValue = eventDate.format('MMM DD YYYY, h:mm A');\n\n\t\treturn displayValue;\n\t};\n\n\tsupportsMinSupportCriteria = (voteType) => {\n\t\tlet result = true;\n\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\n\t\t\tresult = false;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tsupportsWeightedMinTurnoutCriteria = (voteType) => {\n\t\tlet result = true;\n\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\n\t\t\tresult = false;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\teligibleVoters,\n\t\t\tpoll,\n\t\t\tfactomCliController: { blockHeight },\n\t\t\tnetworkController: { networkProps },\n\t\t\tvoteController: { getPollType },\n\t\t} = this.props;\n\n\t\t// poll type text\n\t\tconst pollType_o = getPollType(\n\t\t\t_get(poll, voteTypePath),\n\t\t\t_get(poll, maxOptionsPath)\n\t\t);\n\n\t\tconst pollTypeText = pollType_o.name;\n\n\t\t// minimum support\n\t\tconst supportsMinSupportConfig = this.supportsMinSupportCriteria(\n\t\t\tpollType_o.type\n\t\t);\n\n\t\tlet minSupportOption;\n\t\tlet weightedMinSupportPath;\n\t\tlet unweightedMinSupportPath;\n\n\t\tif (supportsMinSupportConfig) {\n\t\t\tminSupportOption = Object.keys(_get(poll, minSupportPath))[0];\n\n\t\t\tweightedMinSupportPath =\n\t\t\t\tminSupportPath + '.' + minSupportOption + '.weighted';\n\t\t\tunweightedMinSupportPath =\n\t\t\t\tminSupportPath + '.' + minSupportOption + '.unweighted';\n\t\t}\n\n\t\t// minimum turnout\n\t\tconst hasMinTurnoutCriteria = !_isNil(_get(poll, minTurnoutPath));\n\t\tconst supportsWeightedMinTurnoutCriteria = this.supportsWeightedMinTurnoutCriteria(\n\t\t\tpollType_o.type\n\t\t);\n\n\t\t// date estimations\n\t\tlet commitStartDate = null;\n\t\tlet commitEndDate = null;\n\t\tlet revealStartDate = null;\n\t\tlet revealEndDate = null;\n\n\t\tif (blockHeight) {\n\t\t\tcommitStartDate = this.calculateWriteTimeDisplay(\n\t\t\t\t_get(poll, commitStartPath)\n\t\t\t);\n\t\t\tcommitEndDate = this.calculateWriteTimeDisplay(_get(poll, commitEndPath));\n\t\t\trevealStartDate = this.calculateWriteTimeDisplay(\n\t\t\t\t_get(poll, commitEndPath) + 1\n\t\t\t);\n\t\t\trevealEndDate = this.calculateWriteTimeDisplay(_get(poll, revealEndPath));\n\t\t}\n\n\t\treturn (\n\t\t\t<Grid item xs={12} container>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<SectionHeader text=\"Poll Configuration\" />\n\t\t\t\t</Grid>\n\t\t\t\t{_get(poll, pollChainIdPath) && (\n\t\t\t\t\t<Grid item xs={12} container>\n\t\t\t\t\t\t<ExplorerLink\n\t\t\t\t\t\t\tlabel=\"Poll Chain ID\"\n\t\t\t\t\t\t\tvalue={_get(poll, pollChainIdPath)}\n\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\t\t'/data?type=chain&key=' +\n\t\t\t\t\t\t\t\t_get(poll, pollChainIdPath)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t{_get(poll, pollInitiatorIdPath) && (\n\t\t\t\t\t<Grid item xs={12} container>\n\t\t\t\t\t\t<ExplorerLink\n\t\t\t\t\t\t\tlabel=\"Poll Initiator\"\n\t\t\t\t\t\t\tvalue={_get(poll, pollInitiatorIdPath)}\n\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\t\t'/data?type=chain&key=' +\n\t\t\t\t\t\t\t\t_get(poll, pollInitiatorIdPath)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\n\t\t\t\t<Grid item container xs={5}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>Title: {_get(poll, titlePath)}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>Type: {pollTypeText}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\tAllow Abstain:&nbsp;\n\t\t\t\t\t\t\t{_get(poll, abstentionPath) ? 'True' : 'False'}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{supportsMinSupportConfig && (\n\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\tCompute Results Against:&nbsp;\n\t\t\t\t\t\t\t\t{_get(poll, computeResultsAgainstPath) ===\n\t\t\t\t\t\t\t\tALL_ELIGIBLE_VOTERS.value\n\t\t\t\t\t\t\t\t\t? ALL_ELIGIBLE_VOTERS.text\n\t\t\t\t\t\t\t\t\t: PARTICIPANTS_ONLY.text}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item container xs={3}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\tCommit Start:&nbsp;{_get(poll, commitStartPath)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\tCommit End:&nbsp;&nbsp;&nbsp;{_get(poll, commitEndPath)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\tReveal Start:&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t{_get(poll, commitEndPath) + 1}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\tReveal End:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t{_get(poll, revealEndPath)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item container xs={4}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography>{commitStartDate} UTC</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography>{commitEndDate} UTC</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography>{revealStartDate} UTC</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography>{revealEndDate} UTC</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<br />\n\t\t\t\t\t<SectionHeader text=\"Question\" />\n\t\t\t\t</Grid>\n\t\t\t\t{_get(poll, hrefPath) && (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\n\t\t\t\t\t\t\t<Typography gutterBottom>URL Link:</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={_get(poll, hrefPath)}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t{_get(poll, hrefPath)}&nbsp;\n\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 15,\n\t\t\t\t\t\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\n\t\t\t\t\t\t\t<Typography gutterBottom>Hash Algorithm:&nbsp;</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t<Typography>{_get(poll, hashAlgoPath)}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={3} className={classes.smallGridColumn}>\n\t\t\t\t\t\t\t<Typography gutterBottom>Hash Value:&nbsp;</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t<Typography>{_get(poll, hashValuePath)}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t{_get(poll, textPath) && (\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\tQuestion: {_get(poll, textPath)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<br />\n\t\t\t\t\t<SectionHeader text=\"Answers\" />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Paper elevation={1} className={classes.pad}>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">Options</Typography>\n\t\t\t\t\t\t<Grid container spacing={24}>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t{_get(poll, optionsPath) &&\n\t\t\t\t\t\t\t\t\t\t_get(poll, optionsPath).map((option, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tdivider={index < _get(poll, optionsPath).length - 1}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant style={{ fontSize: 15 }} />\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={option}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.option}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t{(pollType_o.name === APPROVAL_CONFIG.name ||\n\t\t\t\t\t\t\t\t\tpollType_o.name === INSTANT_RUNOFF_CONFIG.name) && (\n\t\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\tMinimum Options Allowed:&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, minOptionsPath)}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\tMaximum Options Allowed:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, maxOptionsPath)}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<br />\n\t\t\t\t\t<SectionHeader text=\"Winner Criteria\" />\n\t\t\t\t\t{supportsMinSupportConfig ? (\n\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Support\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t{!_isNil(_get(poll, weightedMinSupportPath)) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, unweightedMinSupportPath) && <br />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeighted Ratio:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, weightedMinSupportPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{!_isNil(_get(poll, unweightedMinSupportPath)) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, weightedMinSupportPath) && <br />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnweighted Ratio:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, unweightedMinSupportPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t{pollType_o.name === BINARY_CONFIG.name ? (\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tApplies to option: {minSupportOption}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Applies to all options</Typography>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography>Not Applicable</Typography>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<br />\n\t\t\t\t\t<SectionHeader text=\"Acceptance Criteria\" />\n\t\t\t\t\t{hasMinTurnoutCriteria ? (\n\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={hasMinTurnoutCriteria}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.defaultCursor}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Turnout\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t{supportsWeightedMinTurnoutCriteria &&\n\t\t\t\t\t\t\t\t\t\t\t\t!_isNil(_get(poll, weightedMinTurnoutPath)) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, unweightedMinTurnoutPath) && <br />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWeighted Ratio:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, weightedMinTurnoutPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{!_isNil(_get(poll, unweightedMinTurnoutPath)) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!_get(poll, weightedMinTurnoutPath) && <br />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnweighted Ratio:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(poll, unweightedMinTurnoutPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t<Typography>Applies to all options</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography>None</Typography>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t{eligibleVoters && (\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<EligibleVotersList eligibleVoters={eligibleVoters} />\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nVoteSummary.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: 15,\n\t},\n\tsmallGridColumn: {\n\t\tflexBasis: '19%',\n\t},\n\toption: {\n\t\toverflowWrap: 'break-word',\n\t},\n\tdefaultCursor: {\n\t\tcursor: 'default',\n\t},\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithVote,\n\twithStyles(styles)\n);\nexport default enhancer(VoteSummary);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport _flowRight from 'lodash/flowRight';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isNil from 'lodash/isNil';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Done from '@material-ui/icons/Done';\nimport Close from '@material-ui/icons/Close';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport { withNetwork } from '../../context/NetworkContext';\nimport ExplorerLink from '../shared/ExplorerLink';\nimport { POLL_STATUSES } from '../create/VOTE_CONSTANTS';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\n\nconst createVoterRow = (voterID, commit, reveal, weight) => {\n\treturn { voterID, commit, reveal, weight };\n};\n\nclass ParticipantsTab extends React.Component {\n\tstate = {\n\t\texpand: false,\n\t};\n\n\ttoggleExpand = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\texpand: !prevState.expand,\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\teligibleVotersChainId,\n\t\t\tproposalEntries,\n\t\t\tstatus_o,\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\n\n\t\tlet tableRows = [];\n\n\t\tproposalEntries.forEach((voter_o) => {\n\t\t\tconst row = createVoterRow(\n\t\t\t\tvoter_o.voterId,\n\t\t\t\tvoter_o.commit,\n\t\t\t\tvoter_o.reveal,\n\t\t\t\tvoter_o.weight\n\t\t\t);\n\t\t\ttableRows.push(row);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className={classes.tableWrapper}>\n\t\t\t\t<Grid item xs={12} container className={classes.voterChain}>\n\t\t\t\t\t<ExplorerLink\n\t\t\t\t\t\tlabel=\"Eligible Voters Chain\"\n\t\t\t\t\t\tvalue={eligibleVotersChainId}\n\t\t\t\t\t\thref={\n\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\t'/data?type=chain&key=' +\n\t\t\t\t\t\t\teligibleVotersChainId\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<th className={classes.expandColumn}>\n\t\t\t\t\t\t\t\t{this.state.expand ? (\n\t\t\t\t\t\t\t\t\t<ExpandLess\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleExpand}\n\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Collapse Table\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<ExpandMore\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleExpand}\n\t\t\t\t\t\t\t\t\t\ttitleAccess=\"Expand Table\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t{this.state.expand ? (\n\t\t\t\t\t\t\t\t<TableCell>Voter ID</TableCell>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<TableCell className={classes.chainIDColumn}>\n\t\t\t\t\t\t\t\t\tVoter ID\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<TableCell>Commit</TableCell>\n\t\t\t\t\t\t\t<TableCell>Reveal</TableCell>\n\t\t\t\t\t\t\t<TableCell>Weight</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{_isEmpty(tableRows) && (\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t<Typography>No Eligible Voters</Typography>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t\t<TableCell />\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{tableRows.map((row) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TableRow key={row.voterID}>\n\t\t\t\t\t\t\t\t\t<td className={classes.expandColumn} />\n\t\t\t\t\t\t\t\t\t{this.state.expand ? (\n\t\t\t\t\t\t\t\t\t\t<TableCell>{row.voterID}</TableCell>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.chainIDColumn}>\n\t\t\t\t\t\t\t\t\t\t\t{row.voterID}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<TableCell style={{ minWidth: 131 }}>\n\t\t\t\t\t\t\t\t\t\t{!_isNil(row.commit) && (\n\t\t\t\t\t\t\t\t\t\t\t<Grid container alignItems=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Done\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'green', display: 'inline-block' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + row.commit}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.openInNew}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{_isNil(row.commit) &&\n\t\t\t\t\t\t\t\t\t\t\t(status_o.value === POLL_STATUSES['reveal'].value ||\n\t\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === POLL_STATUSES['complete'].value) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Close color=\"secondary\" />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell style={{ minWidth: 131 }}>\n\t\t\t\t\t\t\t\t\t\t{!_isNil(row.reveal) && (\n\t\t\t\t\t\t\t\t\t\t\t<Grid container alignItems=\"flex-end\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Done\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'green', display: 'inline-block' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + row.reveal}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.openInNew}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{_isNil(row.reveal) &&\n\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === POLL_STATUSES['complete'].value && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Close color=\"secondary\" />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{row.weight}</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nParticipantsTab.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\ttableWrapper: {\n\t\toverflowX: 'auto',\n\t},\n\texpandColumn: {\n\t\tmaxWidth: '3px',\n\t},\n\tchainIDColumn: {\n\t\tmaxWidth: '265px',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t},\n\terrorText: {\n\t\tcolor: 'red',\n\t},\n\tvoterChain: {\n\t\tpaddingTop: '20px',\n\t\tpaddingLeft: '5px',\n\t},\n\topenInNew: { fontSize: 15 },\n});\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(ParticipantsTab);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst VoteResult = ({ result }) => {\n\treturn (\n\t\t<ExpansionPanel>\n\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n\t\t\t\t<Typography style={{ fontWeight: 500 }}>Result</Typography>\n\t\t\t</ExpansionPanelSummary>\n\t\t\t<ExpansionPanelDetails>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12} />\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<pre>{JSON.stringify(result, null, 2)}</pre>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</ExpansionPanelDetails>\n\t\t</ExpansionPanel>\n\t);\n};\n\nconst styles = (theme) => ({});\n\nexport default withStyles(styles)(VoteResult);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { withStyles } from '@material-ui/core/styles';\nimport CommitVoteForm from './CommitVoteForm';\nimport RevealVoteForm from './RevealVoteForm';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport QS from 'qs';\nimport VoteSummary from '../shared/VoteSummary';\nimport ParticipantsTab from './ParticipantsTab';\nimport VoteResult from './VoteResult';\nimport { withVote } from '../../context/VoteContext';\nimport { withFactomCli } from '../../context/FactomCliContext';\nimport { withWalletContext } from '../../context/WalletContext';\nimport { withNetwork } from '../../context/NetworkContext';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport SectionHeader from '../shared/SectionHeader';\nimport Countdown from 'react-countdown-now';\n\nconst GET_VOTE = gql`\n\tquery Vote($chain: String!) {\n\t\tproposal(chain: $chain) {\n\t\t\tvoteChainId\n\n\t\t\tadmin {\n\t\t\t\tvoteInitiator\n\t\t\t\tprotocolVersion\n\t\t\t}\n\n\t\t\tproposal {\n\t\t\t\ttitle\n\t\t\t\ttext\n\t\t\t\texternalRef\n\t\t\t}\n\n\t\t\tvote {\n\t\t\t\tphasesBlockHeights {\n\t\t\t\t\tcommitStart\n\t\t\t\t\tcommitEnd\n\t\t\t\t\trevealEnd\n\t\t\t\t}\n\t\t\t\teligibleVotersChainId\n\t\t\t\ttype\n\t\t\t\tconfig {\n\t\t\t\t\toptions\n\t\t\t\t\tallowAbstention\n\t\t\t\t\tcomputeResultsAgainst\n\t\t\t\t\tminOptions\n\t\t\t\t\tmaxOptions\n\t\t\t\t\twinnerCriteria\n\t\t\t\t\tacceptanceCriteria\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst GET_RESULT = gql`\n\tquery Result($voteChain: String!) {\n\t\tresult(voteChain: $voteChain) {\n\t\t\tabstain\n\t\t\tchainId\n\t\t\tinvalidReason\n\t\t\toptions\n\t\t\tsupport\n\t\t\ttotal\n\t\t\tturnout\n\t\t\tvalid\n\t\t\tvoted\n\t\t\tweightedWinners\n\t\t}\n\t}\n`;\n\nconst GET_VOTERS = gql`\n\tquery Voters($chain: String!) {\n\t\tproposalEntries(chain: $chain) {\n\t\t\tvoterId\n\t\t\tcommit\n\t\t\treveal\n\t\t\tweight\n\t\t\t# entryHash\n\t\t}\n\t}\n`;\n\nclass VoteTabContent extends React.Component {\n\tstate = {\n\t\ttabValue: 0,\n\t\tpollChainId: null,\n\t};\n\n\thandleTabChange = (event, value) => {\n\t\tthis.setState({ tabValue: value });\n\t};\n\n\tcomponentDidMount = () => {\n\t\tconst queryParams = QS.parse(this.props.location.search, {\n\t\t\tignoreQueryPrefix: true,\n\t\t});\n\n\t\tthis.setState({ pollChainId: queryParams.id });\n\n\t\t// check network\n\t\tconst requestedNetwork = queryParams.network;\n\t\tconst currentNetwork = this.props.networkController.networkProps.network;\n\n\t\tif (requestedNetwork !== currentNetwork) {\n\t\t\t//switch networks\n\t\t\tthis.props.walletController.handleNetworkChange(requestedNetwork);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tvoteController: { getPollStatus, getPhaseEndBlock },\n\t\t\tfactomCliController: { getEstimatedBlockTimestamp },\n\t\t} = this.props;\n\n\t\tconst pollChainId = this.state.pollChainId;\n\n\t\treturn (\n\t\t\t<Grid container spacing={24}>\n\t\t\t\t<Grid item xs={2} />\n\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t<Paper className={classes.pad}>\n\t\t\t\t\t\t{pollChainId && (\n\t\t\t\t\t\t\t<Query\n\t\t\t\t\t\t\t\tquery={GET_VOTE}\n\t\t\t\t\t\t\t\tvariables={{\n\t\t\t\t\t\t\t\t\tchain: pollChainId,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\t\t\t\t\tif (loading) return <PreLoadHeader message=\"Loading...\" />;\n\t\t\t\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<PreLoadHeader\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={'Error: ' + error.message}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst poll_o = data.proposal;\n\n\t\t\t\t\t\t\t\t\tconst phasesBlockHeights = poll_o.vote.phasesBlockHeights;\n\n\t\t\t\t\t\t\t\t\tconst status_o = getPollStatus(phasesBlockHeights);\n\t\t\t\t\t\t\t\t\tconst phaseEndBlock = getPhaseEndBlock(phasesBlockHeights);\n\n\t\t\t\t\t\t\t\t\tconst countdownTimestamp = getEstimatedBlockTimestamp(\n\t\t\t\t\t\t\t\t\t\tphaseEndBlock + 1\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Query\n\t\t\t\t\t\t\t\t\t\t\tquery={GET_VOTERS}\n\t\t\t\t\t\t\t\t\t\t\tvariables={{\n\t\t\t\t\t\t\t\t\t\t\t\tchain: poll_o.voteChainId,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (loading)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <PreLoadHeader message=\"Loading...\" />;\n\t\t\t\t\t\t\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PreLoadHeader\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={'Error: ' + error.message}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst proposalEntries_o = data.proposalEntries;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{poll_o.proposal.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={classes.pad}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'complete' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext=\"Poll Complete\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStatus:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.displayValue}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={countdownTimestamp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderer={RenderCountdown}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'complete' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Query\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery={GET_RESULT}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariables={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteChain: poll_o.voteChainId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (loading)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoading result...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tError loading result:{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VoteResult result={data.result} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Query>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Paper className={classes.pad}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleTabChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"Poll Configuration\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"View Voters\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'commit' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"Commit Vote\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{status_o.value === 'reveal' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tab label=\"Reveal Vote\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.pad}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VoteSummary poll={{ pollJSON: poll_o }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 1 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ParticipantsTab\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVotersChainId={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpoll_o.vote.eligibleVotersChainId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposalEntries={proposalEntries_o}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus_o={status_o}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === 'commit' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CommitVoteForm\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpoll={{ pollJSON: poll_o }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproposalEntries={proposalEntries_o}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.tabValue === 2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus_o.value === 'reveal' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RevealVoteForm poll={poll_o} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t</Query>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</Query>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={2} />\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst PreLoadHeader = (props) => {\n\treturn (\n\t\t<Grid container justify=\"center\">\n\t\t\t<Typography className={props.className}>{props.message}</Typography>\n\t\t</Grid>\n\t);\n};\n\nVoteTabContent.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: 15,\n\t},\n\tsmallGridColumn: {\n\t\tflexBasis: '19%',\n\t},\n\terrorText: {\n\t\tcolor: 'red',\n\t},\n});\n\nconst RenderCountdown = ({ days, hours, minutes, seconds, completed }) => {\n\treturn (\n\t\t<>\n\t\t\t<br />\n\t\t\t<Typography\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'inline',\n\t\t\t\t\tfontWeight: 500,\n\t\t\t\t}}\n\t\t\t\tgutterBottom\n\t\t\t>\n\t\t\t\tRemaining Time:{' '}\n\t\t\t</Typography>\n\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t{completed ? (\n\t\t\t\t\t'The final block in this phase is almost complete.'\n\t\t\t\t) : (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{days} days, {hours} hours, {minutes} minutes, {seconds} seconds\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</Typography>\n\t\t</>\n\t);\n};\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithWalletContext,\n\twithVote,\n\twithStyles(styles)\n);\nexport default enhancer(VoteTabContent);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isFinite from 'lodash/isFinite';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, FieldArray } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../shared/SectionHeader';\nimport FormTextField from '../../component/form/FormTextField';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport EligibleVotersList from '../shared/EligibleVotersList';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { REGEX_CHAIN_ID } from './VOTE_CONSTANTS';\n\n/**\n * Queries\n */\nconst GET_VOTERS = gql`\n\tquery Voters($chain: String!) {\n\t\teligibleVoters(chain: $chain) {\n\t\t\tvoters {\n\t\t\t\tvoterId\n\t\t\t\tweight\n\t\t\t}\n\t\t}\n\t}\n`;\n\n/**\n * Constants\n */\nconst eligibleVotersPath = 'eligibleVoters';\n// form specific fields\nconst selectedListPath = 'formFields.selectedList';\nconst workingIdentityChainIdPath = 'formFields.workingIdentityChainId';\nconst workingWeightPath = 'formFields.workingWeight';\nconst workingEligibleChainIdPath = 'formFields.workingEligibleChainId';\nconst loadingVotersPath = 'formFields.loadingVoters';\nconst loadErrorMessagePath = 'formFields.loadErrorMessage';\nconst loadSuccessMessagePath = 'formFields.loadSuccessMessage';\nconst workingFileNamePath = 'formFields.workingFileName';\nconst workingFilePath = 'formFields.workingFile';\n\nfunction formatVoter(voterId, weight) {\n\treturn {\n\t\tvoterId,\n\t\tweight,\n\t};\n}\n\nclass EligibleVotersForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.reader = new FileReader();\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\thandleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tisValidVoter = (voter_o) => {\n\t\t// test weight\n\t\tconst weight = _get(voter_o, 'weight');\n\t\tif (!_isFinite(weight) || !(weight > 0)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// test voter Id\n\t\tconst voterId = _get(voter_o, 'voterId');\n\t\tif (!REGEX_CHAIN_ID.test(voterId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\thandleFile = (file) => {\n\t\tthis.reader.readAsText(file);\n\n\t\tthis.reader.onloadend = (e) => {\n\t\t\tconst content = this.reader.result;\n\t\t\tconst voterList = content.trim().split('\\n');\n\n\t\t\tlet newVoterList = [];\n\t\t\tlet invalidData = false;\n\n\t\t\tfor (let index = 1; index < voterList.length; index++) {\n\t\t\t\tconst attributes = voterList[index].trim().split(',');\n\t\t\t\tconst voter_o = formatVoter(attributes[0], parseInt(attributes[1]));\n\t\t\t\tif (this.isValidVoter(voter_o)) {\n\t\t\t\t\tnewVoterList.push(voter_o);\n\t\t\t\t} else {\n\t\t\t\t\tinvalidData = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (invalidData || _isEmpty(newVoterList)) {\n\t\t\t\tthis.setFieldValue(loadErrorMessagePath, '* Invalid CSV data');\n\t\t\t} else {\n\t\t\t\tnewVoterList.forEach((voter_o) => {\n\t\t\t\t\tthis.handleVoter(voter_o);\n\t\t\t\t});\n\t\t\t\tthis.setFieldValue(\n\t\t\t\t\tloadSuccessMessagePath,\n\t\t\t\t\tnewVoterList.length + ' voters loaded'\n\t\t\t\t);\n\t\t\t\tthis.setFieldValue(workingFilePath, '');\n\t\t\t\tthis.setFieldValue(workingFileNamePath, '');\n\t\t\t}\n\t\t};\n\t};\n\n\thandleVoterChainId = async (chain) => {\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { eligibleVoters },\n\t\t\t} = await this.apolloClient.query({\n\t\t\t\tquery: GET_VOTERS,\n\t\t\t\tvariables: { chain },\n\t\t\t});\n\t\t\tconst voterData = _get(eligibleVoters, 'voters');\n\n\t\t\tif (!_isEmpty(voterData)) {\n\t\t\t\t// data found\n\t\t\t\tvoterData.forEach(({ voterId, weight }) => {\n\t\t\t\t\tthis.handleVoter(formatVoter(voterId, weight));\n\t\t\t\t});\n\t\t\t\tthis.setFieldValue(\n\t\t\t\t\tloadSuccessMessagePath,\n\t\t\t\t\tvoterData.length + ' voters loaded'\n\t\t\t\t);\n\t\t\t\tthis.setFieldValue(workingEligibleChainIdPath, '');\n\t\t\t} else {\n\t\t\t\t// no data found\n\t\t\t\tthis.setFieldValue(loadErrorMessagePath, '* No voters found');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.setFieldValue(loadErrorMessagePath, '* An Error has occured');\n\t\t}\n\t};\n\n\thandleVoter = (voter_o) => {\n\t\tif (this.isValidVoter(voter_o)) {\n\t\t\tconst voterIndex = this.findVoter(voter_o.voterId);\n\n\t\t\t// if voter exists\n\t\t\tif (voterIndex !== -1) {\n\t\t\t\t// replace voter\n\t\t\t\tthis.arrayHelpers.replace(voterIndex, voter_o);\n\t\t\t} else {\n\t\t\t\t// add new voter\n\t\t\t\tthis.arrayHelpers.push(voter_o);\n\t\t\t}\n\t\t}\n\t};\n\n\tfindVoter = (voterId) =>\n\t\tthis.currentEligibleVoters.findIndex(\n\t\t\t(voter_o) => voter_o.voterId === voterId\n\t\t);\n\n\tresetAddVoterFields = () => {\n\t\tthis.setFieldValue(workingIdentityChainIdPath, '');\n\t\tthis.setFieldValue(workingWeightPath, '');\n\t};\n\n\trender() {\n\t\tconst { eligibleVotersForm, classes, updateParticipants } = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={eligibleVotersForm}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t// update participants\n\t\t\t\t\tupdateParticipants(values);\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\teligibleVoters: Yup.array().required('* Add at least one voter'),\n\t\t\t\t\tformFields: Yup.object().shape({\n\t\t\t\t\t\tworkingWeight: Yup.number()\n\t\t\t\t\t\t\t.transform((currentValue, originalValue) => {\n\t\t\t\t\t\t\t\treturn originalValue === '' ? undefined : currentValue;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.moreThan(0, 'Must be a positive number'),\n\t\t\t\t\t\tworkingIdentityChainId: Yup.string().matches(REGEX_CHAIN_ID, {\n\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\n\t\t\t\t\t\t\texcludeEmptyString: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tworkingEligibleChainId: Yup.string().matches(REGEX_CHAIN_ID, {\n\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\n\t\t\t\t\t\t\texcludeEmptyString: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tvalues,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\tsubmitCount,\n\t\t\t\t\ttouched,\n\t\t\t\t}) => {\n\t\t\t\t\tthis.setFieldValue = setFieldValue;\n\t\t\t\t\tthis.currentEligibleVoters = _get(values, eligibleVotersPath);\n\t\t\t\t\tthis.workingAddVoter_o = formatVoter(\n\t\t\t\t\t\t_get(values, workingIdentityChainIdPath),\n\t\t\t\t\t\t_get(values, workingWeightPath)\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\n\t\t\t\t\t\t\t<ApolloConsumer>\n\t\t\t\t\t\t\t\t{(client) => {\n\t\t\t\t\t\t\t\t\tthis.apolloClient = client;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\t\tname={eligibleVotersPath}\n\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.arrayHelpers = arrayHelpers;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container className={classes.pad}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Select Voters\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item container xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={selectedListPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, selectedListPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"custom\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Custom List\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"standing\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Standing Parties\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, selectedListPath) === 'custom' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} className={classes.borders}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Voter\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Chain ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingIdentityChainIdPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingIdentityChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingIdentityChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isValidVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.resetAddVoterFields();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Weight\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.isValidVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.resetAddVoterFields();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.resetAddVoterFields();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.isValidVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingIdentityChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.findVoter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.workingAddVoter_o.voterId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) !== -1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Replace'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Add'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, selectedListPath) === 'custom' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={5}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.padLoadVoters}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoad Voters\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingFileNamePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\".csv\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset working chain ID field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingFilePath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.files[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'https://docs.google.com/spreadsheets/d/1vK0277pI7BlGKGRFf93C5wwBb1O0K1KuFH8XkeB9IFI/edit?usp=sharing'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ fontSize: 12 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OpenInNew\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 13,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlign: 'text-top',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Eligible Voters Chain ID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingEligibleChainIdPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset file field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingFilePath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingFileNamePath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// start loading indicator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadingVotersPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadErrorMessagePath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadSuccessMessagePath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handle voter chain ID\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleVoterChainId(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingFileNamePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handle file upload\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleFile(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingFilePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// stop loading indicator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadingVotersPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!REGEX_CHAIN_ID.test(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingEligibleChainIdPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!_get(values, workingFileNamePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLoad\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadingVotersPath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthickness={5}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadErrorMessagePath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadErrorMessagePath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadSuccessMessagePath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, loadSuccessMessagePath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={5} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, selectedListPath) === 'custom' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EligibleVotersList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVoters={_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVotersPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers={arrayHelpers}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessage={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitCount > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof _get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teligibleVotersPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) === 'string' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(errors, eligibleVotersPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.stepperButtons}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleBack}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</ApolloConsumer>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nEligibleVotersForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: '15px',\n\t},\n\tborders: {\n\t\tborderRightStyle: 'solid',\n\t\tborderRightColor: 'lightgray',\n\t\tborderRightWidth: '1px',\n\t\tborderLeftStyle: 'solid',\n\t\tborderLeftColor: 'lightgray',\n\t\tborderLeftWidth: '1px',\n\t\tpadding: '10px',\n\t},\n\tpadLoadVoters: {\n\t\tpadding: '10px',\n\t},\n\tstepperButtons: {\n\t\tmarginLeft: '-15px',\n\t},\n\terrorText: {\n\t\tcolor: 'red',\n\t\tfontSize: '14px',\n\t\tborderColor: 'red',\n\t\tborderStyle: 'solid',\n\t\tpadding: 8,\n\t\twidth: 168,\n\t},\n\tsuccessText: {\n\t\tcolor: 'green',\n\t\tfontSize: '14px',\n\t\tborderColor: 'green',\n\t\tborderStyle: 'solid',\n\t\tpadding: 8,\n\t\twidth: 168,\n\t},\n});\n\nexport default withStyles(styles)(EligibleVotersForm);\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withVote } from '../../context/VoteContext';\nimport { withNetwork } from '../../context/NetworkContext';\nimport { withFactomCli } from '../../context/FactomCliContext';\nimport { withLedger } from '../../context/LedgerContext';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../shared/SectionHeader';\nimport FormTextField from '../../component/form/FormTextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\nimport { computeVoteCreationCost } from 'factom-vote/dist/factom-vote';\nimport { app } from 'factom-identity-lib';\nimport { REGEX_CHAIN_ID } from './VOTE_CONSTANTS';\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\nimport Create from '@material-ui/icons/Create';\nimport { SVGLogo } from '../../component/logo/SVGLogo';\n\n/**\n * Constants\n */\nconst MANUAL_SIG = 'manual';\nconst LEDGER_SIG = 'ledger';\nconst identityChainIDPath = 'identityChainID';\nconst identityKeyPath = 'identityKey';\nconst ecPrivateKeyPath = 'ecPrivateKey';\nconst commitStartBlockPath = 'commitStartBlock';\nconst transactionErrorPath = 'transactionError';\nconst ledgerStatusPath = 'ledgerStatus';\nconst signatureTypePath = 'signatureType';\n\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\n\nconst EXAMPLE_IDENTITY = {\n\tchainId: '039b14a782008c1b1543b1542941756e6f01a0d68372ff61163642382af70fc9',\n\tkey: 'idsec2wH72BNR9QZhTMGDbxwLWGrghZQexZvLTros2wCekkc62N9h7s',\n};\n\nclass SubmitVoteForm extends React.Component {\n\tstate = { voteCreationCost: null };\n\n\tcomponentDidMount = async () => {\n\t\tconst voteData = {\n\t\t\tdefinition: this.props.poll.pollJSON,\n\t\t\tregistrationChainId: this.props.networkController.networkProps\n\t\t\t\t.voteRegistrationChainID,\n\t\t\teligibleVoters: this.props.eligibleVoters,\n\t\t\tidentity: EXAMPLE_IDENTITY,\n\t\t};\n\t\tconst voteCreationCost = await computeVoteCreationCost(voteData);\n\t\tthis.setState({ voteCreationCost });\n\t};\n\n\tvalidateEcPrivateKey = async (value) => {\n\t\tif (!isValidPrivateEcAddress(value)) {\n\t\t\treturn 'Invalid Key';\n\t\t}\n\n\t\tconst balance = await this.props.factomCliController.factomCli.getBalance(\n\t\t\tvalue\n\t\t);\n\n\t\tif (this.state.voteCreationCost > balance) {\n\t\t\treturn 'Insufficient balance of ' + balance + ' Entry Credits.';\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tpoll,\n\t\t\teligibleVoters,\n\t\t\tupdateCreatePollResult,\n\t\t\thandleBack,\n\t\t\thandleNext,\n\t\t\tnetworkController: { networkProps },\n\t\t\tvoteController: { submitVote },\n\t\t\tledgerController: { signMessageRaw },\n\t\t} = this.props;\n\n\t\tconst commitStartBlock = _get(poll, commitStartPath);\n\n\t\tconst currentBlockHeight = this.props.factomCliController.blockHeight;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tidentityChainID: '',\n\t\t\t\t\tidentityKey: '',\n\t\t\t\t\tecPrivateKey: '',\n\t\t\t\t\tcommitStartBlock: commitStartBlock,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\tsignatureType: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\n\n\t\t\t\t\tconst signatureType = _get(values, signatureTypePath);\n\n\t\t\t\t\tconst voteData = {\n\t\t\t\t\t\tdefinition: poll.pollJSON,\n\t\t\t\t\t\tregistrationChainId: networkProps.voteRegistrationChainID,\n\t\t\t\t\t\teligibleVoters,\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (signatureType === MANUAL_SIG) {\n\t\t\t\t\t\t\tvoteData.identity = {\n\t\t\t\t\t\t\t\tchainId: _get(values, identityChainIDPath),\n\t\t\t\t\t\t\t\tkey: _get(values, identityKeyPath),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (signatureType === LEDGER_SIG) {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\tledgerStatusPath,\n\t\t\t\t\t\t\t\t'Connecting to Ledger Nano S'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst ledgerConnected = await this.props.ledgerController.isLedgerConnected();\n\n\t\t\t\t\t\t\tif (ledgerConnected) {\n\t\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t\tledgerStatusPath,\n\t\t\t\t\t\t\t\t\t'Waiting for user to confirm signature two times on Ledger Nano S device.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t'Ledger Nano S Not Found. Please connect your Ledger Nano S and try again.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst ledgerIdentity_o = await this.props.ledgerController.getLedgerIdentityAddress(\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tvoteData.identity = {\n\t\t\t\t\t\t\t\tchainId: ledgerIdentity_o.chainid,\n\t\t\t\t\t\t\t\tkey: ledgerIdentity_o.address,\n\t\t\t\t\t\t\t\tsign: signMessageRaw,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = await submitVote(\n\t\t\t\t\t\t\tvoteData,\n\t\t\t\t\t\t\t_get(values, ecPrivateKeyPath)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconsole.log(result);\n\n\t\t\t\t\t\t// update result data\n\t\t\t\t\t\tupdateCreatePollResult(result);\n\n\t\t\t\t\t\t// proceed to next page\n\t\t\t\t\t\thandleNext();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\tactions.resetForm();\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[signatureTypePath]: Yup.string(),\n\t\t\t\t\t[identityChainIDPath]: Yup.string().when(signatureTypePath, {\n\t\t\t\t\t\tis: MANUAL_SIG,\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.matches(REGEX_CHAIN_ID, {\n\t\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\n\t\t\t\t\t\t\t\texcludeEmptyString: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[identityKeyPath]: Yup.string().when(signatureTypePath, {\n\t\t\t\t\t\tis: MANUAL_SIG,\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\t\tidentityKeyPath,\n\t\t\t\t\t\t\t\t'Invalid Identity Key',\n\t\t\t\t\t\t\t\tapp.isValidSecretIdentityKey\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[commitStartBlockPath]: Yup.number().moreThan(\n\t\t\t\t\t\tcurrentBlockHeight + 2,\n\t\t\t\t\t\t'Commit Start Block must be at least 3 blocks greater than the Current Height. Please go back and update the Commit Start Block to continue.'\n\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitCount,\n\t\t\t\t}) => {\n\t\t\t\t\tlet title = 'Sign Transaction';\n\t\t\t\t\tif (_get(values, signatureTypePath) === LEDGER_SIG) {\n\t\t\t\t\t\ttitle += ' with Ledger Nano S';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{_get(errors, signatureTypePath) && submitCount > 0 ? (\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\n\t\t\t\t\t\t\t\t\t\t\ttext={title + ' *'}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom text={title} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{_isNil(_get(values, signatureTypePath)) && (\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, MANUAL_SIG);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Create\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 17 }}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleAccess={'Manual Entry'}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;Manual Entry\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(transactionErrorPath, null);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(signatureTypePath, LEDGER_SIG);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<SVGLogo\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.ledgerLogo}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;Ledger Nano S\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === MANUAL_SIG && (\n\t\t\t\t\t\t\t\t\t<Grid xs={12} item container>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityChainIDPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Initiator Identity Chain ID *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityChainIDPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityChainIDPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityKeyPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Initiator Identity Private Key *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, identityKeyPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, identityKeyPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} container>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={9} item>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateEcPrivateKey}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid xs={3} item>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.voteCreationCost && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{'Cost: ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.voteCreationCost +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' Entry Credits'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={commitStartBlockPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t\t{msg}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Button onClick={handleBack}>Back</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{_get(values, signatureTypePath) === LEDGER_SIG\n\t\t\t\t\t\t\t\t\t\t\t? 'Sign and Submit'\n\t\t\t\t\t\t\t\t\t\t\t: 'Submit'}\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, ledgerStatusPath) && (\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.ledgerStatus}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, ledgerStatusPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nSubmitVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tstepperButtons: {\n\t\tmarginLeft: '-15px',\n\t},\n\terrorText: { color: 'red', fontSize: '16px' },\n\tledgerStatus: { display: 'inline-block', paddingLeft: '10px' },\n\tledgerLogo: { height: 16 },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithVote,\n\twithLedger,\n\twithStyles(styles)\n);\n\nexport default enhancer(SubmitVoteForm);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport SubmitVoteForm from './SubmitVoteForm';\nimport VoteSummary from '../shared/VoteSummary';\n\nfunction PreviewVote(props) {\n\tconst { classes } = props;\n\n\treturn (\n\t\t<Grid container className={classes.pad}>\n\t\t\t<VoteSummary poll={props.poll} eligibleVoters={props.eligibleVoters} />\n\t\t\t<Grid item xs={12} className={classes.submitVoteForm}>\n\t\t\t\t<SubmitVoteForm\n\t\t\t\t\tpoll={props.poll}\n\t\t\t\t\teligibleVoters={props.eligibleVoters}\n\t\t\t\t\tupdateCreatePollResult={props.updateCreatePollResult}\n\t\t\t\t\thandleNext={props.handleNext}\n\t\t\t\t\thandleBack={props.handleBack}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nPreviewVote.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: 15,\n\t},\n\tsubmitVoteForm: {\n\t\tmarginTop: '25px',\n\t},\n});\n\nexport default withStyles(styles)(PreviewVote);\n","import React from 'react';\nimport { Formik, Form, FieldArray, Field } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Clear from '@material-ui/icons/Clear';\nimport LabelImportant from '@material-ui/icons/LabelImportant';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../vote/shared/SectionHeader';\nimport FormTextField from '../component/form/FormTextField';\nimport FormSelectField from '../component/form/FormSelectField';\nimport { withLedger } from '../context/LedgerContext';\nimport { withIdentity } from '../context/IdentityContext';\nimport { withVote } from '../context/VoteContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isValidPrivateEcAddress } from 'factom/dist/factom';\nimport ExplorerLink from '../vote/shared/ExplorerLink';\n\n/**\n * Constants\n */\nconst transactionErrorPath = 'transactionError';\nconst workingNamePath = 'workingName';\nconst numberPath = 'number';\nconst identityNamesPath = 'identityNames';\nconst ecPrivateKeyPath = 'ecPrivateKey';\nconst statusPath = 'status';\n\nconst identityChainIdPath = 'identityChainId';\nconst entryHashPath = 'entryHash';\n\nconst MAX_NUMBER = 10;\nlet NUMBER_VALUES = new Array(MAX_NUMBER);\nfor (var i = 0; i < MAX_NUMBER; i++) {\n\tNUMBER_VALUES[i] = { value: i + 1, text: i + 1 + '' };\n}\n\nclass CreateLedgerIdForm extends React.Component {\n\thandleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tvalidateIdentityName = (value) => {\n\t\tlet error;\n\n\t\tif (this.hasItem(value, this.identityNames)) {\n\t\t\terror = 'Duplicate';\n\t\t}\n\n\t\treturn error;\n\t};\n\n\tvalidateEcPrivateKey = async (value) => {\n\t\tif (!isValidPrivateEcAddress(value)) {\n\t\t\treturn 'Invalid Key';\n\t\t}\n\t};\n\n\thasItem = (item, array) => array.findIndex((value) => value === item) !== -1;\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tledgerController: { getLedgerAddresses },\n\t\t\tidentityController: { registerIdentity },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tworkingName: '',\n\t\t\t\t\tidentityNames: [],\n\t\t\t\t\tnumber: '',\n\t\t\t\t\tecPrivateKey: '',\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\tstatus: null,\n\t\t\t\t\tidentityChainId: null,\n\t\t\t\t\tentryHash: null,\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\tnumber: Yup.string().required('Required'),\n\t\t\t\t\tidentityNames: Yup.array().required('Required *'),\n\t\t\t\t})}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\n\n\t\t\t\t\tactions.setFieldValue(statusPath, 'Connecting to Ledger Nano S');\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// setup identity data\n\t\t\t\t\t\tlet idPubKeys = await getLedgerAddresses(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t_get(values, numberPath),\n\t\t\t\t\t\t\t'identity'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tidPubKeys = idPubKeys.map((value) => value.address);\n\n\t\t\t\t\t\tlet reg_id_args = {\n\t\t\t\t\t\t\tidPubKeys,\n\t\t\t\t\t\t\tidNames: _get(values, identityNamesPath),\n\t\t\t\t\t\t\tecPrivateKey: _get(values, ecPrivateKeyPath),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\tstatusPath,\n\t\t\t\t\t\t\t'Registering new identity to Factom blockchain'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// create identity and get back hash\n\t\t\t\t\t\tconst result = await registerIdentity(reg_id_args);\n\n\t\t\t\t\t\t// success\n\t\t\t\t\t\tconst chainId = result.chainId;\n\t\t\t\t\t\tconst entryHash = result.entryHash;\n\t\t\t\t\t\tactions.setFieldValue(identityChainIdPath, chainId);\n\t\t\t\t\t\tactions.setFieldValue(entryHashPath, entryHash);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\tawait actions.resetForm();\n\t\t\t\t\t\tawait actions.setFieldValue(\n\t\t\t\t\t\t\tidentityNamesPath,\n\t\t\t\t\t\t\t_get(values, identityNamesPath)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait actions.setFieldValue(numberPath, _get(values, numberPath));\n\t\t\t\t\t\tawait actions.setFieldValue(\n\t\t\t\t\t\t\tecPrivateKeyPath,\n\t\t\t\t\t\t\t_get(values, ecPrivateKeyPath)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitCount,\n\t\t\t\t\thandleReset,\n\t\t\t\t}) => {\n\t\t\t\t\tthis.identityNames = _get(values, identityNamesPath);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"1. Select Identity Names\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{submitCount > 0 && (\n\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\tname={identityNamesPath}\n\t\t\t\t\t\t\t\t\t\t\trender={({ form }) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst error = _get(form.errors, identityNamesPath);\n\t\t\t\t\t\t\t\t\t\t\t\treturn error ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{error}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Paper elevation={2} className={classes.paper}>\n\t\t\t\t\t\t\t\t\t\t<List className={classes.identityNameList} dense>\n\t\t\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\t\t\tname={identityNamesPath}\n\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingNamePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateIdentityName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Name *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingNamePath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingNamePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value.trim() &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateIdentityName(e.target.value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingNamePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingNamePath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateIdentityName(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingNamePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingNamePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingNamePath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, workingNamePath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, identityNamesPath).length > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? _get(values, identityNamesPath).map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutters\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.identityNameListItem}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={option} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.remove(index);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Clear />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"2. Select number of Ledger keys to activate\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\tname={numberPath}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Number of keys *\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, numberPath) && _get(touched, numberPath)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twidth={215}\n\t\t\t\t\t\t\t\t\t\toptions={NUMBER_VALUES}\n\t\t\t\t\t\t\t\t\t\tminWidth=\"200px\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<SectionHeader text=\"3. Enter payment information\" />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\tname={ecPrivateKeyPath}\n\t\t\t\t\t\t\t\t\t\tlabel=\"EC Private Key *\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, ecPrivateKeyPath) &&\n\t\t\t\t\t\t\t\t\t\t\t_get(touched, ecPrivateKeyPath)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvalidate={this.validateEcPrivateKey}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, identityChainIdPath)) ? (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\n\t\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Success!\" color=\"green\" />\n\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\tYour new Factom identity is pending confirmation. The\n\t\t\t\t\t\t\t\t\t\t\t\tentry will be visible in 10-15 minutes, after being\n\t\t\t\t\t\t\t\t\t\t\t\tincluded in the next block currently being processed by\n\t\t\t\t\t\t\t\t\t\t\t\tthe Factom blockchain.\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">\n\t\t\t\t\t\t\t\t\t\t\t\tRemember to copy down your Identity Chain ID.\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<ExplorerLink\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Chain ID\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, identityChainIdPath)}\n\t\t\t\t\t\t\t\t\t\t\t\thref={entryHashURL + _get(values, entryHashPath)}\n\t\t\t\t\t\t\t\t\t\t\t\textend={true}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCreate Identity\n\t\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, statusPath) && (\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.status}>\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, statusPath)}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nCreateLedgerIdForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '16px' },\n\tstatus: { display: 'inline-block', paddingLeft: '10px' },\n\tidentityNameList: {\n\t\toverflow: 'auto',\n\t},\n\tidentityNameListItem: {\n\t\tpadding: '0px',\n\t\twordWrap: 'break-word',\n\t},\n\tpaper: { padding: 15, width: '50%' },\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\t\tpadding: '10px',\n\t},\n\tsuccessIcon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t},\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithVote,\n\twithIdentity,\n\twithLedger,\n\twithStyles(styles)\n);\n\nexport default enhancer(CreateLedgerIdForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withNetwork } from '../../context/NetworkContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport SectionHeader from '../shared/SectionHeader';\nimport ExplorerLink from '../shared/ExplorerLink';\n\nfunction FinalStep(props) {\n\tconst {\n\t\tclasses,\n\t\tcreatePollResult,\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tconst entryHashURL = networkProps.explorerURL + '/entry?hash=';\n\n\treturn (\n\t\t<Grid className={classes.pad} container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<SectionHeader text=\"Setup Complete!\" color=\"green\" />\n\n\t\t\t\t<Typography gutterBottom>\n\t\t\t\t\tYour poll is pending confirmation. The entries will be visible in\n\t\t\t\t\t10-15 minutes, after being included in the next block currently being\n\t\t\t\t\tprocessed by the Factom blockchain.\n\t\t\t\t</Typography>\n\t\t\t\t<br />\n\t\t\t</Grid>\n\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ExplorerLink\n\t\t\t\t\tlabel=\"Eligible Voters\"\n\t\t\t\t\tvalue={createPollResult.eligibleVoters.entryHash}\n\t\t\t\t\thref={entryHashURL + createPollResult.eligibleVoters.entryHash}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ExplorerLink\n\t\t\t\t\tlabel=\"Vote Configuration\"\n\t\t\t\t\tvalue={createPollResult.vote.entryHash}\n\t\t\t\t\thref={entryHashURL + createPollResult.vote.entryHash}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ExplorerLink\n\t\t\t\t\tlabel=\"Vote Registration\"\n\t\t\t\t\tvalue={createPollResult.registration.entryHash}\n\t\t\t\t\thref={entryHashURL + createPollResult.registration.entryHash}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: '15px',\n\t},\n});\n\nFinalStep.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\n\nexport default enhancer(FinalStep);\n","import React from 'react';\n\nexport default class VoteConfiguration extends React.Component {\n\tstate = {\n\t\tpollForm: {\n\t\t\tpollJSON: {\n\t\t\t\tproposal: {\n\t\t\t\t\ttitle: '',\n\t\t\t\t\ttext: '',\n\t\t\t\t\texternalRef: {\n\t\t\t\t\t\thref: '',\n\t\t\t\t\t\thash: {\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\talgo: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tvote: {\n\t\t\t\t\tphasesBlockHeights: {\n\t\t\t\t\t\tcommitStart: '',\n\t\t\t\t\t\tcommitEnd: '',\n\t\t\t\t\t\trevealEnd: '',\n\t\t\t\t\t},\n\t\t\t\t\teligibleVotersChainId: null,\n\t\t\t\t\ttype: '',\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\tallowAbstention: '',\n\t\t\t\t\t\tcomputeResultsAgainst: '',\n\t\t\t\t\t\tminOptions: '',\n\t\t\t\t\t\tmaxOptions: '',\n\t\t\t\t\t\twinnerCriteria: {},\n\t\t\t\t\t\tacceptanceCriteria: {},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tformFields: {\n\t\t\t\tcommitStartDate: '',\n\t\t\t\tcommitEndDate: '',\n\t\t\t\trevealEndDate: '',\n\t\t\t\tvoteTypeText: '',\n\t\t\t\tquestionSource: 'text',\n\t\t\t\tworkingText: '',\n\t\t\t\tworkingHref: '',\n\t\t\t\tworkingHashValue: '',\n\t\t\t\tworkingHashAlgo: '',\n\t\t\t\tworkingOption: '',\n\t\t\t\tcheckedTurnout: false,\n\t\t\t\tenableMinSupportConfig: true,\n\t\t\t\tworkingWeightMinTurnout: '',\n\t\t\t\tworkingUnweightMinTurnout: '',\n\t\t\t\tworkingWeightMinSupport: '',\n\t\t\t\tworkingUnweightMinSupport: '',\n\t\t\t\tworkingMinSupportOption: '',\n\t\t\t},\n\t\t},\n\t\teligibleVotersForm: {\n\t\t\teligibleVoters: [],\n\t\t\tformFields: {\n\t\t\t\tselectedList: 'custom',\n\t\t\t\tworkingIdentityChainId: '',\n\t\t\t\tworkingWeight: '',\n\t\t\t\tworkingEligibleChainId: '',\n\t\t\t\tloadingVoters: false,\n\t\t\t\tloadErrorMessage: '',\n\t\t\t\tloadSuccessMessage: '',\n\t\t\t\tworkingFileName: '',\n\t\t\t\tworkingFile: '',\n\t\t\t},\n\t\t},\n\t\tcreatePollResult: {},\n\t};\n\n\tupdatePoll = (form) => {\n\t\tthis.setState({ pollForm: form });\n\t};\n\n\tupdateParticipants = (form) => {\n\t\tthis.setState({ eligibleVotersForm: form });\n\t};\n\n\tupdateCreatePollResult = (result) => {\n\t\tthis.setState({ createPollResult: result });\n\t};\n\n\trender() {\n\t\treturn this.props.children({\n\t\t\t...this.state,\n\t\t\tupdatePoll: this.updatePoll,\n\t\t\tupdateParticipants: this.updateParticipants,\n\t\t\tupdateCreatePollResult: this.updateCreatePollResult,\n\t\t});\n\t}\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Field, FastField, ErrorMessage } from 'formik';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst FormSelectField = ({\n\tclasses,\n\tdisabled = false,\n\terror = false,\n\tisNotFast,\n\tlabel,\n\tname,\n\tonChange,\n\toptions,\n\tminWidth,\n\tvalidate,\n}) => {\n\tconst FieldType = isNotFast ? Field : FastField;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FieldType name={name} {...(validate ? { validate } : {})}>\n\t\t\t\t{({ field }) => (\n\t\t\t\t\t<FormControl {...{ disabled, error }}>\n\t\t\t\t\t\t<InputLabel htmlFor={name}>{label}</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t{...(onChange ? { onChange } : {})}\n\t\t\t\t\t\t\tstyle={{ minWidth }}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tid: name,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{options.map((value, index) => (\n\t\t\t\t\t\t\t\t<MenuItem key={index} value={value.value}>\n\t\t\t\t\t\t\t\t\t{value.text}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t{/* <FormHelperText /> */}\n\t\t\t\t\t</FormControl>\n\t\t\t\t)}\n\t\t\t</FieldType>\n\t\t\t<ErrorMessage\n\t\t\t\tname={name}\n\t\t\t\trender={(msg) => <div className={classes.errorText}>{msg}</div>}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '13px' },\n});\n\nexport default withStyles(styles)(FormSelectField);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport _get from 'lodash/get';\nimport _omit from 'lodash/omit';\nimport _isEmpty from 'lodash/isEmpty';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport _isFinite from 'lodash/isFinite';\nimport PropTypes from 'prop-types';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport LabelImportant from '@material-ui/icons/LabelImportant';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Clear from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../shared/SectionHeader';\nimport FormTextField from '../../component/form/FormTextField';\nimport FormSelectField from '../../component/form/FormSelectField';\nimport { withNetwork } from '../../context/NetworkContext';\nimport { withFactomCli } from '../../context/FactomCliContext';\nimport * as moment from 'moment';\n\nimport {\n\tBINARY_CONFIG,\n\tSINGLE_OPTION_CONFIG,\n\tAPPROVAL_CONFIG,\n\tINSTANT_RUNOFF_CONFIG,\n\tALL_ELIGIBLE_VOTERS,\n\tPARTICIPANTS_ONLY,\n\tHASH_ALGO_VALUES,\n} from './VOTE_CONSTANTS';\n\n/**\n * Constants\n */\nconst VOTE_TYPE_VALUES = [\n\t{ value: BINARY_CONFIG.name, text: BINARY_CONFIG.name },\n\t{ value: SINGLE_OPTION_CONFIG.name, text: SINGLE_OPTION_CONFIG.name },\n\t{ value: APPROVAL_CONFIG.name, text: APPROVAL_CONFIG.name },\n\t{ value: INSTANT_RUNOFF_CONFIG.name, text: INSTANT_RUNOFF_CONFIG.name },\n];\n\nconst COMPUTE_AGAINST_VALUES = [\n\t{ value: ALL_ELIGIBLE_VOTERS.value, text: ALL_ELIGIBLE_VOTERS.text },\n\t{ value: PARTICIPANTS_ONLY.value, text: PARTICIPANTS_ONLY.text },\n];\n\nconst ABSTENTION_VALUES = [\n\t{ value: true, text: 'True' },\n\t{ value: false, text: 'False' },\n];\n\nconst TITLE_MAX_LENGTH = 32;\nconst QUESTION_MAX_LENGTH = 250;\n\n// poll config fields\nconst titlePath = 'pollJSON.proposal.title';\nconst commitStartPath = 'pollJSON.vote.phasesBlockHeights.commitStart';\nconst commitEndPath = 'pollJSON.vote.phasesBlockHeights.commitEnd';\nconst revealEndPath = 'pollJSON.vote.phasesBlockHeights.revealEnd';\nconst proposalPath = 'pollJSON.proposal';\nconst externalRefPath = 'pollJSON.proposal.externalRef';\nconst textPath = 'pollJSON.proposal.text';\nconst voteTypePath = 'pollJSON.vote.type';\nconst minOptionsPath = 'pollJSON.vote.config.minOptions';\nconst maxOptionsPath = 'pollJSON.vote.config.maxOptions';\nconst configPath = 'pollJSON.vote.config';\nconst optionsPath = 'pollJSON.vote.config.options';\nconst abstentionPath = 'pollJSON.vote.config.allowAbstention';\nconst computeResultsAgainstPath = 'pollJSON.vote.config.computeResultsAgainst';\nconst acceptanceCriteriaPath = 'pollJSON.vote.config.acceptanceCriteria';\nconst winnerCriteriaPath = 'pollJSON.vote.config.winnerCriteria';\nconst minSupportPath = 'pollJSON.vote.config.winnerCriteria.minSupport';\n\n// form specific fields\nconst commitStartDatePath = 'formFields.commitStartDate';\nconst commitEndDatePath = 'formFields.commitEndDate';\nconst revealEndDatePath = 'formFields.revealEndDate';\nconst voteTypeTextPath = 'formFields.voteTypeText';\nconst questionSourcePath = 'formFields.questionSource';\nconst workingOptionPath = 'formFields.workingOption';\nconst workingHrefPath = 'formFields.workingHref';\nconst workingHashValuePath = 'formFields.workingHashValue';\nconst workingHashAlgoPath = 'formFields.workingHashAlgo';\nconst workingTextPath = 'formFields.workingText';\nconst checkedTurnoutPath = 'formFields.checkedTurnout';\nconst workingWeightMinTurnoutPath = 'formFields.workingWeightMinTurnout';\nconst workingUnweightMinTurnoutPath = 'formFields.workingUnweightMinTurnout';\nconst requiredSupportPath = 'formFields.requiredSupport';\nconst workingWeightMinSupportPath = 'formFields.workingWeightMinSupport';\nconst workingUnweightMinSupportPath = 'formFields.workingUnweightMinSupport';\nconst workingMinSupportOptionPath = 'formFields.workingMinSupportOption';\nconst enableMinSupportConfigPath = 'formFields.enableMinSupportConfig';\n\nclass CreateVoteForm extends React.Component {\n\tasync componentDidMount() {\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\thandleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tvalidateWriteHeight = (currentHeight, writeHeight) => {\n\t\tlet validate = true;\n\n\t\tif (isNaN(writeHeight)) {\n\t\t\tvalidate = false;\n\t\t}\n\n\t\tif (writeHeight < currentHeight) {\n\t\t\tvalidate = false;\n\t\t}\n\n\t\treturn validate;\n\t};\n\n\tvalidateWorkingOption = (value, optionList) => {\n\t\tlet error;\n\n\t\tif (this.hasOption(value, optionList)) {\n\t\t\treturn 'Duplicate';\n\t\t}\n\n\t\treturn error;\n\t};\n\n\tvalidateComputeResultsAgainst = (value) => {\n\t\tif (this.enableMinSupportConfig && !value) {\n\t\t\treturn 'Required';\n\t\t}\n\t};\n\n\thasOption = (option, optionList) =>\n\t\toptionList.findIndex((value) => value === option) !== -1;\n\n\thandleTime = (value, path) => {\n\t\tthis.setFieldValue(path, this.calculateWriteHeight(value));\n\t};\n\n\thandleBlock = (value, path) => {\n\t\tif (\n\t\t\tthis.validateWriteHeight(\n\t\t\t\tthis.props.factomCliController.blockHeight,\n\t\t\t\tvalue\n\t\t\t)\n\t\t) {\n\t\t\tthis.setFieldValue(path, this.calculateWriteTimeValue(value));\n\t\t} else {\n\t\t\tthis.setFieldValue(path, '');\n\t\t}\n\t};\n\n\tremoveOption = (\n\t\toption,\n\t\tindex,\n\t\tworkingMinSupportOption,\n\t\tarrayHelpers,\n\t\toptionsLength,\n\t\tminOptions,\n\t\tmaxOptions,\n\t\tvoteTypeText\n\t) => {\n\t\tarrayHelpers.remove(index);\n\t\tif (workingMinSupportOption === option) {\n\t\t\tthis.setFieldValue(workingMinSupportOptionPath, '');\n\t\t}\n\n\t\tif (\n\t\t\tvoteTypeText !== BINARY_CONFIG.name &&\n\t\t\tvoteTypeText !== SINGLE_OPTION_CONFIG.name\n\t\t) {\n\t\t\t// reset min/max options if needed\n\t\t\tif (minOptions > optionsLength) {\n\t\t\t\tthis.setFieldValue(minOptionsPath, '');\n\t\t\t}\n\t\t\tif (maxOptions > optionsLength) {\n\t\t\t\tthis.setFieldValue(maxOptionsPath, '');\n\t\t\t}\n\t\t}\n\t};\n\n\tgetMinimumOptions = (optionsList) => {\n\t\tlet minOptionsList = [];\n\n\t\tfor (let ii = 1; ii <= optionsList.length; ii++) {\n\t\t\tminOptionsList.push({ value: ii, text: ii });\n\t\t}\n\n\t\treturn minOptionsList;\n\t};\n\n\tgetMaximumOptions = (optionsList, minOptionLength = 1) => {\n\t\tlet maxOptionsList = [];\n\n\t\tfor (let ii = minOptionLength; ii <= optionsList.length; ii++) {\n\t\t\tmaxOptionsList.push({ value: ii, text: ii });\n\t\t}\n\n\t\treturn maxOptionsList;\n\t};\n\n\tcalculateWriteTimeValue = (writeHeight) => {\n\t\tlet result = '';\n\t\ttry {\n\t\t\tconst eventTimestamp = this.props.factomCliController.getEstimatedBlockTimestamp(\n\t\t\t\twriteHeight\n\t\t\t);\n\t\t\tconst eventDate = moment(eventTimestamp).utc();\n\n\t\t\t// //format for date field\n\t\t\tresult = eventDate.toISOString().replace('Z', '');\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcalculateWriteHeight = (dateTime) => {\n\t\tconst currentBlock = this.props.factomCliController.blockHeight;\n\n\t\tconst currentDate = moment\n\t\t\t.unix(this.props.factomCliController.blockTimestamp)\n\t\t\t.utc();\n\n\t\tconst writeDate = moment(dateTime.concat('Z')).utc();\n\n\t\tconst diffMins = writeDate.diff(currentDate, 'minutes');\n\n\t\tconst diffBlocks = Math.floor(diffMins / 10);\n\n\t\tconst result = currentBlock + diffBlocks;\n\n\t\treturn result;\n\t};\n\n\tsupportsMinSupportCriteria = (voteType) => {\n\t\tlet result = true;\n\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\n\t\t\tresult = false;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tsupportsWeightedMinTurnoutCriteria = (voteType) => {\n\t\tlet result = true;\n\n\t\tif (voteType === INSTANT_RUNOFF_CONFIG.type) {\n\t\t\tresult = false;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tpollForm,\n\t\t\tupdatePoll,\n\t\t\tclasses,\n\t\t\tfactomCliController: { blockHeight },\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={pollForm}\n\t\t\t\tvalidateOnChange={false}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\tpollJSON: Yup.object().shape({\n\t\t\t\t\t\tproposal: Yup.object().shape({\n\t\t\t\t\t\t\ttitle: Yup.string().required('Required'),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tvote: Yup.object().shape({\n\t\t\t\t\t\t\tphasesBlockHeights: Yup.object().shape({\n\t\t\t\t\t\t\t\tcommitStart: Yup.number()\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t\t\t.moreThan(\n\t\t\t\t\t\t\t\t\t\tblockHeight + 2,\n\t\t\t\t\t\t\t\t\t\t'Must be at least 3 blocks greater than Current Height'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcommitEnd: Yup.number()\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t\t\t.moreThan(\n\t\t\t\t\t\t\t\t\t\tYup.ref('commitStart'),\n\t\t\t\t\t\t\t\t\t\t'Must be greater than Commit Start Block'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trevealEnd: Yup.number()\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t\t\t.moreThan(\n\t\t\t\t\t\t\t\t\t\tYup.ref('commitEnd'),\n\t\t\t\t\t\t\t\t\t\t'Must be greater than Commit End Block'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tconfig: Yup.object().shape({\n\t\t\t\t\t\t\t\toptions: Yup.array()\n\t\t\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t\t\t.min(2, '* Select at least two options'),\n\t\t\t\t\t\t\t\tminOptions: Yup.number()\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t\t\t.required('Required'),\n\t\t\t\t\t\t\t\tmaxOptions: Yup.number()\n\t\t\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t\t\t.required('Required'),\n\t\t\t\t\t\t\t\tallowAbstention: Yup.string().required('Required'),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\tformFields: Yup.object().shape({\n\t\t\t\t\t\tenableMinSupportConfig: Yup.boolean(),\n\t\t\t\t\t\tworkingWeightMinSupport: Yup.number()\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t.max(1, 'Too high')\n\t\t\t\t\t\t\t.min(0, 'Too low'),\n\t\t\t\t\t\tworkingUnweightMinSupport: Yup.number()\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t.max(1, 'Too high')\n\t\t\t\t\t\t\t.min(0, 'Too low'),\n\t\t\t\t\t\trequiredSupport: Yup.mixed().test(\n\t\t\t\t\t\t\t'support-test',\n\t\t\t\t\t\t\t'* Select weighted and/or unweighted ratio',\n\t\t\t\t\t\t\tfunction(value) {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tworkingWeightMinSupport,\n\t\t\t\t\t\t\t\t\tworkingUnweightMinSupport,\n\t\t\t\t\t\t\t\t\tenableMinSupportConfig,\n\t\t\t\t\t\t\t\t} = this.parent;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tenableMinSupportConfig &&\n\t\t\t\t\t\t\t\t\t!_isFinite(workingWeightMinSupport) &&\n\t\t\t\t\t\t\t\t\t!_isFinite(workingUnweightMinSupport)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvoteTypeText: Yup.string().required('Required'),\n\t\t\t\t\t\tquestionSource: Yup.string(),\n\t\t\t\t\t\tworkingText: Yup.string().when('questionSource', {\n\t\t\t\t\t\t\tis: 'text',\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tworkingHref: Yup.string().when('questionSource', {\n\t\t\t\t\t\t\tis: 'href',\n\t\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t\t.url('Must be a valid URL'),\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tworkingHashValue: Yup.string().when('questionSource', {\n\t\t\t\t\t\t\tis: 'href',\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tworkingHashAlgo: Yup.string().when('questionSource', {\n\t\t\t\t\t\t\tis: 'href',\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tworkingMinSupportOption: Yup.string().when('voteTypeText', {\n\t\t\t\t\t\t\tis: BINARY_CONFIG.name,\n\t\t\t\t\t\t\tthen: Yup.string().required('Required'),\n\t\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tworkingWeightMinTurnout: Yup.number()\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t.max(1, 'Too high')\n\t\t\t\t\t\t\t.min(0, 'Too low'),\n\t\t\t\t\t\tworkingUnweightMinTurnout: Yup.number()\n\t\t\t\t\t\t\t.transform((cv) => (isNaN(cv) ? undefined : cv))\n\t\t\t\t\t\t\t.max(1, 'Too high')\n\t\t\t\t\t\t\t.min(0, 'Too low'),\n\t\t\t\t\t\tcheckedTurnout: Yup.boolean().test(\n\t\t\t\t\t\t\t'turnout-test',\n\t\t\t\t\t\t\t'* Select a Minimum Turnout ratio',\n\t\t\t\t\t\t\tfunction(value) {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tworkingWeightMinTurnout,\n\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnout,\n\t\t\t\t\t\t\t\t} = this.parent;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tvalue &&\n\t\t\t\t\t\t\t\t\t!_isFinite(workingWeightMinTurnout) &&\n\t\t\t\t\t\t\t\t\t!_isFinite(workingUnweightMinTurnout)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t),\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t/**\n\t\t\t\t\t * Handle text vs externalRef\n\t\t\t\t\t */\n\t\t\t\t\tif (_get(values, questionSourcePath) === 'text') {\n\t\t\t\t\t\t// delete href\n\t\t\t\t\t\tvalues = _omit(values, externalRefPath);\n\n\t\t\t\t\t\t// add text config\n\t\t\t\t\t\t_get(values, proposalPath).text = _get(values, workingTextPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// delete text\n\t\t\t\t\t\tvalues = _omit(values, textPath);\n\n\t\t\t\t\t\t// add externalRef config\n\t\t\t\t\t\t_get(values, proposalPath).externalRef = {\n\t\t\t\t\t\t\thref: _get(values, workingHrefPath),\n\t\t\t\t\t\t\thash: {\n\t\t\t\t\t\t\t\tvalue: _get(values, workingHashValuePath),\n\t\t\t\t\t\t\t\talgo: _get(values, workingHashAlgoPath),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Handle Acceptance Criteria\n\t\t\t\t\t */\n\t\t\t\t\tif (_get(values, checkedTurnoutPath)) {\n\t\t\t\t\t\t// reset acceptance criteria\n\t\t\t\t\t\t_get(values, configPath).acceptanceCriteria = { minTurnout: {} };\n\n\t\t\t\t\t\t// handle weighted turnout\n\t\t\t\t\t\tif (_isFinite(_get(values, workingWeightMinTurnoutPath))) {\n\t\t\t\t\t\t\t_get(values, acceptanceCriteriaPath).minTurnout.weighted = _get(\n\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle unweighted turnout\n\t\t\t\t\t\tif (_isFinite(_get(values, workingUnweightMinTurnoutPath))) {\n\t\t\t\t\t\t\t_get(values, acceptanceCriteriaPath).minTurnout.unweighted = _get(\n\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no acceptance criteria\n\t\t\t\t\t\tvalues = _omit(values, acceptanceCriteriaPath);\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Handle Winner Criteria\n\t\t\t\t\t */\n\t\t\t\t\tif (_get(values, enableMinSupportConfigPath)) {\n\t\t\t\t\t\t// reset winner Criteria\n\t\t\t\t\t\t_get(values, configPath).winnerCriteria = { minSupport: {} };\n\n\t\t\t\t\t\tlet winnerCriteriaOption;\n\t\t\t\t\t\tif (_get(values, voteTypeTextPath) === BINARY_CONFIG.name) {\n\t\t\t\t\t\t\t// add criteria for specific option\n\t\t\t\t\t\t\twinnerCriteriaOption = _get(values, workingMinSupportOptionPath);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twinnerCriteriaOption = '*';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_get(values, minSupportPath)[winnerCriteriaOption] = {};\n\n\t\t\t\t\t\t// handle weighted support\n\t\t\t\t\t\tif (_isFinite(_get(values, workingWeightMinSupportPath))) {\n\t\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport[\n\t\t\t\t\t\t\t\twinnerCriteriaOption\n\t\t\t\t\t\t\t].weighted = _get(values, workingWeightMinSupportPath);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handle unweighted support\n\t\t\t\t\t\tif (_isFinite(_get(values, workingUnweightMinSupportPath))) {\n\t\t\t\t\t\t\t_get(values, winnerCriteriaPath).minSupport[\n\t\t\t\t\t\t\t\twinnerCriteriaOption\n\t\t\t\t\t\t\t].unweighted = _get(values, workingUnweightMinSupportPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no winner criteria\n\t\t\t\t\t\tvalues = _omit(values, winnerCriteriaPath);\n\t\t\t\t\t\tvalues = _omit(values, computeResultsAgainstPath);\n\t\t\t\t\t}\n\n\t\t\t\t\t// update Poll\n\t\t\t\t\tupdatePoll(values);\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\trender={({\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tsubmitCount,\n\t\t\t\t\tsetFieldTouched,\n\t\t\t\t\tsetFieldError,\n\t\t\t\t}) => {\n\t\t\t\t\tthis.setFieldValue = setFieldValue;\n\n\t\t\t\t\tthis.enableMinSupportConfig = _get(\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tenableMinSupportConfigPath\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form onKeyPress={this.handleKeyPress}>\n\t\t\t\t\t\t\t<Grid container className={classes.pad}>\n\t\t\t\t\t\t\t\t<Grid container item spacing={16} xs={12}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom={true}\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Configure Poll\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid container item xs={5}>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={titlePath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Title *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, titlePath) && _get(touched, titlePath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength={TITLE_MAX_LENGTH}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\tname={voteTypeTextPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Vote Type *\"\n\t\t\t\t\t\t\t\t\t\t\t\toptions={VOTE_TYPE_VALUES}\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, voteTypeTextPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, voteTypeTextPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//update question type\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t//update dependent fields\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.target.value;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingMinSupportOptionPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet voteType;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newValue === BINARY_CONFIG.name) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = BINARY_CONFIG.type;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.numOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.numOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// abstention not allowed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(abstentionPath, false);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// max two options allowed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_get(values, optionsPath).length > 2) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(optionsPath, []);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === SINGLE_OPTION_CONFIG.name) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = SINGLE_OPTION_CONFIG.type;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.numOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSINGLE_OPTION_CONFIG.numOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === APPROVAL_CONFIG.name) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = APPROVAL_CONFIG.type;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(minOptionsPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(maxOptionsPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (newValue === INSTANT_RUNOFF_CONFIG.name) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteType = INSTANT_RUNOFF_CONFIG.type;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(voteTypePath, voteType);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(minOptionsPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(maxOptionsPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingWeightMinTurnoutPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// reset minSupport form fields\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!this.supportsMinSupportCriteria(voteType)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(enableMinSupportConfigPath, false);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove compute results against\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(computeResultsAgainstPath, '');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove weight/unweight min support form values\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingWeightMinSupportPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingUnweightMinSupportPath, '');\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove min support option form value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingMinSupportOptionPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(enableMinSupportConfigPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\tname={abstentionPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Allow Abstention *\"\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\toptions={ABSTENTION_VALUES}\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, abstentionPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, abstentionPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypePath) === BINARY_CONFIG.type\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, enableMinSupportConfigPath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={computeResultsAgainstPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={this.validateComputeResultsAgainst}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Compute Results Against *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={COMPUTE_AGAINST_VALUES}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, computeResultsAgainstPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, computeResultsAgainstPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<Grid container item xs={7}>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.blockFields}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={commitStartPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Commit Start Block *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, commitStartPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, commitStartPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleBlock(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommitStartDatePath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={commitStartDatePath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Estimated Date (UTC)\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\t\t\t\tshrink={true}\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\twidth={220}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTime(e.target.value, commitStartPath);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched(commitStartPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.blockFields}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={commitEndPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Commit End Block *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, commitEndPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, commitEndPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleBlock(e.target.value, commitEndDatePath);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={commitEndDatePath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Estimated Date (UTC)\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\t\t\t\tshrink={true}\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\twidth={220}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTime(e.target.value, commitEndPath);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched(commitEndPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.blockFields}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={revealEndPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Reveal End Block *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, revealEndPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, revealEndPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleBlock(e.target.value, revealEndDatePath);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={revealEndDatePath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Estimated Date (UTC)\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\t\t\t\tshrink={true}\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\twidth={220}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleTime(e.target.value, revealEndPath);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched(revealEndPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ height: '48px' }} />\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom={true} text=\"Question\" />\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\t\t\tname={questionSourcePath}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={_get(values, questionSourcePath)}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.target.value === 'text') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHrefPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHashValuePath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingHashAlgoPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingTextPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Plain Text\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.raiseRadio}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"href\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"External Proposal\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t{_get(values, questionSourcePath) === 'text' && (\n\t\t\t\t\t\t\t\t\t\t<Grid item container xs={9}>\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={workingTextPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question *\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingTextPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingTextPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength={QUESTION_MAX_LENGTH}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t{_get(values, questionSourcePath) === 'href' && (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={9} container>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingHrefPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"URL Link *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHrefPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHrefPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingHashAlgoPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Hash Algorithm *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions={HASH_ALGO_VALUES}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHashAlgoPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHashAlgoPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth={182}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingHashValuePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Hash Value *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingHashValuePath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingHashValuePath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container spacing={8} item xs={12}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<SectionHeader disableGutterBottom={true} text=\"Answers\" />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{submitCount > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\tname={optionsPath}\n\t\t\t\t\t\t\t\t\t\t\t\trender={({ form }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst error = _get(form.errors, optionsPath);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn error ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{error}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Paper elevation={2} className={classes.pad}>\n\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={24}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List className={classes.optionList} dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={optionsPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingOptionPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.validateWorkingOption(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"250px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Option *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath).length ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypePath) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.type\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingOptionPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingOptionPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.which === 13 /* Enter */ &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value.trim() &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateWorkingOption(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingOptionPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_isNil(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.validateWorkingOption(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, workingOptionPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(workingOptionPath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!_get(values, workingOptionPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, optionsPath).length > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? _get(values, optionsPath).map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableGutters\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.optionListItem}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LabelImportant\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={option} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeOption(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingMinSupportOptionPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminOptionsPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxOptionsPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvoteTypeTextPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Clear\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Clear />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/**\n\t\t\t\t\t\t\t\t\t\t\t\t\t * Minimum Options\n\t\t\t\t\t\t\t\t\t\t\t\t\t * Maximum Options\n\t\t\t\t\t\t\t\t\t\t\t\t\t */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(_get(values, voteTypeTextPath) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAPPROVAL_CONFIG.name ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypeTextPath) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tINSTANT_RUNOFF_CONFIG.name) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={8} item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={minOptionsPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Minimum Options Allowed *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, minOptionsPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, minOptionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={this.getMinimumOptions(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth=\"240px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={maxOptionsPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Maximum Options Allowed *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, maxOptionsPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, maxOptionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={215}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={this.getMaximumOptions(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, optionsPath),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, minOptionsPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth=\"240px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item container xs={12}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<SectionHeader text=\"Winner Criteria\" />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{_get(values, enableMinSupportConfigPath) ? (\n\t\t\t\t\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Minimum Support *</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{submitCount > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, requiredSupportPath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(errors, requiredSupportPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightMinSupportPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Weighted Ratio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightMinSupportPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightMinSupportPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingUnweightMinSupportPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Unweighted Ratio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingUnweightMinSupportPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingUnweightMinSupportPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, voteTypePath) !== '' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// vote type is selected\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypeTextPath) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tBINARY_CONFIG.name ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// binary vote selected\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!_isEmpty(_get(values, optionsPath)) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// options exist\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormSelectField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingMinSupportOptionPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Applies to option *\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={_get(values, optionsPath).map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { value, text: value };\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingMinSupportOptionPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingMinSupportOptionPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminWidth={215}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo Options Found\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApplies to all options\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSelect a Vote Type\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Not Applicable</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\t\tdisableGutterBottom={true}\n\t\t\t\t\t\t\t\t\t\t\ttext=\"Acceptance Criteria\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\tname={checkedTurnoutPath}\n\t\t\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkedTurnoutPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = !_get(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckedTurnoutPath\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(checkedTurnoutPath, newValue);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!newValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reset turnout acceptance criteria\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldError(checkedTurnoutPath, null);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingWeightMinTurnoutPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkingUnweightMinTurnoutPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Minimum Turnout' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(_get(values, checkedTurnoutPath) ? ' *' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{submitCount > 0 && _get(errors, checkedTurnoutPath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(errors, checkedTurnoutPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t\t\t\t\t{this.supportsWeightedMinTurnoutCriteria(\n\t\t\t\t\t\t\t\t\t\t\t\t_get(values, voteTypePath)\n\t\t\t\t\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={workingWeightMinTurnoutPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={'Weighted Ratio'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, checkedTurnoutPath)}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingWeightMinTurnoutPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingWeightMinTurnoutPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\t\tname={workingUnweightMinTurnoutPath}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={'Unweighted Ratio'}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={!_get(values, checkedTurnoutPath)}\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, workingUnweightMinTurnoutPath) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t_get(touched, workingUnweightMinTurnoutPath)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tisNotFast\n\t\t\t\t\t\t\t\t\t\t\t\twidth={138}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: !_get(values, checkedTurnoutPath) ? 'gray' : '',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\txs={4}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\tApplies to all eligible voters.\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} className={classes.stepperButtons}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{isSubmitting && errors && window.scrollTo(0, 0)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\nCreateVoteForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: 15,\n\t},\n\traiseRadio: {\n\t\tposition: 'relative',\n\t\ttop: '-16px',\n\t},\n\toptionList: {\n\t\toverflow: 'auto',\n\t},\n\toptionListItem: {\n\t\tpadding: '0px',\n\t\twordWrap: 'break-word',\n\t},\n\tstepperButtons: {\n\t\tmarginLeft: '-15px',\n\t},\n\terrorText: {\n\t\tcolor: 'red',\n\t\tfontSize: '16px',\n\t\tborderColor: 'red',\n\t\tborderStyle: 'solid',\n\t\tpadding: 8,\n\t\twidth: 200,\n\t},\n\tblockFields: {\n\t\tmarginLeft: '22px',\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withFactomCli, withStyles(styles));\nexport default enhancer(CreateVoteForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport EligibleVotersForm from './EligibleVotersForm.js';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport PreviewVote from './PreviewVote.js';\nimport FinalStep from './FinalStep.js';\nimport VoteConfiguration from './VoteConfiguration';\nimport CreateVoteForm from './CreateVoteForm';\n\nclass CreateVoteStepper extends React.Component {\n\tstate = {\n\t\tactiveStep: 0,\n\t};\n\n\thandleNext = () => {\n\t\tconst { activeStep } = this.state;\n\t\tthis.setState({\n\t\t\tactiveStep: activeStep + 1,\n\t\t});\n\t};\n\n\thandleBack = () => {\n\t\tconst { activeStep } = this.state;\n\t\tthis.setState({\n\t\t\tactiveStep: activeStep - 1,\n\t\t});\n\t};\n\n\tgetStepContent(stepIndex, createVoteSnapshot) {\n\t\tswitch (stepIndex) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<EligibleVotersForm\n\t\t\t\t\t\thandleNext={this.handleNext}\n\t\t\t\t\t\thandleBack={this.handleBack}\n\t\t\t\t\t\teligibleVotersForm={createVoteSnapshot.eligibleVotersForm}\n\t\t\t\t\t\tupdateParticipants={createVoteSnapshot.updateParticipants}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<CreateVoteForm\n\t\t\t\t\t\thandleNext={this.handleNext}\n\t\t\t\t\t\thandleBack={this.handleBack}\n\t\t\t\t\t\tupdatePoll={createVoteSnapshot.updatePoll}\n\t\t\t\t\t\tpollForm={createVoteSnapshot.pollForm}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<PreviewVote\n\t\t\t\t\t\thandleNext={this.handleNext}\n\t\t\t\t\t\thandleBack={this.handleBack}\n\t\t\t\t\t\tpoll={createVoteSnapshot.pollForm}\n\t\t\t\t\t\teligibleVoters={\n\t\t\t\t\t\t\tcreateVoteSnapshot.eligibleVotersForm.eligibleVoters\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateCreatePollResult={createVoteSnapshot.updateCreatePollResult}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn 'Content D';\n\t\t}\n\t}\n\n\tgetSteps() {\n\t\treturn ['Select Voters', 'Configure Poll', 'Preview & Sign'];\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst steps = this.getSteps();\n\t\tconst { activeStep } = this.state;\n\n\t\treturn (\n\t\t\t<VoteConfiguration>\n\t\t\t\t{(createVoteSnapshot) => (\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs={2} />\n\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t<Paper className={classes.pad}>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\t\t\t\t\tstyle={{ opacity: '.6' }}\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCreate Poll\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Stepper activeStep={activeStep}>\n\t\t\t\t\t\t\t\t\t{steps.map((label) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t\t\t\t\t\t</Step>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Stepper>\n\t\t\t\t\t\t\t\t{this.state.activeStep === steps.length ? (\n\t\t\t\t\t\t\t\t\t<FinalStep\n\t\t\t\t\t\t\t\t\t\tcreatePollResult={createVoteSnapshot.createPollResult}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{this.getStepContent(activeStep, createVoteSnapshot)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={2} />\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</VoteConfiguration>\n\t\t);\n\t}\n}\n\nCreateVoteStepper.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nconst styles = (theme) => ({\n\tpad: {\n\t\tpadding: '15px',\n\t},\n});\n\nexport default withStyles(styles)(CreateVoteStepper);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../vote/shared/SectionHeader';\nimport FormTextField from '../component/form/FormTextField';\nimport { withLedger } from '../context/LedgerContext';\nimport { withVote } from '../context/VoteContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { REGEX_CHAIN_ID } from '../vote/create/VOTE_CONSTANTS';\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\nimport Paper from '@material-ui/core/Paper';\n\n/**\n * Constants\n */\nconst transactionErrorPath = 'transactionError';\nconst ledgerStatusPath = 'ledgerStatus';\nconst chainIdPath = 'chainId';\nconst resultPath = 'result';\n\nclass SetLedgerIdForm extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tledgerController: { storeChainId },\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t\tchainId: '',\n\t\t\t\t\tresult: null,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tactions.setFieldValue(transactionErrorPath, null);\n\n\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\tledgerStatusPath,\n\t\t\t\t\t\t'Attempting to store identity... check Ledger Nano S display'\n\t\t\t\t\t);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait storeChainId(_get(values, chainIdPath));\n\n\t\t\t\t\t\tactions.setFieldValue(ledgerStatusPath, null);\n\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\tresultPath,\n\t\t\t\t\t\t\t'The Identity Chain ID has been successfully saved to the Ledger device.'\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\tawait actions.resetForm();\n\t\t\t\t\t\tawait actions.setFieldValue(chainIdPath, _get(values, chainIdPath));\n\t\t\t\t\t\tactions.setFieldValue(transactionErrorPath, 'Error: ' + e.message);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[chainIdPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.matches(REGEX_CHAIN_ID, {\n\t\t\t\t\t\t\tmessage: 'Invalid Chain ID',\n\t\t\t\t\t\t\texcludeEmptyString: true,\n\t\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched, values, handleReset }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<SectionHeader\n\t\t\t\t\t\t\t\t\t\ttext=\"Set Factom Identity Chain on Ledger Nano S\"\n\t\t\t\t\t\t\t\t\t\tdisableGutterBottom\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tlabel=\"Identity Chain ID\"\n\t\t\t\t\t\t\t\t\t\tname={chainIdPath}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t_get(errors, chainIdPath) && _get(touched, chainIdPath)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, transactionErrorPath)) && (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.errorText}>\n\t\t\t\t\t\t\t\t\t\t\t{_get(values, transactionErrorPath)}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{!_isNil(_get(values, resultPath)) ? (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, resultPath)}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSet Identity\n\t\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={20} />\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && _get(values, ledgerStatusPath) && (\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.ledgerStatus}>\n\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, ledgerStatusPath)}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nSetLedgerIdForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '16px' },\n\tledgerStatus: { display: 'inline-block', paddingLeft: '10px' },\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\t\tpaddingTop: 3,\n\t\tpaddingBottom: 8,\n\t},\n\tsuccessIcon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t},\n});\n\nconst enhancer = _flowRight(withVote, withLedger, withStyles(styles));\n\nexport default enhancer(SetLedgerIdForm);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CreateLedgerIdForm from './CreateLedgerIdForm';\nimport SetLedgerIdForm from './SetLedgerIdForm';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nclass LedgerIdentityManager extends React.Component {\n\tstate = {\n\t\ttabValue: 0,\n\t};\n\n\thandleChange = (event, tabValue) => {\n\t\tthis.setState({ tabValue });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<Grid container justify=\"center\">\n\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t<Paper elevation={3} className={classes.paper}>\n\t\t\t\t\t\t<Grid item container xs={12} justify=\"center\">\n\t\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\t\t\tLedger Identity Manager\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Paper elevation={3} className={classes.paper}>\n\t\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\t\tvalue={this.state.tabValue}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tab label=\"Create Identity\" />\n\t\t\t\t\t\t\t\t<Tab label=\"Set Identity\" />\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{this.state.tabValue === 0 && <CreateLedgerIdForm />}\n\t\t\t\t\t\t\t{this.state.tabValue === 1 && <SetLedgerIdForm />}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nLedgerIdentityManager.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({ paper: { minWidth: 565, padding: 16 } });\n\nexport default withStyles(styles)(LedgerIdentityManager);\n","import { HashRouter as Router, Route } from 'react-router-dom';\nimport _flowRight from 'lodash/flowRight';\nimport React, { Component } from 'react';\nimport { withWalletContext } from './context/WalletContext';\nimport WalletManager from './walletManager/WalletManager';\nimport AddInitialWallet from './addWallet/AddInitialWallet';\nimport VoteListing from './vote/listing/VoteListing';\nimport VoteTabContent from './vote/view/VoteTabContent';\nimport CreateVoteStepper from './vote/create/CreateVoteStepper';\nimport LedgerIdentityManager from './ledgerIdentity/LedgerIdentityManager';\n// import ManageVoterList from './vote/voterList/ManageVoterList.js';\n\nclass AppRouter extends Component {\n\trender() {\n\t\tconst {\n\t\t\twalletController: {\n\t\t\t\treadyToManageWallet,\n\t\t\t\tisWalletEmpty,\n\t\t\t\tsetReadyToManageWallet,\n\t\t\t},\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\treadyToManageWallet && !isWalletEmpty() ? (\n\t\t\t\t\t\t\t\t<WalletManager />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<AddInitialWallet\n\t\t\t\t\t\t\t\t\tsetReadyToManageWallet={setReadyToManageWallet}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route exact path=\"/vote\" component={VoteListing} />\n\t\t\t\t\t<Route exact path=\"/viewVote\" component={VoteTabContent} />\n\t\t\t\t\t<Route exact path=\"/createVote\" component={CreateVoteStepper} />\n\t\t\t\t\t<Route exact path=\"/ledgerId\" component={LedgerIdentityManager} />\n\t\t\t\t\t{/* <Route exact path=\"/manageVoters\" component={ManageVoterList} /> */}\n\t\t\t\t</React.Fragment>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst enhancer = _flowRight(withWalletContext);\n\nexport default enhancer(AppRouter);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Header from './header/Header';\nimport { HashRouter as Router } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRootTheme from './withRootTheme';\nimport WalletController from './context/WalletController';\nimport SeedController from './context/SeedController';\nimport FactomCliController from './context/FactomCliController';\nimport NetworkController from './context/NetworkController';\nimport LedgerController from './context/LedgerController';\nimport VoteController from './context/VoteController';\nimport IdentityController from './context/IdentityController';\nimport Disclaimer from './Disclaimer';\nimport TestnetWarningBar from './TestnetWarningBar';\nimport AppRouter from './AppRouter';\n\nclass App extends Component {\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<NetworkController>\n\t\t\t\t\t\t<FactomCliController>\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{/* <Disclaimer /> */}\n\t\t\t\t\t\t\t\t<WalletController>\n\t\t\t\t\t\t\t\t\t<VoteController>\n\t\t\t\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t\t\t\t<SeedController>\n\t\t\t\t\t\t\t\t\t\t\t<IdentityController>\n\t\t\t\t\t\t\t\t\t\t\t\t<LedgerController>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.body}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AppRouter />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TestnetWarningBar />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</LedgerController>\n\t\t\t\t\t\t\t\t\t\t\t</IdentityController>\n\t\t\t\t\t\t\t\t\t\t</SeedController>\n\t\t\t\t\t\t\t\t\t</VoteController>\n\t\t\t\t\t\t\t\t</WalletController>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t</FactomCliController>\n\t\t\t\t\t</NetworkController>\n\t\t\t\t</React.Fragment>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tbody: {\n\t\twidth: '1200px',\n\t\tmargin: '0 auto',\n\t},\n});\n\nconst enhancer = _flowRight(withRootTheme, withStyles(styles));\n\nexport default enhancer(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nunregister();\n","module.exports = __webpack_public_path__ + \"static/media/ledgerLogo.e1222cef.svg\";","import React from 'react';\n\nconst NetworkContext = React.createContext();\n\nconst withNetwork = (BaseComponent) => (props) => (\n\t<NetworkContext.Consumer>\n\t\t{(networkController) => (\n\t\t\t<BaseComponent {...props} networkController={networkController} />\n\t\t)}\n\t</NetworkContext.Consumer>\n);\n\nexport { NetworkContext, withNetwork };\n","import React from 'react';\n\nconst WalletContext = React.createContext();\n\nconst withWalletContext = (BaseComponent) => (props) => (\n\t<WalletContext.Consumer>\n\t\t{(walletController) => (\n\t\t\t<BaseComponent {...props} walletController={walletController} />\n\t\t)}\n\t</WalletContext.Consumer>\n);\n\nexport { WalletContext, withWalletContext };\n","module.exports = __webpack_public_path__ + \"static/media/headerLogo.e79a5c9c.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _flowRight from 'lodash/flowRight';\nimport { LedgerContext } from './LedgerContext';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport Fct from '@factoid.org/hw-app-fct';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withWalletContext } from '../context/WalletContext';\nimport { Transaction } from 'factom/dist/factom';\n/**\n * Constants\n */\nconst BIP_32_COIN_TYPES = { fct: 131, ec: 132, identity: 281 };\n\nclass LedgerController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLedgerConnected: this.isLedgerConnected,\n\t\t\tgetLedgerAddresses: this.getLedgerAddresses,\n\t\t\tgetLedgerIdentityAddress: this.getLedgerIdentityAddress,\n\t\t\tsignTransaction: this.signTransaction,\n\t\t\tsignMessageRaw: this.signMessageRaw,\n\t\t\tcheckAddress: this.checkAddress,\n\t\t\tstoreChainId: this.storeChainId,\n\t\t};\n\t}\n\n\tgetLedgerAddresses = async (startIndex, amount, type) => {\n\t\tconst result = [];\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\n\n\t\tconst transport = await TransportU2F.create();\n\t\tconst ledger = new Fct(transport);\n\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\n\t\t\tconst path = \"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + index;\n\t\t\tconst address_o = await ledger.getAddress(path);\n\n\t\t\tresult.push({ address: address_o.address });\n\t\t}\n\n\t\ttransport.close();\n\n\t\treturn result;\n\t};\n\n\tgetLedgerIdentityAddress = async (index) => {\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst coinType = BIP_32_COIN_TYPES['identity'];\n\n\t\tconst transport = await TransportU2F.create();\n\t\tconst ledger = new Fct(transport);\n\n\t\tconst path = \"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + index;\n\t\tconst address_o = await ledger.getAddress(path);\n\n\t\ttransport.close();\n\n\t\treturn address_o;\n\t};\n\n\tsignTransaction = async ({ fromAddr, toAddr, amount, index }) => {\n\t\tlet signedTX = {};\n\t\tlet transport = await TransportU2F.create();\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst path = \"44'/131'/\" + bip32Account + \"'/0/\" + index;\n\n\t\tconst ledger = new Fct(transport);\n\n\t\tconst unsignedTX = Transaction.builder()\n\t\t\t.input(\n\t\t\t\tfromAddr,\n\t\t\t\tamount + (await this.props.walletController.getFactoshiFee())\n\t\t\t)\n\t\t\t.output(toAddr, amount)\n\t\t\t.build();\n\n\t\tconst result = await ledger.signTransaction(\n\t\t\tpath,\n\t\t\tunsignedTX.marshalBinarySig.toString('hex')\n\t\t);\n\n\t\tif (result) {\n\t\t\tsignedTX = Transaction.builder(unsignedTX)\n\t\t\t\t.rcdSignature(\n\t\t\t\t\tBuffer.from(result['r'], 'hex'),\n\t\t\t\t\tBuffer.from(result['s'], 'hex')\n\t\t\t\t)\n\t\t\t\t.build();\n\t\t}\n\t\ttransport.close();\n\t\treturn signedTX;\n\t};\n\n\tsignMessageRaw = async (message) => {\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst index = 0;\n\t\tconst path =\n\t\t\t\"44'/\" +\n\t\t\tBIP_32_COIN_TYPES['identity'] +\n\t\t\t\"'/\" +\n\t\t\tbip32Account +\n\t\t\t\"'/0/\" +\n\t\t\tindex;\n\n\t\tlet transport = await TransportU2F.create();\n\n\t\ttry {\n\t\t\tconst ledger = new Fct(transport);\n\n\t\t\tconst result = await ledger.signMessageRaw(path, message);\n\n\t\t\treturn result.s;\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to sign raw transaction from Ledger :', err);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\ttransport.close();\n\t\t}\n\t};\n\n\tcheckAddress = async (activeFctWallet, type) => {\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\n\n\t\tconst path =\n\t\t\t\"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + activeFctWallet.index;\n\n\t\ttry {\n\t\t\tvar transport = await TransportU2F.create();\n\n\t\t\tconst ledger = new Fct(transport);\n\n\t\t\tawait ledger.getAddress(path, true);\n\n\t\t\ttransport.close();\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed getFctAddr from Ledger Nano X/S :', err);\n\t\t}\n\t};\n\n\tisLedgerConnected = async () => {\n\t\tlet result = false;\n\t\ttry {\n\t\t\tlet transport = await TransportU2F.create();\n\t\t\tconst ledger = new Fct(transport);\n\t\t\tawait ledger.getAppConfiguration();\n\n\t\t\tresult = true;\n\n\t\t\ttransport.close();\n\t\t} catch (err) {\n\t\t\tconsole.log('Transport Err:' + err);\n\t\t}\n\t\treturn result;\n\t};\n\n\tstoreChainId = async (chainId) => {\n\t\tlet transport = await TransportU2F.create();\n\n\t\ttry {\n\t\t\tconst fct = new Fct(transport);\n\n\t\t\tawait fct.storeChainId(chainId);\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to store chain ID to Ledger:', err);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\ttransport.close();\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<LedgerContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</LedgerContext.Provider>\n\t\t);\n\t}\n}\n\nLedgerController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nconst enhancer = _flowRight(withWalletContext, withNetwork);\n\nexport default enhancer(LedgerController);\n","module.exports = __webpack_public_path__ + \"static/media/factomProtocolLogo.baaa561a.svg\";","import React from 'react';\n\nconst LedgerContext = React.createContext();\n\nconst withLedger = (BaseComponent) => (props) => (\n\t<LedgerContext.Consumer>\n\t\t{(ledgerController) => (\n\t\t\t<BaseComponent {...props} ledgerController={ledgerController} />\n\t\t)}\n\t</LedgerContext.Consumer>\n);\n\nexport { LedgerContext, withLedger };\n"],"sourceRoot":""}